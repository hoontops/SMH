<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="PCM01700T02" width="1258" height="316" titletext="AOI 불량" onload="fn_init">
    <Layouts>
      <Layout height="316" width="1258">
        <Static id="title1_01" taborder="0" text="검사 결과 등록" left="0" height="34" cssclass="sta_WF_subTitle2" usedecorate="true" top="0" width="97" fittocontents="width"/>
        <Grid id="grd_AOIDefectInfo" taborder="2" left="60%" top="34" autoenter="select" binddataset="ds_defectInfoData" cssclass="grd_sub" bottom="0" right="0">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="40"/>
                <Column size="100"/>
                <Column size="90"/>
                <Column size="120"/>
                <Column size="100"/>
                <Column size="90"/>
                <Column size="90"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
                <Row size="24" band="summ"/>
              </Rows>
              <Band id="head">
                <Cell text="No"/>
                <Cell col="1" text="불량그룹" tooltiptext="DEFECTGROUP"/>
                <Cell col="2" text="불량코드" tooltiptext="DEFECTCODE"/>
                <Cell col="3" text="불량항목" tooltiptext="DEFECTITEM"/>
                <Cell col="4" text="Layer" tooltiptext="LAYER"/>
                <Cell col="5" text="불량수량" tooltiptext="DEFECTQTY"/>
                <Cell col="6" text="불량률" tooltiptext="DEFECTRATE"/>
              </Band>
              <Band id="body">
                <Cell text="expr:currow+1"/>
                <Cell col="1" text="bind:DEFECTCODEGROUPNAME" textAlign="left"/>
                <Cell col="2" text="bind:DEFECTCODE" textAlign="left"/>
                <Cell col="3" text="bind:DEFECTCODENAME" textAlign="left"/>
                <Cell col="4" text="bind:LAYERID" textAlign="left"/>
                <Cell col="5" text="bind:DEFECTQTY" displaytype="mask" maskeditformat="#,###,###,##0.#####" textAlign="right" maskeditautoselect="true"/>
                <Cell col="6" text="bind:DEFECTRATE" displaytype="mask" maskeditformat="#,##0" textAlign="right"/>
              </Band>
              <Band id="summary">
                <Cell/>
                <Cell col="1" tooltiptext="SUM" text="합계" textAlign="center" cssclass="cell_blue"/>
                <Cell col="2"/>
                <Cell col="3"/>
                <Cell col="4"/>
                <Cell col="5" displaytype="mask" maskeditformat="#,###,###,##0.#####" text="expr:dataset.getSum(&quot;DEFECTQTY&quot;)" cssclass="cell_blue"/>
                <Cell col="6" expandchar="%" expandsize="24" displaytype="mask" maskeditformat="#,##0.00" text="expr:dataset.getSum(&quot;DEFECTRATE&quot;)" maskedittype="number" maskeditpostfixtext=" %" cssclass="cell_blue"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Grid id="grd_AOIDefect" taborder="1" left="0" top="34" autoenter="select" binddataset="ds_defectList" cssclass="grd_sub" bottom="0" right="grd_AOIDefectInfo:10" onexpandup="grd_AOIDefect_onexpandup">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="40"/>
                <Column size="80"/>
                <Column size="100"/>
                <Column size="90"/>
                <Column size="120"/>
                <Column size="100"/>
                <Column size="90"/>
                <Column size="90"/>
                <Column size="90"/>
                <Column size="100"/>
                <Column size="90"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
                <Row size="26" band="summ"/>
              </Rows>
              <Band id="head">
                <Cell text="No"/>
                <Cell col="1" text="불량그룹ID" tooltiptext="DEFECTCODEGROUPID" cssclass="cell_point"/>
                <Cell col="2" text="불량그룹" tooltiptext="DEFECTGROUP"/>
                <Cell col="3" text="불량코드" tooltiptext="DEFECTCODE" cssclass="cell_point"/>
                <Cell col="4" text="불량항목" tooltiptext="DEFECTITEM"/>
                <Cell col="5" text="층수" tooltiptext="LAYER" cssclass="cell_point"/>
                <Cell col="6" text="불량수" tooltiptext="QCMFINALINSPECTSPECOUT" cssclass="cell_point"/>
                <Cell col="7" text="분석 대상 수" tooltiptext="ANALYSISTARGET"/>
                <Cell col="8" text="분석양품" tooltiptext="ANALYSISGOODQTY"/>
                <Cell col="9" text="분석양품(PNL)" tooltiptext="ANALYSISGOODPNLQTY"/>
                <Cell col="10" text="최종불량수" tooltiptext="FINALDEFECTQTY"/>
              </Band>
              <Band id="body">
                <Cell text="expr:currow+1"/>
                <Cell col="1" text="bind:DEFECTCODEGROUPID" expandimage="url('theme://images/grd_expand.png')" expandshow="show" expandsize="24"/>
                <Cell col="2" text="bind:DEFECTCODEGROUPNAME" textAlign="left"/>
                <Cell col="3" text="bind:DEFECTCODE" expandimage="url('theme://images/grd_expand.png')" expandshow="show" expandsize="24"/>
                <Cell col="4" text="bind:DEFECTCODENAME" textAlign="left"/>
                <Cell col="5" text="bind:LAYER" textAlign="left" displaytype="combocontrol" combodataset="ds_layerList" combocodecol="LAYERID" combodatacol="LAYERNAME" edittype="expr:comp.parent.fn_AOIDefetView_ShowingEditor(currow, dataset.getColID(4), 'combo')"/>
                <Cell col="6" text="bind:PCSQTY" displaytype="mask" maskeditformat="#,###,###,##0.#####" textAlign="right" maskeditautoselect="true" edittype="expr:comp.parent.fn_AOIDefetView_ShowingEditor(currow, dataset.getColID(5), 'mask')"/>
                <Cell col="7" text="bind:ANALYSISQTY" displaytype="mask" maskeditformat="#,###,###,##0.#####" textAlign="right" maskeditautoselect="true" edittype="expr:comp.parent.fn_AOIDefetView_ShowingEditor(currow, dataset.getColID(6), 'mask')"/>
                <Cell col="8" text="bind:ANALYSISGOODQTY" displaytype="mask" maskeditformat="#,###,###,##0.#####" textAlign="right" maskeditautoselect="true" edittype="expr:comp.parent.fn_AOIDefetView_ShowingEditor(currow, dataset.getColID(7), 'mask')"/>
                <Cell col="9" text="bind:ANALYSISGOODPNLQTY" displaytype="mask" maskeditformat="#,###,###,##0.#####" textAlign="right" maskeditautoselect="true" edittype="expr:comp.parent.fn_AOIDefetView_ShowingEditor(currow, dataset.getColID(8), 'mask')"/>
                <Cell col="10" text="bind:FINALDEFECTQTY" displaytype="mask" maskeditformat="#,###,###,##0.#####" textAlign="right" maskeditautoselect="true" edittype="expr:comp.parent.fn_AOIDefetView_ShowingEditor(currow, dataset.getColID(9), 'mask')"/>
              </Band>
              <Band id="summary">
                <Cell/>
                <Cell col="1" text="합계" textAlign="center" tooltiptext="SUM" cssclass="cell_blue"/>
                <Cell col="2"/>
                <Cell col="3"/>
                <Cell col="4"/>
                <Cell col="5"/>
                <Cell col="6" displaytype="mask" maskeditformat="#,###,###,##0.#####" text="expr:dataset.getSum(&quot;PCSQTY&quot;)" cssclass="cell_blue"/>
                <Cell col="7" displaytype="mask" maskeditformat="#,###,###,##0.#####" text="expr:dataset.getSum(&quot;ANALYSISQTY&quot;)" cssclass="cell_blue"/>
                <Cell col="8" displaytype="mask" maskeditformat="#,###,###,##0.#####" text="expr:dataset.getSum(&quot;ANALYSISGOODQTY&quot;)" cssclass="cell_blue"/>
                <Cell col="9" displaytype="mask" maskeditformat="#,###,###,##0.#####" text="expr:dataset.getSum(&quot;ANALYSISGOODPNLQTY&quot;)" cssclass="cell_blue"/>
                <Cell col="10" displaytype="mask" maskeditformat="#,###,###,##0.#####" text="expr:dataset.getSum(&quot;FINALDEFECTQTY&quot;)" cssclass="cell_blue"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="sta_cnt_ds_defectList" taborder="6" text="Count : &lt;fc v=&quot;#f31d24&quot;&gt;0&lt;/fc&gt;" left="title1_01:0" top="0" height="34" cssclass="sta_WF_subTitle" usedecorate="true" padding="5px 0px 0px" width="140"/>
        <CheckBox id="chk_ReworkPublish" taborder="3" text="재작업 발행" left="sta_cnt_ds_defectList:0" top="9" width="86" height="21" fittocontents="width"/>
        <CheckBox id="chk_AOIDefectPrint" taborder="4" text="불량 데이터 출력" left="chk_ReworkPublish:20" top="9" width="114" height="21" fittocontents="width"/>
        <Static id="title1_01_00" taborder="5" text="설비 Defect Data" left="60%" height="34" cssclass="sta_WF_subTitle2" usedecorate="true" top="0" width="114" fittocontents="width"/>
        <Static id="sta_cnt_ds_defectInfoData" taborder="7" text="Count : &lt;fc v=&quot;#f31d24&quot;&gt;0&lt;/fc&gt;" left="title1_01_00:0" top="0" height="34" cssclass="sta_WF_subTitle" usedecorate="true" padding="5px 0px 0px" width="140"/>
        <Div id="div_AOIDefectBtnItem" taborder="8" left="583" top="0" height="34" right="grd_AOIDefectInfo:10">
          <Layouts>
            <Layout>
              <Button id="btn_grdDel" taborder="0" top="6" width="26" height="24" cssclass="btn_WF_grdDel" tooltiptext="삭제" right="0" onclick="div_AOIDefectBtnItem_btn_grdDel_onclick"/>
              <Button id="btn_grdAdd" taborder="1" top="6" width="26" height="24" cssclass="btn_WF_grdAdd" tooltiptext="추가" right="btn_grdDel:0" onclick="div_AOIDefectBtnItem_btn_grdAdd_onclick"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="div_AOIDefectInfoBtnItem" taborder="9" left="1140" top="0" width="118" height="34" visible="false">
          <Layouts>
            <Layout>
              <Button id="btn_grdDel" taborder="0" top="6" width="26" height="24" cssclass="btn_WF_grdDel" tooltiptext="삭제" right="0"/>
              <Button id="btn_grdAdd" taborder="1" top="6" width="26" height="24" cssclass="btn_WF_grdAdd" tooltiptext="추가" right="btn_grdDel:0"/>
            </Layout>
          </Layouts>
        </Div>
        <Button id="btn_AOIDefectMapLink" taborder="10" top="6" width="86" height="24" cssclass="btn_WF_grdCom" text="Defect Map" right="5" onclick="btn_AOIDefectMapLink_onclick"/>
        <PopupDiv id="pdv_DefectCodeGroupList" text="pdv_00" visible="false" left="153" top="129" width="450" height="221" cssclass="pdiv_POP">
          <Layouts>
            <Layout>
              <Grid id="grd_DefectCodeGroupList" taborder="0" left="0" top="0" right="0" bottom="0" binddataset="ds_defectcodegroup" oncelldblclick="pdv_DefectCodeGroupList_grd_DefectCodeGroupList_oncelldblclick">
                <Formats>
                  <Format id="default">
                    <Columns>
                      <Column size="100"/>
                      <Column size="200"/>
                    </Columns>
                    <Rows>
                      <Row size="24" band="head"/>
                      <Row size="24"/>
                    </Rows>
                    <Band id="head">
                      <Cell text="코드ID"/>
                      <Cell col="1" text="코드명"/>
                    </Band>
                    <Band id="body">
                      <Cell text="bind:CODEID"/>
                      <Cell col="1" text="bind:CODENAME"/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
            </Layout>
          </Layouts>
        </PopupDiv>
        <PopupDiv id="pdv_DefectCodeList" text="pdv_00" visible="false" left="413" top="179" width="450" height="221" cssclass="pdiv_POP">
          <Layouts>
            <Layout>
              <Grid id="grd_DefectCodeList" taborder="0" left="0" top="0" right="0" bottom="0" binddataset="ds_defectcode" oncelldblclick="pdv_DefectCodeList_grd_DefectCodeList_oncelldblclick">
                <Formats>
                  <Format id="default">
                    <Columns>
                      <Column size="100"/>
                      <Column size="200"/>
                      <Column size="100"/>
                    </Columns>
                    <Rows>
                      <Row size="24" band="head"/>
                      <Row size="24"/>
                    </Rows>
                    <Band id="head">
                      <Cell text="코드ID"/>
                      <Cell col="1" text="코드명"/>
                      <Cell col="2" text="불량그룹ID"/>
                    </Band>
                    <Band id="body">
                      <Cell text="bind:CODEID"/>
                      <Cell col="1" text="bind:CODENAME"/>
                      <Cell col="2" text="bind:DEFECTCODEGROUPID"/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
            </Layout>
          </Layouts>
        </PopupDiv>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[/***************************************************************************************
 * 시스템명 	: IFC MES시스템
 * 업무명 		: 작업종료 :: AOI 불량 탭
 * 파일명 		: PCM01700T02.xfdl
 * 작성자 		: 김성현
 * 작성일 		: 2021.04.29
 *
 * 설  명		: 작업종료 :: AOI 불량 탭
 *---------------------------------------------------------------------------------------
 * 변경일		변경자		변경내역
 *---------------------------------------------------------------------------------------
 * 2021.04.29	김성현   	최초작성
 *---------------------------------------------------------------------------------------
 ****************************************************************************************/

/**************************************************************************
 * 1. 필수 include
 ***************************************************************************/
include "lib::lib_bas.xjs";	//기준관리 공통 라이브러리 include
include "lib::lib_pcm.xjs";	
include "lib::lib_tom.xjs";	//TOM 공통 라이브러리 include
include "lib::lib_mtm.xjs";	//MTM 공통 라이브러리 include
include "pcm::pcmCommon.xjs"; //pcm 에서 사용하는 공통
/**************************************************************************
 * 2. FORM 변수 선언 영역
 ***************************************************************************/
 
// this.gf_getEnterpriseId()                            
// this.gf_getSiteType()                                 
// this.gf_getLanguageType()
// this.gf_getUserId()
// this.gf_getUserNm()

this._panelPerQty = 0; 	
this._panelQty = 0;
this._qty = 0;
this._visibleLotId = true;
this._visibleFileUp = false;
this._VisibleDefectDgree = false;
this._visibleTopDefectCode = false;
this._lotId = "";
this._queryVersion = "";

this.isSendStep       = false;
this.isRepairProcess  = false;
this._isRepairProcess = false;
this._isSendStep      = false;

this.ds_defectList_rowposition = -1;
/**************************************************************************
 * 3. FORM LOAD
 ***************************************************************************/
this.fn_init = function (obj:Form, e:nexacro.LoadEventInfo)
{
	console.log("PCM01700T02");
	
	this.nfn_formInit(obj);
	
	switch (this.parent.parent.parent.parent.parent.name)
	{
		case "PCM01700M":  //인수 등록
			this.setProcessType(this.ProcessType.LotAccept); 
			break;
		case "PCM01800M":  //작업 시작
			this.setProcessType(this.ProcessType.StartWork); 
			break;
		case "PCM01900M":  //작업 완료
			this.setProcessType(this.ProcessType.WorkCompletion); 
			break;
		case "PCM02100M":   //인계 등록
			this.setProcessType(this.ProcessType.TransitRegist); 
			break;
	}
	
	
	
// 	var vlotId = this.nfn_nvl(this.parent.parent.parent.parent.parent.div_work.form.div_search.form.edt_lotId.value, "");
// 	var vpfsDetail_tabSearch = this.parent.parent.parent.parent.parent.g_pfsDetail_tabSearch;
// 	
// 	if(vlotId != "" && vpfsDetail_tabSearch) this.fn_search();	
};

/**************************************************************************
 * 4. 공통버튼영역 (함수 삭제금지!!!!) 
 ***************************************************************************/


/**************************************************************************
 * 5. TRANSACTION, CALLBACK 영역
 ***************************************************************************/
this.fn_callBack = function (trId, errCD, errMsg)
{
	if (errCD != 0) 
	{
		this.gfn_Message("ProcessingError", trId + errMsg, "error", "ok");
		return;			
	}
	
	switch(trId) {	
		case "getCodeList":
			
			this.getDefectCodeList();
			
			break;
			
		case "getAoiDefectCodeByDefectCodeGroup":
		
			console.log("fn_search");  
	
			this.setAOIDefectPageVisible();
	
			break;
		case "selectDefectDataByEquipment":	
			
			if (this.isRepairProcess || this.isSendStep)
			{
			
				this.chk_ReworkPublish.set_value(false);
				this.chk_ReworkPublish.set_visible(false);

				this.div_AOIDefectBtnItem.set_visible(false);
				
				this.ds_defectParam.clearData();
				this.ds_defectParam.addRow();
				this.ds_defectParam.setColumn(0, "LOTID", this.parent.parent.parent.parent.parent.div_work.form.div_search.form.edt_lotId.value);
				this.ds_defectParam.setColumn(0, "LANGUAGETYPE", this.gf_getLanguageType());
				this.ds_defectParam.setColumn(0, "VERSION", "10001");

				var selectDefectMapDataTwoTypes = "";
				
				if (this.isRepairProcess)
					selectDefectMapDataTwoTypes = "selectDefectMapDataByWorkComplete";
				else
					selectDefectMapDataTwoTypes = "selectDefectMapDataForSend";
					
				var sSvcID = "selectDefectMapDataTwoTypes";
				var sController = "/pcm01900/" + selectDefectMapDataTwoTypes + ".do";
				var sInDatasets = "INPUT=ds_defectParam";
				var sOutDatasets = "ds_defectList=output";
				var sArgs = "";
				this.gfn_transaction(sSvcID, sController, sInDatasets, sOutDatasets, sArgs);
	
			} else {
				this.chk_ReworkPublish.set_visible(true);				
				
				this.ds_param.clearData();
				this.ds_param.addRow();
				this.ds_param.setColumn(0, "LANGUAGETYPE", this.gf_getLanguageType());
				this.ds_param.setColumn(0, "LOTID", this.parent.parent.parent.parent.parent.div_work.form.div_search.form.edt_lotId.value);
				this.ds_param.setColumn(0, "VERSION", "10001");
	
				var sSvcID = "getLayerListForAoiBbtDefect";
				var sController = "/pcm01900/getLayerListForAoiBbtDefect.do";
				var sInDatasets = "INPUT=ds_param";
				var sOutDatasets = "ds_layerList=output";
				var sArgs = "";
				this.gfn_transaction(sSvcID, sController, sInDatasets, sOutDatasets, sArgs);
				
			}	
	
			break;	
		
		case "selectDefectMapDataTwoTypes":
	
			this.ds_defectDistinctList.clearData();
			this.ds_defectDistinctList.copyData(this.ds_defectList);
			
			this.gf_distincDsFilter(this.ds_defectDistinctList, "LAYER");
			console.log("this.ds_defectDistinctList.getRowCount() >>" + this.ds_defectDistinctList.getRowCount());
			
			var dCnt = this.ds_defectDistinctList.getRowCount();
			for(var i = 0; i < dCnt; i++)
			{
				var nRow = this.ds_layerList.addRow();
				
				this.ds_layerList.setColumn(nRow, "LAYERID"  , this.nfn_nvl(this.ds_defectDistinctList.getColumn(i, "LAYER"), ""));
				this.ds_layerList.setColumn(nRow, "LAYERNAME", this.nfn_nvl(this.ds_defectDistinctList.getColumn(i, "LAYER"), ""));
			}
			
			this.grd_AOIDefect.updateToDataset(); // refresh 

			break;
			
		case "getLayerListForAoiBbtDefect":
		
			this.div_AOIDefectBtnItem.set_visible(true);

			var isReworkPublish = false;


			var cnt = this.ds_defectInfoData.getRowCount();
			for(var i = 0; i < cnt; i++)
			{
				var nRow = this.ds_defectList.addRow();

				this.ds_defectList.setColumn(nRow, "DEFECTCODEGROUPID", this.ds_defectInfoData.getColumn(i, "DEFECTCODEGROUPID"));
				this.ds_defectList.setColumn(nRow, "DEFECTCODEGROUPNAME", this.ds_defectInfoData.getColumn(i, "DEFECTCODEGROUPNAME"));
				this.ds_defectList.setColumn(nRow, "DEFECTCODE", this.ds_defectInfoData.getColumn(i, "DEFECTCODE"));
				this.ds_defectList.setColumn(nRow, "DEFECTCODENAME", this.ds_defectInfoData.getColumn(i, "DEFECTCODENAME"));
				this.ds_defectList.setColumn(nRow, "LAYER", this.ds_defectInfoData.getColumn(i, "LAYERID"));
				this.ds_defectList.setColumn(nRow, "PCSQTY", this.ds_defectInfoData.getColumn(i, "DEFECTQTY"));

				if (this.gf_getEnterpriseId()  == this.getEnterPrise_InterFlex())
				{

					var vDefectcodegroupId = this.nfn_nvl(this.ds_defectInfoData.getColumn(i, "DEFECTCODEGROUPID"), "");
					
					if (vDefectcodegroupId == "005") 
					{
						this.ds_defectList.setColumn(nRow, "ANALYSISQTY", this.ds_defectInfoData.getColumn(i, "DEFECTQTY"));
						this.ds_defectList.setColumn(nRow, "SEQUENCE", 1);

						isReworkPublish = true;
					}
					else
					{
						this.ds_defectList.setColumn(nRow, "SEQUENCE", 11);
					}
				}

				this.ds_defectList.setColumn(nRow, "ISCHANGE", "N");
			}
			

			if (this.gf_getEnterpriseId()  == this.getEnterPrise_InterFlex())
			{
				this.chk_ReworkPublish.set_enable(false);
				this.chk_ReworkPublish.set_value(isReworkPublish);
			}
				
			break;
		default:
	}
};


/**************************************************************************
 * 6. 팝업 호출/콜백
 **************************************************************************/
 this.fn_popupAfter = function(sPopupId, Variant)
 {  
 	var rtn = this.fv_rtnValue;	
     switch(sPopupId)
 	{

		default :
			break;
 	}	
 };

/**************************************************************************
 * 7. 기타 함수(화면 로컬 정의) 
 **************************************************************************/
 this.fn_initCombo = function ()
{	
	
	this.getDefectCodeGroupList();	
	
}

this.setLotInfo = function (lotId, panelPerQty, panelQty, qty, queryVersion, dataSet)
{
	var queryVersion = "10001";
	this._lotId = lotId;
	this._panelPerQty = panelPerQty;
	this._panelQty = panelQty;
	this._qty = qty;
	
	this.ds_lotInfoData.clearData();  // 1700M 에서 가져옴. 
	this.ds_lotInfoData.copyData(dataSet);

	this._queryVersion = queryVersion;
};

this.fn_search = function ()
{

 	var vLotId          = this.parent.parent.parent.parent.parent.g_LotId;
	var vPanelperQty    = this.parent.parent.parent.parent.parent.g_PanelperQty; 
	var vPnlQty         = this.parent.parent.parent.parent.parent.g_PnlQty;
	var vPcsQty         = this.parent.parent.parent.parent.parent.g_PcsQty;
	var vQueryVersion   = this.parent.parent.parent.parent.parent.queryVersion;
	var vLotInfoData    = this.parent.parent.parent.parent.parent.ds_lotInfo;
	
	this.setLotInfo(vLotId, vPanelperQty, vPnlQty, vPcsQty, vQueryVersion, vLotInfoData);
	
	this.fn_initCombo();
	

};

this.gf_distincDsFilter = function(objDs, sColID)
{
	var arrArgs	= sColID.split(",");
	var sFilterExpr		= "";
	var sFindRowExpr	= "";
	
	for (var i=0; i<arrArgs.length; i++)
	{
		if (objDs.getColumnInfo(arrArgs[i]) == null) continue;
		
		sFindRowExpr	+= (sFindRowExpr) ? " && " : "";
		sFindRowExpr	+= "" + arrArgs[i] + "=='\" + " + arrArgs[i] + " + \"'";
	}
	
	if (sFindRowExpr) {
		sFilterExpr	= "rowidx==dataset.findRowExpr(\"" + sFindRowExpr + "\")";
	}
	objDs.filter(sFilterExpr);
};

this.setAOIDefectPageVisible = function()
{
	this.isSendStep      = false;
	this.isRepairProcess = this.parent.parent.parent.parent.parent._isRepairProcess;
	
	//tabProcessFourStepDetail.SelectedTabPage = tpgAOIDefect;

	this._isRepairProcess = this.isRepairProcess;
	this._isSendStep = this.isSendStep;

	
	this.ds_param.clearData();
	this.ds_param.addRow();
	this.ds_param.setColumn(0, "LANGUAGETYPE", this.gf_getLanguageType());
	this.ds_param.setColumn(0, "LOTID", this.parent.parent.parent.parent.parent.div_work.form.div_search.form.edt_lotId.value);
	this.ds_param.setColumn(0, "PRODUCTDEFID", this.nfn_nvl(this.ds_lotInfoData.getColumn(0, "PRODUCTDEFID"), ""));
	this.ds_param.setColumn(0, "PRODUCTDEFVERSION", this.nfn_nvl(this.ds_lotInfoData.getColumn(0, "PRODUCTDEFVERSION"), ""));
	this.ds_param.setColumn(0, "EQUIPMENTTYPE", "AOI");
	this.ds_param.setColumn(0, "VERSION", "10001");
	

	var sSvcID = "selectDefectDataByEquipment";
	var sController = "/pcm01900/selectDefectDataByEquipment.do";
	var sInDatasets = "INPUT=ds_param";
	var sOutDatasets = "ds_defectInfoData=output";
	var sArgs = "";
	this.gfn_transaction(sSvcID, sController, sInDatasets, sOutDatasets, sArgs);
};

this.getAOIDefectDataSource = function()
{

	for(var i = 0; i < this.ds_defectList.getRowCount(); i++)
	{
		var layerRow = this.nfn_nvl(this.ds_defectList.getColumn(i, "LAYER"), "");
		if (this.nfn_isNull(layerRow))
		{
			var defectCode = this.nfn_nvl(this.ds_defectList.getColumn(i, "DEFECTCODE"), "");

			// 불량이 발생한 Layer를 선택하시기 바랍니다. Defect Code : {0}
			this.gfn_Message("SelectLayer", [defectCode], "warning", "ok");
			return;					
		}

		// ※ 주의 nexacro.toNumber 로 바꾸지 말것 
		var pcsQtyRow = this.nfn_nvl(this.ds_defectList.getColumn(i, "PCSQTY"), ""); 
		if (this.nfn_isNull(pcsQtyRow))
		{
			var defectCode = this.nfn_nvl(this.ds_defectList.getColumn(i, "DEFECTCODE"), "");

			// 불량 수량을 입력하시기 바랍니다. Defect Code : {0}
			this.gfn_Message("InputDefectQty", [defectCode], "warning", "ok");
			return;					
		}
		
		if (this._isRepairProcess)
		{
			var defectCodeGroupId = this.nfn_nvl(this.ds_defectList.getColumn(i, "DEFECTCODEGROUPID"), "");
			var defectCode        = this.nfn_nvl(this.ds_defectList.getColumn(i, "DEFECTCODE"), "");
			var analysisQty       = nexacro.toNumber(this.nfn_nvl(this.ds_defectList.getColumn(i, "ANALYSISQTY"), "0")); 

			if (this.gf_getEnterpriseId() == this.getEnterPrise_InterFlex() && defectCodeGroupId == "005")
			{
				var analysisGoodQtyRow     = this.nfn_nvl(this.ds_defectList.getColumn(i, "ANALYSISGOODQTY"), "");
				if (this.nfn_isNull(analysisGoodQtyRow))
				{
					// 분석 양품 수량을 입력하시기 바랍니다. Defect Code : {0}
					this.gfn_Message("InputAnalysisGoodQty", [defectCode], "warning", "ok");
					return;						
				}
			}
		}
	}

	if (this.gf_getEnterpriseId() == this.getEnterPrise_InterFlex() && !_isRepairProcess && !_isSendStep)
	{
		
		this.ds_defectList.filter("DEFECTCODEGROUPID == '005' AND ANALYSISQTY > 0");
		if (this.ds_defectList.getRowCount() > 0)
		{
			this.chk_ReworkPublish.set_value(true);	
		}
		this.ds_defectList.filter("");
	}


	return this.ds_defectList;
};

/*
 *	불량그룹 리스트
 */
this.getDefectCodeGroupList = function ()
{
	this.ds_temp.clear();
	this.pfn_DatasetAddColumn(this.ds_temp, "CODECLASSID,LANGUAGETYPE,VERSION");
	
	
	this.ds_temp.setColumn(0, "CODECLASSID" , "DefectMapDefectGroup");
	this.ds_temp.setColumn(0, "LANGUAGETYPE", this.gf_getLanguageType());
	this.ds_temp.setColumn(0, "VERSION", "00001");

	this.pfn_CostomQuery(this.ds_temp, this.ds_defectcodegroup, "getCodeList");
	
};

/*
 *	불량코드 리스트 
 */
this.getDefectCodeList = function ()
{
	this.ds_temp.clear();
	this.pfn_DatasetAddColumn(this.ds_temp, "LANGUAGETYPE,VERSION");
	
	this.ds_temp.setColumn(0, "LANGUAGETYPE", this.gf_getLanguageType());
	this.ds_temp.setColumn(0, "LOTID", "10001");

	this.pfn_CostomQuery(this.ds_temp, this.ds_defectcode, "getAoiDefectCodeByDefectCodeGroup");
	
};


/**************************************************************************
 * 8. 이벤트 
 ***************************************************************************/

this.getIsReworkPublishChecked = function()
{
	return this.chk_ReworkPublish.value;
};

this.ds_defectList_onrowposchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo)
{
	this.ds_defectList_rowposition = e.newrow;
};

this.div_AOIDefectBtnItem_btn_grdAdd_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var nRow = this.ds_defectList.addRow();
	this.ds_defectList.setColumn(nRow, "ISCHANGE", "Y");
};

this.div_AOIDefectBtnItem_btn_grdDel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var nRow = this.ds_defectList.rowcount == 1 ? 0 : this.ds_defectList_rowposition;
	this.ds_defectList.deleteRow(nRow);	
};

this.fn_AOIDefetView_ShowingEditor = function(currRow, focusedFieldName, paramEditType)
{
	console.log("fn_AOIDefetView_ShowingEditor");
	console.log("focusedFieldName >>" + focusedFieldName);
	
	var isChangeRow = this.nfn_nvl(this.ds_defectList.getColumn(currRow, "ISCHANGE"), "");
	var isChangeCell = false;

	if (isChangeRow == "N")
	{
		if (this.gf_getEnterpriseId() == this.getEnterPrise_InterFlex())
		{
			var defectCodeGroupId = this.nfn_nvl(this.ds_defectList.getColumn(currRow, "DEFECTCODEGROUPID"), "");

			if (this._isRepairProcess || this._isSendStep)
			{
				if ((focusedFieldName == "ANALYSISGOODQTY" || focusedFieldName == "ANALYSISGOODPNLQTY") && defectCodeGroupId == "005")
					isChangeCell = true;
			}
			else
			{
				if (focusedFieldName == "LAYER")
					isChangeCell = true;

				if (focusedFieldName == "PCSQTY" && defectCodeGroupId != "005")
					isChangeCell = true;
			}
		}
	} else {
		if (focusedFieldName != "ANALYSISQTY" && focusedFieldName != "ANALYSISGOODQTY" && focusedFieldName != "ANALYSISGOODPNLQTY")
			isChangeCell = true;
	}

	var edittype = "none";
	
	if(isChangeCell)
	{
		edittype = paramEditType;
	}
	
	return edittype;
};


this.ds_defectList_oncolumnchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSColChangeEventInfo)
{
	if (e.columnid == "DEFECTCODEGROUPID")
	{
// 		RepositoryItemLookUpEdit edit = e.Column.ColumnEdit as RepositoryItemLookUpEdit;
// 
// 		string defectCodeGroupName = Format.GetString(edit.GetDataSourceValue("CODENAME", edit.GetDataSourceRowIndex("CODEID", e.Value)));
// 
// 		grdAOIDefect.View.SetFocusedRowCellValue("DEFECTCODEGROUPNAME", defectCodeGroupName);

//		그리드 멀티 콤보
	}
	else if (e.columnid == "DEFECTCODE" || e.columnid == "LAYER")
	{
		var defectCode = this.nfn_nvl(obj.getColumn(e.row, "DEFECTCODE"), "");
		var layerId    = this.nfn_nvl(obj.getColumn(e.row, "LAYER"), "");

		obj.filter("DEFECTCODE == '" + defectCode + "' AND LAYER == '" + layerId + "'");

		if (obj.getRowCount() > 1)
		{
			// 이미 등록된 불량 항목입니다.
			this.gfn_Message("AlreadyInputDefectItem", null, "info", "ok");
			obj.filter("");
			obj.setColumn(e.row, e.columnid, "");
			
			return;
		}
		obj.filter("");

		if (e.columnid == "DEFECTCODE")
		{
// 			RepositoryItemLookUpEdit edit = e.Column.ColumnEdit as RepositoryItemLookUpEdit;
// 
// 			string defectCodeName = Format.GetString(edit.GetDataSourceValue("CODENAME", edit.GetDataSourceRowIndex("CODEID", e.Value)));
// 
// 			grdAOIDefect.View.SetFocusedRowCellValue("DEFECTCODENAME", defectCodeName);
// 			멀티 콤보
		}
	}
	else if (e.columnid == "PCSQTY")
	{
		var defectCodeGroupId = this.nfn_nvl(obj.getColumn(e.row, "DEFECTCODEGROUPID"), "");
		var defectCode        = this.nfn_nvl(obj.getColumn(e.row, "DEFECTCODE"), "");
		
		if (this.nfn_isNull(defectCodeGroupId) || this.nfn_isNull(defectCode))
		{
			// 불량 그룹, 불량 항목을 선택하시기 바랍니다.
			this.gfn_Message("SelectDefectGroupAndDefectItem", null, "info", "ok");

			obj.setColumn(e.row, e.columnid, "");
			
			return;
		}

		if (this.gf_getEnterpriseId() == this.getEnterPrise_InterFlex())
		{
			if (defectCodeGroupId == "005")
				obj.setColumn(e.row, "ANALYSISQTY", e.newvalue);
		}
	}
	else if (e.columnid == "ANALYSISQTY")
	{
	
		var defectQty         = nexacro.toNumber(this.nfn_nvl(obj.getColumn(e.row, "PCSQTY"), "0"));
		var analysisTarget    = e.newvalue;

		if (analysisTarget > defectQty)
		{
			// 분석대상 수량은 불량 수량을 초과할 수 없습니다.
			this.gfn_Message("TargetQtyLessThanDefectQty", null, "info", "ok");

			obj.setColumn(e.row, "ANALYSISQTY", defectQty);

			return;
		}
	}
	else if (e.columnid == "ANALYSISGOODQTY")
	{

		var defectQty         = nexacro.toNumber(this.nfn_nvl(obj.getColumn(e.row, "PCSQTY"), "0"));
		var analysisTarget    = nexacro.toNumber(this.nfn_nvl(obj.getColumn(e.row, "ANALYSISQTY"), "0"));
		var goodQty           = e.newvalue;
		
		if (goodQty > analysisTarget)
		{
			// 분석양품 수량은 분석대상 수량을 초과할 수 없습니다.
			this.gfn_Message("GoodQtyLessThanTargetQty", null, "info", "ok");

			obj.setColumn(e.row, "ANALYSISGOODQTY", analysisTarget);
			obj.setColumn(e.row, "FINALDEFECTQTY", defectQty - analysisTarget);

			return;
		}

		obj.setColumn(e.row, "FINALDEFECTQTY", defectQty - goodQty);
	}	
};

this.btn_AOIDefectMapLink_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
// Lot No
// AOI 포함
// 
// Lot Defect Map 조회화면으로 이동

	var lotId        = this.nfn_nvl(this.ds_lotInfoData.getColumn(0, "LOTID"), "");
	var productDefId = this.nfn_nvl(this.ds_lotInfoData.getColumn(0, "PRODUCTDEFID"), "");
	var productDefVersion = this.nfn_nvl(this.ds_lotInfoData.getColumn(0, "PRODUCTDEFVERSION"), "");

	this.ds_param.clearData();
	this.ds_param.addRow();
	this.ds_param.setColumn(0, "LOTID", lotId);
	this.ds_param.setColumn(0, "PRODUCTDEFID", productDefId);
	this.ds_param.setColumn(0, "PRODUCTREVISION", productDefVersion);
		
	
	//입고검사로 이동
	var sUrl = "dfm::DFM00100M.xfdl";

	// arryList 타입전달 예)
	var objArgs = {
		menuName : "Lot Defect Map",
		objList : [this.SelectRow2JsonString(this.ds_param)]
	};

	var bReload = true;
	this.gfn_goPage(sUrl, objArgs, bReload);
					
};

this.grd_AOIDefect_onexpandup = function(obj:nexacro.Grid,e:nexacro.GridMouseEventInfo)
{
	if (this.nfn_isEqualCol(obj, e.col, "DEFECTCODEGROUPID")) 
	{
		this.pdv_DefectCodeGroupList.show();
		this.pdv_DefectCodeGroupList.trackPopup(e.screenx, e.screeny-70,  this.pdv_DefectCodeGroupList.width, this.pdv_DefectCodeGroupList.height, "fn_Callback_pdv_DefectCodeGroupList");
	} 
	else if (this.nfn_isEqualCol(obj, e.col, "DEFECTCODE")) 
	{
	
		var nRow = this.ds_defectList.rowcount == 1 ? 0 : this.ds_defectList_rowposition;

		var pkId = this.ds_defectList.getColumn(nRow,"DEFECTCODEGROUPID");
		this.ds_defectcode.filter("DEFECTCODEGROUPID=='" + pkId + "'");
		this.pdv_DefectCodeList.show();
		this.pdv_DefectCodeList.trackPopup(e.screenx, e.screeny-70,  this.pdv_DefectCodeList.width, this.pdv_DefectCodeList.height, "fn_Callback_pdv_DefectCodeList");
	} 	
};

// 불량코드 그룹
this.pdv_DefectCodeGroupList_grd_DefectCodeGroupList_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	var codeid     = this.ds_defectcodegroup.getColumn(this.ds_defectcodegroup.rowposition,"CODEID"); 
	var codename   = this.ds_defectcodegroup.getColumn(this.ds_defectcodegroup.rowposition,"CODENAME");
	
	this.ds_defectList.set_enableevent(false);

	var nRow = this.ds_defectList.rowcount == 1 ? 0 : this.ds_defectList_rowposition;

	this.ds_defectList.setColumn(nRow,"DEFECTCODEGROUPID"  ,codeid); 
	this.ds_defectList.setColumn(nRow,"DEFECTCODEGROUPNAME",codename); 

	this.ds_defectList.set_enableevent(true);
	
	this.pdv_DefectCodeGroupList.closePopup();	
};

// 불량코드
this.pdv_DefectCodeList_grd_DefectCodeList_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{	
	var codeid			  = this.ds_defectcode.getColumn(this.ds_defectcode.rowposition,"CODEID"); 
	var codename          = this.ds_defectcode.getColumn(this.ds_defectcode.rowposition,"CODENAME");
	var defectcodegroupid = this.ds_defectcode.getColumn(this.ds_defectcode.rowposition,"DEFECTCODEGROUPID");
	
	this.ds_defectList.set_enableevent(false);
	
	var nRow = this.ds_defectList.rowcount == 1 ? 0 : this.ds_defectList_rowposition;
	
	this.ds_defectList.setColumn(nRow,"DEFECTCODE",codeid); 
	this.ds_defectList.setColumn(nRow,"DEFECTCODENAME",codename); 
	this.ds_defectList.setColumn(nRow,"DEFECTCODEGROUPID",defectcodegroupid); 

	this.ds_defectList.set_enableevent(true);
	
	this.pdv_DefectCodeList.closePopup();	
	this.ds_defectcode.filter("");
};


this.getAOIDefectDataSource = function()
{

	for(var i = 0; i < this.ds_defectList.getRowCount(); i++)
	{
		var layer = this.nfn_nvl(this.ds_defectList.getColumn(i, "LAYER"), "");
		var defectCode = this.nfn_nvl(this.ds_defectList.getColumn(i, "DEFECTCODE"), "");
		
		if (this.nfn_isNull(layer))
		{
			// 불량이 발생한 Layer를 선택하시기 바랍니다. Defect Code : {0}
			this.gfn_Message("SelectLayer", [defectCode], "warning", "ok");
			return;
		}

		var pcsQty = this.nfn_nvl(this.ds_defectList.getColumn(i, "PCSQTY"), "0"); //nexacro.toNumber 로 바꾸지 않음. null 비교
		
		if (this.nfn_isNull(pcsQty))
		{
			// 불량 수량을 입력하시기 바랍니다. Defect Code : {0}
			this.gfn_Message("InputDefectQty", [defectCode], "warning", "ok");
			return;
		}
		
		if (this._isRepairProcess)
		{
			var defectCodeGroupId = this.nfn_nvl(this.ds_defectList.getColumn(i, "DEFECTCODEGROUPID"), "");
			var defectCode 		  = this.nfn_nvl(this.ds_defectList.getColumn(i, "DEFECTCODE"), "");
			var analysisQty 	  = nexacro.toNumber(this.nfn_nvl(this.ds_defectList.getColumn(i, "ANALYSISQTY"), "0"));

			if ((this.gf_getEnterpriseId() == this.getEnterPrise_InterFlex() && defectCodeGroupId == "005"))
			{
				var analysisGoodQty 		  = this.nfn_nvl(this.ds_defectList.getColumn(i, "ANALYSISGOODQTY"), "");   //nexacro.toNumber 로 바꾸지 않음. null 비교
				
				if (this.nfn_isNull(analysisGoodQty))
				{
					// 분석 양품 수량을 입력하시기 바랍니다. Defect Code : {0}
					this.gfn_Message("InputAnalysisGoodQty", [defectCode], "warning", "ok");
					return;
				}
			}
		}	
	}
	

	
	if (this.gf_getEnterpriseId() == this.getEnterPrise_InterFlex() && !this._isRepairProcess && !this._isSendStep)
	{
		this.ds_defectList.filter("DEFECTCODEGROUPID = '005' && ANALYSISQTY > 0");
		
		if (this.ds_defectList.getRowCount() > 0)
		{
			this.chk_ReworkPublish.set_value(true);
		}
		this.ds_defectList.filter("");
	}


	return this.ds_defectList;
};


this.IsReworkPublishChecked = function()
{
	return this.chk_ReworkPublish.value;
};
]]></Script>
    <Objects>
      <Dataset id="ds_param">
        <ColumnInfo>
          <Column id="LANGUAGETYPE" type="STRING" size="256"/>
          <Column id="LOTID" type="STRING" size="256"/>
          <Column id="PRODUCTDEFID" type="STRING" size="256"/>
          <Column id="PRODUCTDEFVERSION" type="STRING" size="256"/>
          <Column id="EQUIPMENTTYPE" type="STRING" size="256"/>
          <Column id="CODECLASSID" type="STRING" size="256"/>
          <Column id="VERSION" type="STRING" size="256"/>
          <Column id="PRODUCTREVISION" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_defectInfoData">
        <ColumnInfo>
          <Column id="DEFECTCODEGROUPID" type="STRING" size="256"/>
          <Column id="DEFECTCODEGROUPNAME" type="STRING" size="256"/>
          <Column id="DEFECTCODE" type="STRING" size="256"/>
          <Column id="DEFECTCODENAME" type="STRING" size="256"/>
          <Column id="LAYERID" type="STRING" size="256"/>
          <Column id="INSPECTQTY" type="BIGDECIMAL" size="256"/>
          <Column id="DEFECTQTY" type="BIGDECIMAL" size="256"/>
          <Column id="DEFECTRATE" type="BIGDECIMAL" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_defectParam">
        <ColumnInfo>
          <Column id="LOTID" type="STRING" size="256"/>
          <Column id="LANGUAGETYPE" type="STRING" size="256"/>
          <Column id="VERSION" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_defectList" onrowposchanged="ds_defectList_onrowposchanged" oncolumnchanged="ds_defectList_oncolumnchanged">
        <ColumnInfo>
          <Column id="DEFECTCODEGROUPID" type="STRING" size="256"/>
          <Column id="DEFECTCODEGROUPNAME" type="STRING" size="256"/>
          <Column id="DEFECTCODE" type="STRING" size="256"/>
          <Column id="DEFECTCODENAME" type="STRING" size="256"/>
          <Column id="LAYER" type="STRING" size="256"/>
          <Column id="PCSQTY" type="BIGDECIMAL" size="256"/>
          <Column id="ANALYSISQTY" type="BIGDECIMAL" size="256"/>
          <Column id="ANALYSISGOODQTY" type="BIGDECIMAL" size="256"/>
          <Column id="ANALYSISGOODPNLQTY" type="BIGDECIMAL" size="256"/>
          <Column id="FINALDEFECTQTY" type="BIGDECIMAL" size="256"/>
          <Column id="ISCHANGE" type="STRING" size="256"/>
          <Column id="SEQUENCE" type="INT" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_layerList">
        <ColumnInfo>
          <Column id="LAYERID" type="STRING" size="256"/>
          <Column id="LAYERNAME" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_defectcodegroup">
        <ColumnInfo>
          <Column id="CODEID" type="STRING" size="256"/>
          <Column id="CODENAME" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_defectcode">
        <ColumnInfo>
          <Column id="CODEID" type="STRING" size="256"/>
          <Column id="CODENAME" type="STRING" size="256"/>
          <Column id="DEFECTCODEGROUPID" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_defectDistinctList">
        <ColumnInfo>
          <Column id="DEFECTCODEGROUPID" type="STRING" size="256"/>
          <Column id="DEFECTCODEGROUPNAME" type="STRING" size="256"/>
          <Column id="DEFECTCODE" type="STRING" size="256"/>
          <Column id="DEFECTCODENAME" type="STRING" size="256"/>
          <Column id="LAYER" type="STRING" size="256"/>
          <Column id="PCSQTY" type="BIGDECIMAL" size="256"/>
          <Column id="ANALYSISQTY" type="BIGDECIMAL" size="256"/>
          <Column id="ANALYSISGOODQTY" type="BIGDECIMAL" size="256"/>
          <Column id="ANALYSISGOODPNLQTY" type="BIGDECIMAL" size="256"/>
          <Column id="FINALDEFECTQTY" type="BIGDECIMAL" size="256"/>
          <Column id="ISCHANGE" type="STRING" size="256"/>
          <Column id="SEQUENCE" type="INT" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_temp"/>
      <Dataset id="ds_lotInfoData">
        <ColumnInfo>
          <Column id="LOTID" type="STRING" size="256"/>
          <Column id="PLANTID" type="STRING" size="256"/>
          <Column id="PATHTYPE" type="STRING" size="256"/>
          <Column id="PRODUCTDEFTYPE" type="STRING" size="256"/>
          <Column id="PROCESSSTATE" type="STRING" size="256"/>
          <Column id="PROCESSPATHID" type="STRING" size="256"/>
          <Column id="PROCESSSEGMENTID" type="STRING" size="256"/>
          <Column id="PROCESSSEGMENTVERSION" type="STRING" size="256"/>
          <Column id="NEXTPROCESSSEGMENTID" type="STRING" size="256"/>
          <Column id="NEXTPROCESSSEGMENTVERSION" type="STRING" size="256"/>
          <Column id="NEXTPROCESSSEGMENTTYPE" type="STRING" size="256"/>
          <Column id="PRODUCTDEFVERSION" type="STRING" size="256"/>
          <Column id="PRODUCTTYPE" type="STRING" size="256"/>
          <Column id="PRODUCTDEFTYPEID" type="STRING" size="256"/>
          <Column id="LOTTYPE" type="STRING" size="256"/>
          <Column id="ISHOLD" type="STRING" size="256"/>
          <Column id="AREANAME" type="STRING" size="256"/>
          <Column id="DEFECTUNIT" type="STRING" size="256"/>
          <Column id="PCSPNL" type="STRING" size="256"/>
          <Column id="PANELPERQTY" type="STRING" size="256"/>
          <Column id="PROCESSSEGMENTTYPE" type="STRING" size="256"/>
          <Column id="STEPTYPE" type="STRING" size="256"/>
          <Column id="ISPRINTLOTCARD" type="STRING" size="256"/>
          <Column id="ISPRINTRCLOTCARD" type="STRING" size="256"/>
          <Column id="TRACKINUSER" type="STRING" size="256"/>
          <Column id="TRACKINUSERNAME" type="STRING" size="256"/>
          <Column id="MATERIALCLASS" type="STRING" size="256"/>
          <Column id="AREAID" type="STRING" size="256"/>
          <Column id="ISRCLOT" type="STRING" size="256"/>
          <Column id="SELFSHIPINSPRESULT" type="STRING" size="256"/>
          <Column id="SELFTAKEINSPRESULT" type="STRING" size="256"/>
          <Column id="MEASUREINSPRESULT" type="STRING" size="256"/>
          <Column id="OSPINSPRESULT" type="STRING" size="256"/>
          <Column id="ISBEFOREROLLCUTTING" type="STRING" size="256"/>
          <Column id="Column30" type="STRING" size="256"/>
          <Column id="LOTSTATE" type="STRING" size="256"/>
          <Column id="WAREHOUSEID" type="STRING" size="256"/>
          <Column id="ISWEEKMNG" type="STRING" size="256"/>
          <Column id="DESCRIPTION" type="STRING" size="256"/>
          <Column id="PARENTPROCESSSEGMENTCLASSID" type="STRING" size="256"/>
          <Column id="RTRSHT" type="STRING" size="256"/>
          <Column id="PROCESSSEGMENTCLASSID" type="STRING" size="256"/>
          <Column id="RESOURCENAME" type="STRING" size="256"/>
          <Column id="ISCLAIMLOT" type="STRING" size="256"/>
          <Column id="PRODUCTDEFID" type="STRING" size="256"/>
          <Column id="UNIT" type="STRING" size="256"/>
          <Column id="PREVPROCESSSEGMENTNAME" type="STRING" size="256"/>
          <Column id="PRODUCTDEFNAME" type="STRING" size="256"/>
          <Column id="PRODUCTIONTYPENAME" type="STRING" size="256"/>
          <Column id="PNLQTY" type="STRING" size="256"/>
          <Column id="PROCESSSEGMENTNAME" type="STRING" size="256"/>
          <Column id="INPUTDATE" type="STRING" size="256"/>
          <Column id="ISLOCKING" type="STRING" size="256"/>
          <Column id="PCSQTY" type="STRING" size="256"/>
          <Column id="NEXTPROCESSSEGMENTNAME" type="STRING" size="256"/>
          <Column id="PRODUCTIONORDERID" type="STRING" size="256"/>
          <Column id="ISREWORK" type="STRING" size="256"/>
          <Column id="MM" type="STRING" size="256"/>
          <Column id="USERSEQUENCE" type="STRING" size="256"/>
          <Column id="DUEDATE" type="STRING" size="256"/>
          <Column id="CUSTOMERNAME" type="STRING" size="256"/>
          <Column id="RESOURCEID" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
