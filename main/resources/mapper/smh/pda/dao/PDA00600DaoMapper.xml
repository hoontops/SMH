<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="smh.pda.dao.PDA00600Dao">

	<select id="selectAreaListByAuthorityList" parameterType="map" resultType="hashmap">
				--smh.pda.dao.PDA00600Dao.selectAreaListByAuthorityList
			    -- Id : GetAreaListByAuthority
			    -- Version:10001
			    
		        SELECT  A.AREAID
		                    ,  CASE          
		                        WHEN D.DICTIONARYNAME IS NULL THEN  TO_CHAR(A.AREANAME)     -- 다국어 명
		              ELSE D.DICTIONARYNAME
		            END             AS AREANAME
		          ,  A.PLANTID
		          , BR.RESOURCEID
		          , COALESCE(BR.DESCRIPTION, BR.RESOURCEID)	AS RESOURCENAME
				FROM	 FN_AREA(#{USERID})  A
				LEFT OUTER JOIN CMD_DICTIONARY 		 D	ON	A.AREANAME = D.DICTIONARYID
												  		AND	D.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
				INNER JOIN BAS_RESOURCE BR ON A.AREAID = BR.AREAID AND BR.VALIDSTATE='Valid'												  		
				WHERE 	1 = 1
				
				<if test="ISMODIFY != null and ISMODIFY !='' and !(ISMODIFY eq 'N'.toString())">
					AND     A.ISMODIFY = 'Y'
				</if>				
				<if test="PLANTID != null and PLANTID !='' and !(PLANTID eq '*'.toString())">
				
					AND 	A.PLANTID = #{PLANTID}
				</if>
				
				<if test="TXTAREA != null and TXTAREA !='' and !(TXTAREA eq '*'.toString()) ">
				
					 AND    (UPPER(A.AREAID)  LIKE  '%' || UPPER(#{TXTAREA})|| '%' 
					 OR 	 UPPER(A.AREANAME) LIKE  '%' || UPPER(#{TXTAREA})|| '%'
					 OR 	 UPPER(D.DICTIONARYNAME) LIKE  '%' || UPPER(#{TXTAREA})|| '%'
					 OR 	 UPPER(BR.DESCRIPTION) LIKE  '%' || UPPER(#{TXTAREA})|| '%'
					 OR 	 UPPER(BR.RESOURCEID) LIKE  '%' || UPPER(#{TXTAREA})|| '%'
					 )
				</if>
				
				<if test="AREA != null and AREA !='' and !(AREA eq '*'.toString()) ">
					 AND    (UPPER(A.AREAID) LIKE  '%' || UPPER(#{AREA})|| '%' 
					 OR 	 UPPER(A.AREANAME) LIKE  '%' || UPPER(#{AREA})|| '%' 
					 OR 	 UPPER(D.DICTIONARYNAME) LIKE  '%' || UPPER(#{AREA})|| '%' )
				</if>							
				ORDER BY A.AREAID ASC
	</select>
	
	   <!--  인계 취소 리스트 조회 -->
	   <!-- 수정 : 2021.04.27(김기수) : Step제한 변경 -->
     <select id="selectLotListForSendCancel" parameterType="map" resultType="hashmap">
				SELECT  DISTINCT
						NULL	CHK
					,	L.LOTID
					,	L.PROCESSSEGMENTID
					,	L.PROCESSSEGMENTVERSION
					,	COALESCE(PSN.DICTIONARYNAME, PS.PROCESSSEGMENTNAME)	AS PROCESSSEGMENTNAME
					,	L.PRODUCTDEFID
					,	L.PRODUCTDEFVERSION
					,	PD.PRODUCTDEFNAME
					,	L.UNIT
					,	L.QTY
					,	L.PRODUCTIONORDERID
					,	L.LINENO
					,	L.AREAID
					,	COALESCE(AN.DICTIONARYNAME, A.AREANAME)	AS AREANAME
					,	TO_CHAR(PLH.SENDTIME, 'YYYY-MM-DD HH24:MI:SS')		AS SEGMENTINCOMETIME
					,	L.PANELQTY AS PNLQTY
					,	L.QTY      AS PCSQTY
					,	L.USERSEQUENCE
					,	L.LOTSTATE
			        ,CASE 
			          WHEN L.PROCESSSTATE = 'WaitForReceive' THEN 'WaitForReceive'
			          WHEN L.PROCESSSTATE = 'Wait'           THEN 'Receive'
			          WHEN L.PROCESSSTATE = 'Run'            THEN 'WorkStart'
			          WHEN L.PROCESSSTATE = 'WaitForSend'    THEN 'WorkEnd'
			        END AS WIPPROCESSSTATE
			        ,	COALESCE(PPN.DICTIONARYNAME, PPS.PROCESSSEGMENTNAME)	AS PREVPROCESSSEGMENTNAME	
					,	L.RESOURCEID
					,	COALESCE(RC.DESCRIPTION, L.RESOURCEID)	AS RESOURCENAME
					,	OTD.DICTIONARYNAME				AS PRODUCTIONTYPE
				FROM	PCM_LOT						L
				INNER JOIN PCM_LOTWORKRESULT			WR	ON	L.LOTID = WR.LOTID
														AND	L.PROCESSSEGMENTID = WR.PROCESSSEGMENTID
														AND	L.WORKCOUNT = WR.WORKCOUNT
				INNER JOIN PCM_LOTHISTORY			PLH	ON	WR.PREVSENDLOTHISTKEY = PLH.TXNHISTKEY
														AND	WR.LOTID = PLH.LOTID
				INNER JOIN BAS_PROCESSSEGMENT		PS	ON	L.ENTERPRISEID = PS.ENTERPRISEID
				--										AND	L.PLANTID = PS.PLANTID
														AND	L.PROCESSSEGMENTID = PS.PROCESSSEGMENTID
														AND	L.PROCESSSEGMENTVERSION = PS.PROCESSSEGMENTVERSION
				LEFT OUTER JOIN CMD_DICTIONARY		PSN	ON	PS.PROCESSSEGMENTNAME = PSN.DICTIONARYID
														AND	PSN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
				INNER JOIN BAS_PRODUCTDEFINITION		PD	ON	L.ENTERPRISEID = PD.ENTERPRISEID
												--		AND	L.PLANTID = PD.PLANTID
														AND	L.PRODUCTDEFID = PD.PRODUCTDEFID
														AND	L.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
				INNER JOIN BAS_AREA					A	ON	L.AREAID = A.AREAID
				LEFT OUTER JOIN CMD_DICTIONARY		AN	ON	A.AREANAME = AN.DICTIONARYID
														AND	AN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
				LEFT OUTER JOIN FN_AREA(#{USERID})	AL	ON	A.AREAID = AL.AREAID
														AND	AL.ISMODIFY = 'Y'
				INNER JOIN BAS_PROCESSPATH			PP	ON	L.PROCESSDEFID = PP.PROCESSDEFID
														AND	L.PROCESSDEFVERSION = PP.PROCESSDEFVERSION
														AND	L.PROCESSSEGMENTID = PP.PROCESSSEGMENTID
														AND	L.PROCESSSEGMENTVERSION = PP.PROCESSSEGMENTVERSION
				LEFT OUTER JOIN BAS_PROCESSPATH		PPP	ON	L.PROCESSDEFID = PPP.PROCESSDEFID
														AND	L.PROCESSDEFVERSION = PPP.PROCESSDEFVERSION
														AND	PP.PATHSEQUENCE - 1 = PPP.PATHSEQUENCE
				LEFT OUTER JOIN BAS_PROCESSSEGMENT	PPS	ON	PLH.PREVPROCESSSEGMENTID = PPS.PROCESSSEGMENTID
				--										AND	PPP.PROCESSSEGMENTVERSION = PPS.PROCESSSEGMENTVERSION
				LEFT OUTER JOIN 	FN_GETSTEPTYPE() ST1 ON PPS.STEPCLASS=ST1.CODE	
		        LEFT OUTER JOIN CMD_DICTIONARY      PPN  ON  PPS.PROCESSSEGMENTNAME = PPN.DICTIONARYID
		                              AND  PPN.LANGUAGETYPE = 'ko-KR'
		        LEFT OUTER JOIN BAS_RESOURCE        RC  ON  L.ENTERPRISEID = RC.ENTERPRISEID
		                              AND  L.PLANTID = RC.PLANTID
		                              AND  L.RESOURCEID = RC.RESOURCEID
				LEFT OUTER JOIN CMD_CODE_V					OT	ON	L.LOTTYPE = OT.CODEID
															AND	OT.CODECLASSID = 'ProductionType'
				LEFT OUTER JOIN CMD_DICTIONARY			OTD	ON	OT.DICTIONARYID = OTD.DICTIONARYID
															AND	OTD.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
								
				WHERE	1 = 1
				AND		L.ENTERPRISEID = #{ENTERPRISEID}
				AND		L.PLANTID = #{SESSION_SITETYPE}
				AND		AL.AREAID = #{AREAID}
				AND		L.LOTID = #{LOTID}
				AND		L.PROCESSSTATE = #{PROCESSSTATE}
				AND		L.LOTCREATEDTYPE IN ('Normal','SplitRoll', 'FinalInspect', 'Repair', 'Return')
				AND		L.LOTSTATE IN ('InProduction','InTransit','Finished')
				AND		PP.PATHTYPE != 'Start'
				AND		A.AREATYPE != 'OutsideOSP'
				<if test="PRODUCTDEFID != null and PRODUCTDEFID !='' ">
					AND		L.PRODUCTDEFID = #{PRODUCTDEFID}
				</if>
    </select>
    
	   <!--  -->
    <select id="selectLotWorkCancelList" parameterType="map" resultType="hashmap">
    	SELECT
				NULL AS CHK
			,	L.LOTID
			,	L.PROCESSSEGMENTID
			,	L.PROCESSSEGMENTVERSION
			,	COALESCE(PSN.DICTIONARYNAME, PS.PROCESSSEGMENTNAME)	AS PROCESSSEGMENTNAME
			,	L.PRODUCTDEFID
			,	L.PRODUCTDEFVERSION
			,	PD.PRODUCTDEFNAME
			,	L.UNIT
			,	L.QTY
			,	L.PRODUCTIONORDERID
			,	L.LINENO
		    ,  L.AREAID
		    ,  COALESCE(ARD.DICTIONARYNAME, AR.AREANAME) AS AREANAME 
		    <choose>
		    	<when test="TRANSITTYPE.equals('ReceiveCancel')">
				    ,  CASE WHEN PP.PATHTYPE = 'Start' OR PP.PATHTYPE = 'StartEnd' THEN TO_CHAR(L.LOTSTARTDATE,'YYYY-MM-DD HH24:MI:SS')
				            ELSE FN_GETPREVSEGMENTSENDTIME(L.LOTID,L.USERSEQUENCE)
				            END SEGMENTINCOMETIME
		       </when>
		       <when test="TRANSITTYPE.equals('TrackInCancel')">
		       		, TO_CHAR(CW.RECEIVETIME, 'YYYY-MM-DD HH24:MI:SS')	AS SEGMENTINCOMETIME
		       </when>
		    </choose>
		    ,	L.PANELQTY AS PNLQTY
			,	L.QTY      AS PCSQTY
			,  L.USERSEQUENCE
	        ,CASE 
	          WHEN L.PROCESSSTATE = 'WaitForReceive' THEN 'WaitForReceive'
	          WHEN L.PROCESSSTATE = 'Wait'           THEN 'Receive'
	          WHEN L.PROCESSSTATE = 'Run'            THEN 'WorkStart'
	          WHEN L.PROCESSSTATE = 'WaitForSend'    THEN 'WorkEnd'
	        END AS WIPPROCESSSTATE
	        ,	L.RESOURCEID	
	        ,	COALESCE(RC.DESCRIPTION, L.RESOURCEID)	AS RESOURCENAME	  
			,	OTD.DICTIONARYNAME				AS PRODUCTIONTYPE
						          						
		FROM	PCM_LOT					L
		INNER JOIN BAS_PROCESSSEGMENT	PS	ON	L.ENTERPRISEID = PS.ENTERPRISEID
		--									AND	L.PLANTID = PS.PLANTID
											AND	L.PROCESSSEGMENTID = PS.PROCESSSEGMENTID
											AND	L.PROCESSSEGMENTVERSION = PS.PROCESSSEGMENTVERSION
		LEFT OUTER JOIN 	FN_GETSTEPTYPE() ST1 ON PS.STEPCLASS=ST1.CODE														
		LEFT OUTER JOIN BAS_RESOURCE	  RC	ON	L.ENTERPRISEID = RC.ENTERPRISEID
									        AND	L.PLANTID = RC.PLANTID
											AND	L.RESOURCEID = RC.RESOURCEID
		LEFT OUTER JOIN 	FN_GETSTEPTYPE() ST2 ON RC.STEPCLASS=ST2.CODE													
		LEFT OUTER JOIN CMD_DICTIONARY	PSN	ON	PS.PROCESSSEGMENTNAME = PSN.DICTIONARYID
											AND	PSN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE} 
		INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	L.ENTERPRISEID = PD.ENTERPRISEID
		--									AND	L.PLANTID = PD.PLANTID
											AND	L.PRODUCTDEFID = PD.PRODUCTDEFID
											AND	L.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
		INNER  JOIN BAS_AREA             AR  ON L.AREAID = AR.AREAID
		LEFT   JOIN CMD_DICTIONARY       ARD ON  AR.AREANAME = ARD.DICTIONARYID
		                                    AND ARD.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}  	
		INNER  JOIN PCM_LOTWORKRESULT    CW  ON  L.LOTID = CW.LOTID
		                                    AND L.PROCESSSEGMENTID = CW.PROCESSSEGMENTID
		                                    AND ((COALESCE(L.SUBPROCESSDEFID,'*') ='*' AND  L.PROCESSDEFID = CW.PROCESSDEFID) OR (COALESCE(L.SUBPROCESSDEFID,'*') != '*' AND L.SUBPROCESSDEFID = CW.PROCESSDEFID))
		INNER   JOIN BAS_PROCESSPATH     PP ON  ((COALESCE(L.SUBPROCESSDEFID,'*') ='*' AND  L.PROCESSDEFID = PP.PROCESSDEFID) OR (COALESCE(L.SUBPROCESSDEFID,'*') != '*' AND L.SUBPROCESSDEFID = PP.PROCESSDEFID))
			                               AND ((COALESCE(L.SUBPROCESSDEFID,'*') ='*' AND  L.PROCESSDEFVERSION = PP.PROCESSDEFVERSION) OR (COALESCE(L.SUBPROCESSDEFID,'*') != '*'AND L.SUBPROCESSDEFVERSION = PP.PROCESSDEFVERSION))
		                                   AND L.PROCESSSEGMENTID = PP.PROCESSSEGMENTID	
		LEFT OUTER JOIN CMD_CODE_V					OT	ON	L.LOTTYPE = OT.CODEID
													AND	OT.CODECLASSID = 'ProductionType'
		LEFT OUTER JOIN CMD_DICTIONARY			OTD	ON	OT.DICTIONARYID = OTD.DICTIONARYID
													AND	OTD.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
                                   
		WHERE	1 = 1
		AND		L.PLANTID = #{SESSION_SITETYPE}
		AND		L.AREAID = #{AREAID}
		AND		L.PROCESSSTATE = #{PROCESSSTATE}
		AND		L.LOTID = UPPER(#{LOTID})
        AND		L.LOTCREATEDTYPE IN ('Normal','SplitRoll', 'FinalInspect', 'Repair', 'Return')
		AND		EXISTS
				(
					SELECT	1
					FROM	ufn_selectStringToSplit(COALESCE(ST2.STEPTYPE, ST1.STEPTYPE)	, ',')	T
					WHERE	T.VALUE = #{PREVPROCESSSTATE}
				)
		<if test="PRODUCTDEFID != null and PRODUCTDEFID !='' ">
        	AND		L.PRODUCTDEFID LIKE '%' || UPPER(#{PRODUCTDEFID}) ||'%'
        </if>
    </select>

	<select id="selectLotListForWorkEndCancel" parameterType="map" resultType="hashmap">
    	SELECT
				NULL AS CHK
			,	L.LOTID
			,	L.PROCESSSEGMENTID
			,	L.PROCESSSEGMENTVERSION
			,	COALESCE(PSN.DICTIONARYNAME, PS.PROCESSSEGMENTNAME)	AS PROCESSSEGMENTNAME
			,	L.PRODUCTDEFID
			,	L.PRODUCTDEFVERSION
			,	PD.PRODUCTDEFNAME
			,	L.UNIT
			,	L.QTY
			,	L.PRODUCTIONORDERID
			,	L.LINENO
		    ,  L.AREAID
		    ,  COALESCE(ARD.DICTIONARYNAME, AR.AREANAME) AS AREANAME 
		    , TO_CHAR(CW.WORKENDTIME, 'YYYY-MM-DD HH24:MI:SS')	AS TRACKOUTTIME
		    , TO_CHAR(CW.WORKSTARTTIME, 'YYYY-MM-DD HH24:MI:SS' ) AS TRACKINTIME
		    , TO_CHAR(CW.CREATEDTIME , 'YYYY-MM-DD HH24:MI:SS') AS SEGMENTINCOMETIME
		    ,  L.PANELQTY
		    ,  L.USERSEQUENCE
		    ,  L.PANELQTY AS PNLQTY
			,  L.QTY      AS PCSQTY
			,CASE 
	          WHEN L.PROCESSSTATE = 'WaitForReceive' THEN 'WaitForReceive'
	          WHEN L.PROCESSSTATE = 'Wait'           THEN 'Receive'
	          WHEN L.PROCESSSTATE = 'Run'            THEN 'WorkStart'
	          WHEN L.PROCESSSTATE = 'WaitForSend'    THEN 'WorkEnd'
	        END AS WIPPROCESSSTATE
	        ,	L.RESOURCEID	
	        ,	COALESCE(RC.DESCRIPTION, L.RESOURCEID)	AS RESOURCENAME	    	
			,	OTD.DICTIONARYNAME				AS PRODUCTIONTYPE
		FROM	PCM_LOT					L
		INNER JOIN BAS_PROCESSSEGMENT	PS	ON	L.ENTERPRISEID = PS.ENTERPRISEID
		--									AND	L.PLANTID = PS.PLANTID
											AND	L.PROCESSSEGMENTID = PS.PROCESSSEGMENTID
											AND	L.PROCESSSEGMENTVERSION = PS.PROCESSSEGMENTVERSION
		LEFT OUTER JOIN 	FN_GETSTEPTYPE() ST1 ON PS.STEPCLASS=ST1.CODE														
		LEFT OUTER JOIN BAS_RESOURCE	  RC	ON	L.ENTERPRISEID = RC.ENTERPRISEID
									        AND	L.PLANTID = RC.PLANTID
											AND	L.RESOURCEID = RC.RESOURCEID
		LEFT OUTER JOIN 	FN_GETSTEPTYPE() ST2 ON RC.STEPCLASS=ST2.CODE													
		LEFT OUTER JOIN CMD_DICTIONARY	PSN	ON	PS.PROCESSSEGMENTNAME = PSN.DICTIONARYID
											AND	PSN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE} 
		INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	L.ENTERPRISEID = PD.ENTERPRISEID
		--									AND	L.PLANTID = PD.PLANTID
											AND	L.PRODUCTDEFID = PD.PRODUCTDEFID
											AND	L.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
		INNER  JOIN BAS_AREA             AR  ON L.AREAID = AR.AREAID
		LEFT   JOIN CMD_DICTIONARY       ARD ON  AR.AREANAME = ARD.DICTIONARYID
		                                    AND ARD.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}  	
		INNER  JOIN PCM_LOTWORKRESULT    CW  ON  L.LOTID = CW.LOTID
		                                    AND L.PROCESSSEGMENTID = CW.PROCESSSEGMENTID
		                                    AND ((COALESCE(L.SUBPROCESSDEFID,'*') ='*' AND  L.PROCESSDEFID = CW.PROCESSDEFID) OR (COALESCE(L.SUBPROCESSDEFID,'*') != '*' AND L.SUBPROCESSDEFID = CW.PROCESSDEFID))
		INNER   JOIN BAS_PROCESSPATH     PP ON  ((COALESCE(L.SUBPROCESSDEFID,'*') ='*' AND  L.PROCESSDEFID = PP.PROCESSDEFID) OR (COALESCE(L.SUBPROCESSDEFID,'*') != '*' AND L.SUBPROCESSDEFID = PP.PROCESSDEFID))
			                               AND ((COALESCE(L.SUBPROCESSDEFID,'*') ='*' AND  L.PROCESSDEFVERSION = PP.PROCESSDEFVERSION) OR (COALESCE(L.SUBPROCESSDEFID,'*') != '*'AND L.SUBPROCESSDEFVERSION = PP.PROCESSDEFVERSION))
		                                   AND L.PROCESSSEGMENTID = PP.PROCESSSEGMENTID	
		LEFT OUTER JOIN CMD_CODE_V					OT	ON	L.LOTTYPE = OT.CODEID
													AND	OT.CODECLASSID = 'ProductionType'
		LEFT OUTER JOIN CMD_DICTIONARY			OTD	ON	OT.DICTIONARYID = OTD.DICTIONARYID
													AND	OTD.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
		WHERE	1 = 1
		AND		L.PLANTID = #{PLANTID}
		AND		L.AREAID = #{AREAID}
		AND		L.PROCESSSTATE = 'WaitForSend'
       	AND		L.LOTID = #{LOTID}
		AND		L.LOTCREATEDTYPE IN ('Normal','SplitRoll', 'FinalInspect', 'Repair', 'Return')
		AND		EXISTS
				(
					SELECT	1
					FROM	ufn_selectStringToSplit(COALESCE(ST2.STEPTYPE, ST1.STEPTYPE)	, ',')	T
					WHERE	T.VALUE = #{PREVPROCESSSTATE}
				)
		<if test="PRODUCTDEFID != null and PRODUCTDEFID !='' ">
        	AND		L.PRODUCTDEFID LIKE '%' || UPPER(#{PRODUCTDEFID}) ||'%'
        </if>
    </select>    
</mapper>
