<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="smh.pcm.dao.PCMWorkProcessDao">
    
	<insert id="insertPcmLotlocking" parameterType="map">
	<!-- smh.pcm.dao.PCMWorkProcessDao.insertPcmLotlocking -->
	    INSERT 
	      INTO PCM_LOTLOCKING(  TXNHISTKEY  
	                          , LOTID  
	                          , ENTERPRISEID  
	                          , PLANTID  
	                          , AREAID  
	                          , PRODUCTDEFID  
	                          , PRODUCTDEFVERSION  
	                          , PROCESSDEFID  
	                          , PROCESSDEFVERSION  
	                          , USERSEQUENCE  
	                          , PROCESSSEGMENTID  
	                          , PROCESSSEGMENTVERSION  
	                          , WORKCOUNT  
	                          , LOCKINGSTATUS  
	                          , LOCKINGTYPE  
	                          , LOCKINGCODE  
	                          , COMMENTS  
	                          , UNLOCKINGCODE  
	                          , RELEASECOMMENTS  
	                          , DESCRIPTION  
	                          , CREATOR  
	                          , CREATEDTIME  
	                          , TXNGROUPHISTKEY  
	                          , TXNUSER  
	                          , TXNTIME  
	                          , TXNREASONCODECLASS  
	                          , TXNREASONCODE  
	                          , TXNCOMMENT        
	                         ) VALUES (    #{TXNHISTKEY}  
	                                     , #{LOTID}  
	                                     , #{ENTERPRISEID}  
	                                     , #{PLANTID}  
	                                     , #{AREAID}  
	                                     , #{PRODUCTDEFID}  
	                                     , #{PRODUCTDEFVERSION}  
	                                     , #{PROCESSDEFID}  
	                                     , #{PROCESSDEFVERSION}  
	                                     , #{USERSEQUENCE}  
	                                     , #{PROCESSSEGMENTID}  
	                                     , #{PROCESSSEGMENTVERSION}  
	                                     , #{WORKCOUNT}  
	                                     , #{LOCKINGSTATUS}  
	                                     , #{LOCKINGTYPE}  
	                                     , #{LOCKINGCODE}  
	                                     , #{COMMENTS}  
	                                     , #{UNLOCKINGCODE}  
	                                     , #{RELEASECOMMENTS}  
	                                     , #{DESCRIPTION}  
	                                     , #{CREATOR}  
	                                     , SYSDATE  
	                                     , #{TXNGROUPHISTKEY}  
	                                     , #{TXNUSER}  
	                                     , SYSDATE 
	                                     , #{TXNREASONCODECLASS}  
	                                     , #{TXNREASONCODE}  
	                                     , #{TXNCOMMENT}    
	                                  )
	</insert>	
	<update id="updatePcmLotreservelocking" parameterType="map" >
	<!-- smh.pcm.dao.PCMWorkProcessDao.updatePcmLotreservelocking -->
	    UPDATE PCM_LOTRESERVELOCKING 
	       SET ENTERPRISEID          = #{ENTERPRISEID}     
	         , PLANTID               = #{PLANTID}     
	         , PROCESSDEFID          = #{PROCESSDEFID}     
	         , PROCESSDEFVERSION     = #{PROCESSDEFVERSION}     
	         , PROCESSSEGMENTID      = #{PROCESSSEGMENTID}     
	         , PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}     
	         , LOCKINGTYPE           = #{LOCKINGTYPE}     
	         , LOCKINGCODE           = #{LOCKINGCODE}     
	         , COMMENTS              = #{COMMENTS}     
	         , LOCKINGSTATUS         = #{LOCKINGSTATUS}     
	         , DESCRIPTION           = #{DESCRIPTION}                     
	         , TXNGROUPHISTKEY       = #{TXNGROUPHISTKEY}     
	         , TXNUSER               = #{TXNUSER}     
	         , TXNTIME               = SYSDATE     
	         , TXNREASONCODECLASS    = #{TXNREASONCODECLASS}     
	         , TXNREASONCODE         = #{TXNREASONCODE}     
	         , TXNCOMMENT            = #{TXNCOMMENT}     
	         , LOCKING_PROCESSSTATE  = #{LOCKING_PROCESSSTATE}
	     WHERE LOTID                 = #{LOTID}
	       AND TXNHISTKEY            = #{TXNHISTKEY}
	</update>		
	 <insert id="insertPcmDelaylot" parameterType="map">
	 <!-- smh.pcm.dao.PCMWorkProcessDao.insertPcmDelaylot -->
	    INSERT INTO PCM_DELAYLOT( 
	        LOTID  
	        ,PRODUCTDEFID  
	        ,PRODUCTDEFVERSION  
	        ,PROCESSDEFID  
	        ,PROCESSDEFVERSION  
	        ,PROCESSSEGMENTID  
	        ,PROCESSSEGMENTVERSION  
	        ,PROCESSSTATE  
	        ,WORKCOUNT  
	        ,ENTERPRISEID  
	        ,PLANTID  
	        ,AREAID  
	        ,STDDELAYTIME  
	        ,DELAYTIME  
	        ,CHECKSTARTTIME  
	        ,CHECKENDTIME  
	        ,DELAYREASONCODE  
	        ,DELAYCOMMENT  
	        ,DESCRIPTION  
	        ,CREATOR  
	        ,CREATEDTIME  
	        ,MODIFIER  
	        ,MODIFIEDTIME  
	        ,LASTTXNHISTKEY  
	        ,LASTTXNID  
	        ,LASTTXNUSER  
	        ,LASTTXNTIME  
	        ,LASTTXNCOMMENT  
	        ,VALIDSTATE        ) 
	    VALUES( 
	        #{LOTID}  
	        ,#{PRODUCTDEFID}  
	        ,#{PRODUCTDEFVERSION}  
	        ,#{PROCESSDEFID}  
	        ,#{PROCESSDEFVERSION}  
	        ,#{PROCESSSEGMENTID}  
	        ,#{PROCESSSEGMENTVERSION}  
	        ,#{PROCESSSTATE}  
	        ,#{WORKCOUNT}  
	        ,#{ENTERPRISEID}  
	        ,#{PLANTID}  
	        ,#{AREAID}  
	        ,#{STDDELAYTIME}  
	        ,#{DELAYTIME}  
	        ,#{CHECKSTARTTIME}  
	        ,#{CHECKENDTIME}  
	        ,#{DELAYREASONCODE}  
	        ,#{DELAYCOMMENT}  
	        ,#{DESCRIPTION}  
	        ,#{CREATOR}  
	        ,SYSDATE  
	        ,#{MODIFIER}  
	        ,SYSDATE  
	        ,#{LASTTXNHISTKEY}  
	        ,#{LASTTXNID}  
	        ,#{LASTTXNUSER}  
	        ,SYSDATE
	        ,#{LASTTXNCOMMENT}  
	        ,#{VALIDSTATE}    )
    </insert>	
    <select id="getNotExistsLotEquipment" parameterType="map" resultType="hashmap">
    <!-- smh.pcm.dao.PCMWorkProcessDao.getNotExistsLotEquipment -->
	    SELECT LE.LOTID
	         , LE.TXNHISTKEY
	         , LE.EQUIPMENTID
	         , LE.PROCESSSEGMENTID
	         , LE.PROCESSSEGMENTVERSION
	      FROM PCM_LOTEQUIPMENT LE
	     WHERE LE.LOTID                 = #{LOTID}
	       AND LE.PROCESSSEGMENTID      = #{PROCESSSEGMENTID}
	       AND LE.PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
	       AND NOT EXISTS (
	                         SELECT 1
	                           FROM (
	                                   SELECT TRIM(REGEXP_SUBSTR(ORG_DATA, '[^,]+', 1, LEVEL)) AS EQUIPMENTID
	                                     FROM (SELECT  #{EQUIPMENTID} AS ORG_DATA FROM DUAL)
	                               CONNECT BY INSTR(ORG_DATA, ',', 1, LEVEL - 1) > 0
	                                ) MAP
	                          WHERE LE.EQUIPMENTID = MAP.EQUIPMENTID
	                      )
	       AND LE.WORKCOUNT = #{WORKCOUNT}    
    </select>
    <delete id="deletePcmLotequipment" parameterType="map" > 
    <!-- smh.pcm.dao.PCMWorkProcessDao.deletePcmLotequipment -->
    	DELETE FROM PCM_LOTEQUIPMENT 
    	 WHERE LOTID     = #{LOTID}
    	  AND TXNHISTKEY = #{TXNHISTKEY}
    </delete> 
	<insert id="insertPcmLotequipment" parameterType="map">
	 <!-- smh.pcm.dao.PCMWorkProcessDao.insertPcmLotequipment -->
	    INSERT INTO PCM_LOTEQUIPMENT(  LOTID  
	                                 , TXNHISTKEY  
	                                 , EQUIPMENTID  
	                                 , PROCESSSTATE  
	                                 , PROCESSSEGMENTID  
	                                 , PROCESSSEGMENTVERSION  
	                                 , WORKCOUNT  
	                                 , RECEIVETIME  
	                                 , TRACKINTIME  
	                                 , TRACKOUTTIME  
	                                 , LOTQTY  
	                                 , DESCRIPTION  
	                                 , CREATOR  
	                                 , CREATEDTIME  
	                                 , MODIFIER  
	                                 , MODIFIEDTIME  
	                                 , TXNGROUPHISTKEY  
	                                 , TXNID  
	                                 , TXNUSER  
	                                 , TXNTIME  
	                                 , TXNREASONCODECLASS  
	                                 , TXNREASONCODE  
	                                 , TXNCOMMENT  
	                                 , RECIPEID  
	                                 , RECIPEVERSION  
	                                 , RECIPETYPE        
	                                ) VALUES (  #{LOTID}  
	                                          , #{TXNHISTKEY}  
	                                          , #{EQUIPMENTID}  
	                                          , #{PROCESSSTATE}  
	                                          , #{PROCESSSEGMENTID}  
	                                          , #{PROCESSSEGMENTVERSION}  
	                                          , #{WORKCOUNT}  
	                                          , #{RECEIVETIME}  
	                                          , #{TRACKINTIME}  
	                                          , #{TRACKOUTTIME}  
	                                          , #{LOTQTY}  
	                                          , #{DESCRIPTION}  
	                                          , #{CREATOR}  
	                                          , SYSDATE  
	                                          , #{MODIFIER}  
	                                          , SYSDATE  
	                                          , #{TXNGROUPHISTKEY}  
	                                          , #{TXNID}  
	                                          , #{TXNUSER}  
	                                          , SYSDATE
	                                          , #{TXNREASONCODECLASS}  
	                                          , #{TXNREASONCODE}  
	                                          , #{TXNCOMMENT}  
	                                          , #{RECIPEID}  
	                                          , #{RECIPEVERSION}  
	                                          , #{RECIPETYPE}    
	                                         )
	</insert>
	<update id="updatePcmLotequipment" parameterType="map" >
	 <!-- smh.pcm.dao.PCMWorkProcessDao.updatePcmLotequipment -->
	    UPDATE PCM_LOTEQUIPMENT 
	       SET EQUIPMENTID           = #{EQUIPMENTID}     
	         , PROCESSSTATE          = #{PROCESSSTATE}     
	         , PROCESSSEGMENTID      = #{PROCESSSEGMENTID}     
	         , PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}     
	         , WORKCOUNT             = #{WORKCOUNT}     
	         , RECEIVETIME           = #{RECEIVETIME}     
	         , TRACKINTIME           = #{TRACKINTIME}     
	         , TRACKOUTTIME          = #{TRACKOUTTIME}     
	         , LOTQTY                = #{LOTQTY}     
	         , DESCRIPTION           = #{DESCRIPTION}                     
	         , MODIFIER              = #{MODIFIER}     
	         , MODIFIEDTIME          = SYSDATE     
	         , TXNGROUPHISTKEY       = #{TXNGROUPHISTKEY}     
	         , TXNID                 = #{TXNID}     
	         , TXNUSER               = #{TXNUSER}     
	         , TXNTIME               = SYSDATE
	         , TXNREASONCODECLASS    = #{TXNREASONCODECLASS}     
	         , TXNREASONCODE         = #{TXNREASONCODE}     
	         , TXNCOMMENT            = #{TXNCOMMENT}     
	         , RECIPEID              = #{RECIPEID}     
	         , RECIPEVERSION         = #{RECIPEVERSION}     
	         , RECIPETYPE            = #{RECIPETYPE}
	     WHERE LOTID                 = #{LOTID}
	       AND TXNHISTKEY            = #{TXNHISTKEY}
	</update>	
	<update id="updateBasEquipment" parameterType="map" >
	 <!-- smh.pcm.dao.PCMWorkProcessDao.updateBasEquipment -->
	    UPDATE BAS_EQUIPMENT 
	       SET RECIPECLASSID             = #{RECIPECLASSID}     
	         , EQUIPMENTCLASSID          = #{EQUIPMENTCLASSID}     
	         , EQUIPMENTNAME             = #{EQUIPMENTNAME}     
	         , ENTERPRISEID              = #{ENTERPRISEID}     
	         , PLANTID                   = #{PLANTID}     
	         , AREAID                    = #{AREAID}     
	         , LOCATIONID                = #{LOCATIONID}     
	         , EQUIPMENTTYPE             = #{EQUIPMENTTYPE}     
	         , DETAILEQUIPMENTTYPE       = #{DETAILEQUIPMENTTYPE}     
	         , PARENTEQUIPMENTID         = #{PARENTEQUIPMENTID}     
	         , STATEMODELID              = #{STATEMODELID}     
	         , VENDORID                  = #{VENDORID}     
	         , MODEL                     = #{MODEL}     
	         , SERIALNO                  = #{SERIALNO}     
	         , PROCESSUNIT               = #{PROCESSUNIT}     
	         , MINCAPACITY               = #{MINCAPACITY}     
	         , MAXCAPACITY               = #{MAXCAPACITY}     
	         , TACTTIME                  = #{TACTTIME}     
	         , LEADTIME                  = #{LEADTIME}     
	         , STATE                     = #{STATE}     
	         , E10STATE                  = #{E10STATE}     
	         , CONTROLMODE               = #{CONTROLMODE}     
	         , OPERATIONMODE             = #{OPERATIONMODE}     
	         , CURRENTRECIPEDEFID        = #{CURRENTRECIPEDEFID}     
	         , CURRENTRECIPEDEFVERSION   = #{CURRENTRECIPEDEFVERSION}     
	         , PROCESSEDLOTCOUNT         = #{PROCESSEDLOTCOUNT}     
	         , LASTLOTID                 = #{LASTLOTID}     
	         , LASTPRODUCTDEFID          = #{LASTPRODUCTDEFID}     
	         , LASTPRODUCTDEFVERSION     = #{LASTPRODUCTDEFVERSION}     
	         , LASTPROCESSSEGMENTID      = #{LASTPROCESSSEGMENTID}     
	         , LASTPROCESSSEGMENTVERSION = #{LASTPROCESSSEGMENTVERSION}     
	         , TCID                      = #{TCID}     
	         , DESCRIPTION               = #{DESCRIPTION}                     
	         , MODIFIER                  = #{MODIFIER}     
	         , MODIFIEDTIME              = SYSDATE     
	         , LASTTXNHISTKEY            = #{LASTTXNHISTKEY}     
	         , LASTTXNID                 = #{LASTTXNID}     
	         , LASTTXNUSER               = #{LASTTXNUSER}     
	         , LASTTXNTIME               = SYSDATE    
	         , LASTTXNCOMMENT            = #{LASTTXNCOMMENT}     
	         , VALIDSTATE                = #{VALIDSTATE}
	     WHERE EQUIPMENTID               = #{EQUIPMENTID}
	</update>
	<insert id="insertBasArea" parameterType="map">
	<!-- smh.pcm.dao.PCMWorkProcessDao.insertBasArea -->
	    INSERT INTO BAS_AREA(  AREAID  
	                         , ENTERPRISEID  
	                         , PLANTID  
	                         , FACTORYID  
	                         , AREANAME  
	                         , AREATYPE  
	                         , WAREHOUSEID  
	                         , VENDORID  
	                         , OWNTYPE  
	                         , PARENTAREAID  
	                         , DESCRIPTION  
	                         , CREATOR  
	                         , CREATEDTIME  
	                         , MODIFIER  
	                         , MODIFIEDTIME  
	                         , LASTTXNHISTKEY  
	                         , LASTTXNID  
	                         , LASTTXNUSER  
	                         , LASTTXNTIME  
	                         , LASTTXNCOMMENT  
	                         , VALIDSTATE  
	                         , ISSUBCONTRACT        
	                        ) VALUES(  #{AREAID}  
	                                 , #{ENTERPRISEID}  
	                                 , #{PLANTID}  
	                                 , #{FACTORYID}  
	                                 , #{AREANAME}  
	                                 , #{AREATYPE}  
	                                 , #{WAREHOUSEID}  
	                                 , #{VENDORID}  
	                                 , #{OWNTYPE}  
	                                 , #{PARENTAREAID}  
	                                 , #{DESCRIPTION}  
	                                 , #{CREATOR}  
	                                 , SYSDATE  
	                                 , #{MODIFIER}  
	                                 , SYSDATE  
	                                 , #{LASTTXNHISTKEY}  
	                                 , #{LASTTXNID}  
	                                 , #{LASTTXNUSER}  
	                                 , SYSDATE 
	                                 , #{LASTTXNCOMMENT}  
	                                 , #{VALIDSTATE}  
	                                 , #{ISSUBCONTRACT}    
	                                )
	</insert>
	<select id="selectTomDurabledefinition" parameterType="map" resultType="map">
	<!-- smh.pcm.dao.PCMWorkProcessDao.selectTomDurabledefinition -->
	    SELECT A.DURABLEDEFID  
	         , A.DURABLEDEFVERSION  
	         , A.DURABLECLASSID  
	         , A.DURABLEDEFNAME  
	         , A.ENTERPRISEID  
	         , A.PLANTID  
	         , A.PRODUCTDEFID  
	         , A.PRODUCTDEFVERSION  
	         , A.DURABLETYPE  
	         , A.MINCAPACITY  
	         , A.MAXCAPACITY  
	         , A.USEDLIMITTYPE  
	         , A.USEDLIMIT  
	         , A.CLEANLIMITTYPE  
	         , A.CLEANLIMIT  
	         , A.TOOLTYPE  
	         , A.TOOLDETAILTYPE  
	         , A.THICKNESSLIMIT  
	         , A.USEDFACTOR  
	         , A.FILMUSELAYER1  
	         , A.VERSIONSTATE  
	         , A.DESCRIPTION  
	         , A.CREATOR  
	         , A.CREATEDTIME  
	         , A.MODIFIER  
	         , A.MODIFIEDTIME  
	         , A.LASTTXNHISTKEY  
	         , A.LASTTXNID  
	         , A.LASTTXNUSER  
	         , A.LASTTXNTIME  
	         , A.LASTTXNCOMMENT  
	         , A.VALIDSTATE  
	         , A.FORM  
	         , A.FILMUSELAYER2  
	         , A.SUMMARY  
	         , A.SCALEX  
	         , A.SCALEY  
	         , A.HITCOUNT  
	         , A.TOOLKIND  
	         , A.MANUFACTURER  
	         , A.RECEIPTAREAID  
	      FROM TOM_DURABLEDEFINITION A 
	     WHERE A.DURABLEDEFID      = #{DURABLEDEFID}
	       AND A.DURABLEDEFVERSION = #{DURABLEDEFVERSION}
	</select>
	<!-- LOT별 투입 자재사용 이력 조회-->
	<select id="selectPcmConsumemateriallotTempList" parameterType="map" resultType="hashmap">
	<!-- smh.pcm.dao.PCMWorkProcessDao.selectPcmConsumemateriallotTempList -->
	    SELECT *
	    FROM	PCM_CONSUMEMATERIALLOT_TEMP A 
	    WHERE 1=1 
	    <if test="LOTID != null and LOTID !='' "> 
	        AND A.LOTID = #{LOTID}
	    </if>
	    <if test="MATERIALLOTID != null and MATERIALLOTID !='' "> 
	        AND A.MATERIALLOTID = #{MATERIALLOTID}
	    </if>
	    <if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !='' "> 
	        AND A.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
	    </if>
	    <if test="ENTERPRISEID != null and ENTERPRISEID !='' "> 
	        AND A.ENTERPRISEID = #{ENTERPRISEID}
	    </if>
	    <if test="PLANTID != null and PLANTID !='' "> 
	        AND A.PLANTID = #{PLANTID}
	    </if>
	    <if test="MATERIALTYPE != null and MATERIALTYPE !='' "> 
	        AND A.MATERIALTYPE = #{MATERIALTYPE}
	    </if>
	    <if test="AREAID != null and AREAID !='' "> 
	        AND A.AREAID = #{AREAID}
	    </if>
	    <if test="EQUIPMENTID != null and EQUIPMENTID !='' "> 
	        AND A.EQUIPMENTID = #{EQUIPMENTID}
	    </if>
	    <if test="MATERIALDEFID != null and MATERIALDEFID !='' "> 
	        AND A.MATERIALDEFID = #{MATERIALDEFID}
	    </if>
	    <if test="MATERIALDEFVERSION != null and MATERIALDEFVERSION !='' "> 
	        AND A.MATERIALDEFVERSION = #{MATERIALDEFVERSION}
	    </if>
	    <if test="CONSUMEDQTY != null and CONSUMEDQTY !='' "> 
	        AND A.CONSUMEDQTY = #{CONSUMEDQTY}
	    </if>
	    <if test="SEQUENCE != null and SEQUENCE !='' "> 
	        AND A.SEQUENCE = #{SEQUENCE}
	    </if>
	    <if test="TXNREASONCODECLASS != null and TXNREASONCODECLASS !='' "> 
	        AND A.TXNREASONCODECLASS = #{TXNREASONCODECLASS}
	    </if>
	    <if test="TXNREASONCODE != null and TXNREASONCODE !='' "> 
	        AND A.TXNREASONCODE = #{TXNREASONCODE}
	    </if>
	    <if test="TXNCOMMENT != null and TXNCOMMENT !='' "> 
	        AND A.TXNCOMMENT = #{TXNCOMMENT}
	    </if>
	</select>	
	<insert id="insertPcmConsumemateriallotTemp" parameterType="map">
	<!-- smh.pcm.dao.PCMWorkProcessDao.insertPcmConsumemateriallotTemp -->
	    INSERT INTO PCM_CONSUMEMATERIALLOT_TEMP(  LOTID  
	                                            , MATERIALLOTID  
	                                            , PROCESSSEGMENTID  
	                                            , ENTERPRISEID  
	                                            , PLANTID  
	                                            , MATERIALTYPE  
	                                            , AREAID  
	                                            , EQUIPMENTID  
	                                            , MATERIALDEFID  
	                                            , MATERIALDEFVERSION  
	                                            , CONSUMEDQTY  
	                                            , SEQUENCE  
	                                            , CREATOR  
	                                            , CREATEDTIME  
	                                            , TXNGROUPHISTKEY  
	                                            , TXNUSER  
	                                            , TXNTIME  
	                                            , TXNREASONCODECLASS  
	                                            , TXNREASONCODE  
	                                            , TXNCOMMENT  
	                                            , WAREHOUSEID        
	                                           ) VALUES(   #{LOTID}  
	                                                     , #{MATERIALLOTID}  
	                                                     , #{PROCESSSEGMENTID}  
	                                                     , #{ENTERPRISEID}  
	                                                     , #{PLANTID}  
	                                                     , #{MATERIALTYPE}  
	                                                     , #{AREAID}  
	                                                     , #{EQUIPMENTID}  
	                                                     , #{MATERIALDEFID}  
	                                                     , #{MATERIALDEFVERSION}  
	                                                     , #{CONSUMEDQTY}  
	                                                     , #{SEQUENCE}  
	                                                     , #{CREATOR}  
	                                                     , SYSDATE  
	                                                     , #{TXNGROUPHISTKEY}  
	                                                     , #{TXNUSER}  
	                                                     , SYSDATE
	                                                     , #{TXNREASONCODECLASS}  
	                                                     , #{TXNREASONCODE}  
	                                                     , #{TXNCOMMENT}  
	                                                     , #{WAREHOUSEID}    
	                                                   )
	</insert> 
	<insert id="insertPcmLotdurable" parameterType="map">
	<!-- smh.pcm.dao.PCMWorkProcessDao.insertPcmLotdurable -->
	    INSERT INTO PCM_LOTDURABLE(  TXNHISTKEY  
	                               , LOTID  
	                               , EQUIPMENTID  
	                               , DURABLELOTID  
	                               , PROCESSSEGMENTID  
	                               , PROCESSSEGMENTVERSION  
	                               , WORKCOUNT  
	                               , WORKSTARTTIME  
	                               , WORKENDTIME  
	                               , USEDQTY  
	                               , DESCRIPTION  
	                               , CREATOR  
	                               , CREATEDTIME  
	                               , MODIFIER  
	                               , MODIFIEDTIME  
	                               , TXNGROUPHISTKEY  
	                               , TXNID  
	                               , TXNUSER  
	                               , TXNTIME  
	                               , TXNREASONCODECLASS  
	                               , TXNREASONCODE  
	                               , TXNCOMMENT        
	                              ) VALUES (  #{TXNHISTKEY}  
	                                        , #{LOTID}  
	                                        , #{EQUIPMENTID}  
	                                        , #{DURABLELOTID}  
	                                        , #{PROCESSSEGMENTID}  
	                                        , #{PROCESSSEGMENTVERSION}  
	                                        , #{WORKCOUNT}  
	                                        , #{WORKSTARTTIME}  
	                                        , #{WORKENDTIME}  
	                                        , #{USEDQTY}  
	                                        , #{DESCRIPTION}  
	                                        , #{CREATOR}  
	                                        , SYSDATE  
	                                        , #{MODIFIER}  
	                                        , SYSDATE  
	                                        , #{TXNGROUPHISTKEY}  
	                                        , #{TXNID}  
	                                        , #{TXNUSER}  
	                                        , SYSDATE 
	                                        , #{TXNREASONCODECLASS}  
	                                        , #{TXNREASONCODE}  
	                                        , #{TXNCOMMENT}    
	                                       )
	</insert>
	<update id="updateTomDurablelot" parameterType="map" >
	<!-- smh.pcm.dao.PCMWorkProcessDao.updateTomDurablelot -->
	    UPDATE TOM_DURABLELOT 
	       SET DURABLELOTGROUPID    = #{DURABLELOTGROUPID}     
	         , DURABLEDEFID         = #{DURABLEDEFID}     
	         , DURABLEDEFVERSION    = #{DURABLEDEFVERSION}     
	         , DURABLELOTNAME       = #{DURABLELOTNAME}     
	         , ENTERPRISEID         = #{ENTERPRISEID}     
	         , PLANTID              = #{PLANTID}     
	         , AREAID               = #{AREAID}     
	         , EQUIPMENTID          = #{EQUIPMENTID}     
	         , LOCATIONID           = #{LOCATIONID}     
	         , DURABLESTATE         = #{DURABLESTATE}     
	         , DURABLECLEANSTATE    = #{DURABLECLEANSTATE}     
	         , ISHOLD               = #{ISHOLD}     
	         , DURABLELOTQTY        = #{DURABLELOTQTY}     
	         , USEDCOUNT            = #{USEDCOUNT}     
	         , TOTALUSEDCOUNT       = #{TOTALUSEDCOUNT}     
	         , TOTALCLEANCOUNT      = #{TOTALCLEANCOUNT}     
	         , TOTALREPAIRCOUNT     = #{TOTALREPAIRCOUNT}     
	         , VENDORID             = #{VENDORID}     
	         , OWNSHIPTYPE          = #{OWNSHIPTYPE}     
	         , WEIGHT               = #{WEIGHT}     
	         , HORIZONTAL           = #{HORIZONTAL}     
	         , VERTICAL             = #{VERTICAL}     
	         , HEIGHT               = #{HEIGHT}     
	         , FORM                 = #{FORM}     
	         , CREATEDTHICKNESS     = #{CREATEDTHICKNESS}     
	         , POLISHTHICKNESS      = #{POLISHTHICKNESS}     
	         , TOTALPOLISHTHICKNESS = #{TOTALPOLISHTHICKNESS}     
	         , RESOLUTION           = #{RESOLUTION}     
	         , ISCOATING            = #{ISCOATING}     
	         , CONTRACTIONX         = #{CONTRACTIONX}     
	         , CONTRACTIONY         = #{CONTRACTIONY}     
	         , DESCRIPTION          = #{DESCRIPTION}                     
	         , MODIFIER             = #{MODIFIER}     
	         , MODIFIEDTIME         = SYSDATE     
	         , LASTTXNHISTKEY       = #{LASTTXNHISTKEY}     
	         , LASTTXNID            = #{LASTTXNID}     
	         , LASTTXNUSER          = #{LASTTXNUSER}     
	         , LASTTXNTIME          = SYSDATE     
	         , LASTTXNCOMMENT       = #{LASTTXNCOMMENT}     
	         , CLEANLIMIT           = #{CLEANLIMIT}     
	         , USEDLIMIT            = #{USEDLIMIT}
	     WHERE DURABLELOTID = #{DURABLELOTID}
	</update>
	<update id="updatePcmDelaylot" parameterType="map" >
	<!-- smh.pcm.dao.PCMWorkProcessDao.updatePcmDelaylot -->
	    UPDATE PCM_DELAYLOT 
	       SET ENTERPRISEID         = #{ENTERPRISEID}     
	         , PLANTID              = #{PLANTID}     
	         , AREAID               = #{AREAID}     
	         , STDDELAYTIME         = #{STDDELAYTIME}     
	         , DELAYTIME            = #{DELAYTIME}     
	         , CHECKSTARTTIME       = #{CHECKSTARTTIME}     
	         , CHECKENDTIME         = #{CHECKENDTIME}     
	         , DELAYREASONCODE      = #{DELAYREASONCODE}     
	         , DELAYCOMMENT         = #{DELAYCOMMENT}     
	         , DESCRIPTION          = #{DESCRIPTION}                     
	         , MODIFIER             = #{MODIFIER}     
	         , MODIFIEDTIME         = SYSDATE     
	         , LASTTXNHISTKEY       = #{LASTTXNHISTKEY}     
	         , LASTTXNID            = #{LASTTXNID}     
	         , LASTTXNUSER          = #{LASTTXNUSER}     
	         , LASTTXNTIME          = SYSDATE    
	         , LASTTXNCOMMENT       = #{LASTTXNCOMMENT}     
	         , VALIDSTATE           = #{VALIDSTATE}
	    WHERE LOTID                 = #{LOTID}
	      AND PROCESSDEFID          = #{PROCESSDEFID}
	      AND PROCESSDEFVERSION     = #{PROCESSDEFVERSION}
	      AND PROCESSSEGMENTID      = #{PROCESSSEGMENTID}
	      AND PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
	      AND PROCESSSTATE          = #{PROCESSSTATE}
	      AND PRODUCTDEFID          = #{PRODUCTDEFID}
	      AND PRODUCTDEFVERSION     = #{PRODUCTDEFVERSION}
	      AND WORKCOUNT             = #{WORKCOUNT}
	</update>
	<select id="getRunEquipmentCount" parameterType="map" resultType="int">
	<!-- smh.pcm.dao.PCMWorkProcessDao.getRunEquipmentCount -->
				SELECT COUNT(*)			AS CNT
				  FROM	PCM_LOTEQUIPMENT LE
				 WHERE	LE.LOTID      != #{LOTID}
				   AND	LE.EQUIPMENTID = #{EQUIPMENTID}
				   AND	LE.TRACKINTIME IS NOT NULL
				   AND	LE.TRACKOUTTIME IS NULL

	</select>	
	<select id="selectOperationPullByProcess" parameterType="map" resultType="hashmap">
	<!-- smh.pcm.dao.PCMWorkProcessDao.selectOperationPullByProcess -->
	    SELECT CD.CONSUMABLEDEFID
	             , CD.CONSUMABLEDEFVERSION
	             , CD.CONSUMABLEDEFNAME
	             , BOM.QTY      AS STANDARDREQUIREMENTQTY
	             , (L.QTY * BOM.QTY) AS REQUIREMENTQTY
	             , A.WAREHOUSEID
	          FROM PCM_LOT      L
	    INNER JOIN BAS_AREA     A              ON L.AREAID                = A.AREAID
	    												AND NVL(A.ISSUBCONTRACT, 'N') != 'Y' --2021-06-22 최성민 추가 (작업장 무상사급여부가 Y가 아닌것만 자재 실적넣도록)
	    INNER JOIN BAS_BILLOFMATERIAL  BOM     ON L.ENTERPRISEID          = BOM.ENTERPRISEID
	                                          AND L.PRODUCTDEFID          = BOM.PRODUCTDEFID
	                                          AND L.PRODUCTDEFVERSION     = BOM.PRODUCTDEFVERSION
	                                          AND BOM.PROCESSDEFID        = #{PROCESSDEFID}
	                                          AND BOM.PROCESSDEFVERSION   = #{PROCESSDEFVERSION}
	                                          AND L.PROCESSSEGMENTID      = BOM.PROCESSSEGMENTID
	                                          AND L.PROCESSSEGMENTVERSION = BOM.PROCESSSEGMENTVERSION
	                                          AND BOM.WIPSUPPLYTYPE       = 'OperationPull'
	                                          AND	 BOM.VALIDSTATE 			  = 'Valid'
	    INNER JOIN BAS_CONSUMABLEDEFINITION CD ON BOM.ENTERPRISEID        = CD.ENTERPRISEID
	                                          AND BOM.MATERIALDEFID       = CD.CONSUMABLEDEFID
	                                          AND BOM.MATERIALDEFVERSION  = CD.CONSUMABLEDEFVERSION
	         WHERE L.ENTERPRISEID = #{ENTERPRISEID}
	           AND L.PLANTID      = #{PLANTID}
	           AND L.LOTID        = #{LOTID}
	      ORDER BY BOM."sequence" ASC	
	</select>
	<select id="selectTomDurablelot" parameterType="map" resultType="hashmap">
	<!-- smh.pcm.dao.PCMWorkProcessDao.selectTomDurablelot -->
	    SELECT A.DURABLELOTID	 
	         , A.DURABLELOTGROUPID	 
	         , A.DURABLEDEFID	 
	         , A.DURABLEDEFVERSION	 
	         , A.DURABLELOTNAME	 
	         , A.ENTERPRISEID	 
	         , A.PLANTID	 
	         , A.AREAID	 
	         , A.EQUIPMENTID	 
	         , A.LOCATIONID	 
	         , A.DURABLESTATE	 
	         , A.DURABLECLEANSTATE	 
	         , A.ISHOLD	 
	         , A.DURABLELOTQTY	 
	         , A.USEDCOUNT	 
	         , A.TOTALUSEDCOUNT	 
	         , A.TOTALCLEANCOUNT	 
	         , A.TOTALREPAIRCOUNT	 
	         , A.VENDORID	 
	         , A.OWNSHIPTYPE	 
	         , A.WEIGHT	 
	         , A.HORIZONTAL	 
	         , A.VERTICAL	 
	         , A.HEIGHT	 
	         , A.FORM	 
	         , A.CREATEDTHICKNESS	 
	         , A.POLISHTHICKNESS	 
	         , A.TOTALPOLISHTHICKNESS	 
	         , A.RESOLUTION	 
	         , A.ISCOATING	 
	         , A.CONTRACTIONX	 
	         , A.CONTRACTIONY	 
	         , A.DESCRIPTION	 
	         , A.LASTTXNCOMMENT	 
	         , A.CLEANLIMIT	 
	         , A.USEDLIMIT	 
	      FROM	TOM_DURABLELOT A 
	     WHERE A.DURABLELOTID = #{DURABLELOTID}
	</select>	
	<select id="selectPcmLotdurable" parameterType="map" resultType="map">
	<!-- smh.pcm.dao.PCMWorkProcessDao.selectPcmLotdurable -->
	    SELECT A.TXNHISTKEY	 
	         , A.LOTID	 
	         , A.EQUIPMENTID	 
	         , A.DURABLELOTID	 
	         , A.PROCESSSEGMENTID	 
	         , A.PROCESSSEGMENTVERSION	 
	         , A.WORKCOUNT	 
	         , A.WORKSTARTTIME	 
	         , A.WORKENDTIME	 
	         , A.USEDQTY	 
	         , A.DESCRIPTION	   
	         , A.TXNREASONCODECLASS	 
	         , A.TXNREASONCODE	 
	         , A.TXNCOMMENT	 
	      FROM	PCM_LOTDURABLE A 
	     WHERE A.DURABLELOTID = #{DURABLELOTID}
	       AND	A.EQUIPMENTID  = #{EQUIPMENTID}
	       AND	A.LOTID        = #{LOTID} 
	       AND	A.TXNHISTKEY   = #{TXNHISTKEY}    
	</select>
	<select id="getInUseDurableCount" parameterType="map" resultType="int">	
	<!-- smh.pcm.dao.PCMWorkProcessDao.getInUseDurableCount -->
	     SELECT COUNT(*) AS CNT
		   FROM	PCM_LOTDURABLE LD
		  WHERE	LD.LOTID         != #{LOTID}
			AND	LD.DURABLELOTID   = #{DURABLELOTID}
		    AND	LD.WORKSTARTTIME IS NOT NULL
		    AND	LD.WORKENDTIME IS NULL	
	</select>
	<update id="updatePcmLotdurable" parameterType="map" >
	<!-- smh.pcm.dao.PCMWorkProcessDao.updatePcmLotdurable -->
	    UPDATE PCM_LOTDURABLE 
	       SET PROCESSSEGMENTID      = #{PROCESSSEGMENTID}     
	         , PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}     
	         , WORKCOUNT             = #{WORKCOUNT}     
	         , WORKSTARTTIME         = #{WORKSTARTTIME}     
	         , WORKENDTIME           = #{WORKENDTIME}     
	         , USEDQTY               = #{USEDQTY}     
	         , DESCRIPTION           = #{DESCRIPTION}                     
	         , MODIFIER              = #{MODIFIER}     
	         , MODIFIEDTIME          = SYSDATE     
	         , TXNGROUPHISTKEY       = #{TXNGROUPHISTKEY}     
	         , TXNID                 = #{TXNID}     
	         , TXNUSER               = #{TXNUSER}     
	         , TXNTIME               = SYSDATE     
	         , TXNREASONCODECLASS    = #{TXNREASONCODECLASS}     
	         , TXNREASONCODE         = #{TXNREASONCODE}     
	         , TXNCOMMENT            = #{TXNCOMMENT}
	    WHERE DURABLELOTID           = #{DURABLELOTID}
	    AND EQUIPMENTID              = #{EQUIPMENTID}
	    AND LOTID                    = #{LOTID}
	    AND TXNHISTKEY               = #{TXNHISTKEY}
	</update>
    <insert id="insertPcmQcaoibbtworkcomplete" parameterType="map">
    <!-- smh.pcm.dao.PCMWorkProcessDao.insertPcmQcaoibbtworkcomplete -->
	    INSERT INTO PCM_QCAOIBBTWORKCOMPLETE(   LOTID  
	                                          , ENTERPRISEID  
	                                          , PLANTID  
	                                          , AREAID  
	                                          , PRODUCTDEFID  
	                                          , PRODUCTDEFVERSION  
	                                          , PROCESSSEGMENTID  
	                                          , PROCESSSEGMENTVERSION  
	                                          , PROCESSDEFID  
	                                          , PROCESSDEFVERSION  
	                                          , SEGMENTTYPE  
	                                          , LAYERID  
	                                          , DEFECTCODE  
	                                          , USERSEQUENCE  
	                                          , DEFECTCOUNT  
	                                          , ISREWORK  
	                                          , INSPECTIONQTY  
	                                          , REPAIRTARGETQTY  
	                                          , REPAIRRESULTQTY  
	                                          , CREATOR  
	                                          , CREATEDTIME  
	                                          , MODIFIER  
	                                          , MODIFIEDTIME  
	                                          , LASTTXNHISTKEY  
	                                          , LASTTXNID  
	                                          , LASTTXNUSER  
	                                          , LASTTXNTIME  
	                                          , LASTTXNCOMMENT  
	                                          , VALIDSTATE        
	                                        ) VALUES (   #{LOTID}  
	                                                   , #{ENTERPRISEID}  
	                                                   , #{PLANTID}  
	                                                   , #{AREAID}  
	                                                   , #{PRODUCTDEFID}  
	                                                   , #{PRODUCTDEFVERSION}  
	                                                   , #{PROCESSSEGMENTID}  
	                                                   , #{PROCESSSEGMENTVERSION}  
	                                                   , #{PROCESSDEFID}  
	                                                   , #{PROCESSDEFVERSION}  
	                                                   , #{SEGMENTTYPE}  
	                                                   , #{LAYERID}  
	                                                   , #{DEFECTCODE}  
	                                                   , #{USERSEQUENCE}  
	                                                   , #{DEFECTCOUNT}  
	                                                   , #{ISREWORK}  
	                                                   , #{INSPECTIONQTY}  
	                                                   , #{REPAIRTARGETQTY}  
	                                                   , #{REPAIRRESULTQTY}  
	                                                   , #{CREATOR}  
	                                                   , SYSDATE  
	                                                   , #{MODIFIER}  
	                                                   , SYSDATE  
	                                                   , #{LASTTXNHISTKEY}  
	                                                   , #{LASTTXNID}  
	                                                   , #{LASTTXNUSER}  
	                                                   , SYSDATE  
	                                                   , #{LASTTXNCOMMENT}  
	                                                   , #{VALIDSTATE}    
	                                                 )
	</insert>
	<select id="getFirstProcessSegmentForRework" parameterType="map" resultType="hashmap">
	 <!-- smh.pcm.dao.PCMWorkProcessDao.getFirstProcessSegmentForRework -->
		SELECT PP.PROCESSSEGMENTID
			 , PP.PROCESSSEGMENTVERSION
		  FROM BAS_PROCESSPATH	PP
		 WHERE PP.PROCESSDEFID      = #{PROCESSDEFID}
		   AND PP.PROCESSDEFVERSION = #{PROCESSDEFVERSION}
		   AND PP.PATHTYPE LIKE 'Start%'
	</select>
	<select id="selectPcmReworkreturn" parameterType="map" resultType="hashmap">
	 <!-- smh.pcm.dao.PCMWorkProcessDao.selectPcmReworkreturn -->
	    SELECT A.LOTID	 
	         , A.PRODUCTDEFID	 
	         , A.PRODUCTDEFVERSION	 
	         , A.PROCESSDEFID	 
	         , A.PROCESSDEFVERSION	 
	         , A.SUBPROCESSDEFID	 
	         , A.SUBPROCESSDEFVERSION	 
	         , A.FROMPROCESSSEGMENTID	 
	         , A.FROMPROCESSSEGMENTVERSION	 
	         , A.FROMPROCESSSTATE	 
	         , A.FROMAREAID	 
	         , A.FROMRESOURCEID	 
	         , A.REWORKPROCESSSEGMENTID	 
	         , A.REWORKPROCESSSEGMENTVERSION	 
	         , A.REWORKAREAID	 
	         , A.REWORKRESOURCE	 
	         , A.TOPROCESSSEGMENTID	 
	         , A.TOPROCESSSEGMENTVERSION	 
	         , A.TOPROCESSSTATE	 
	         , A.TORESOURCEID	 
	         , A.TOAREAID	 
	         , A.MOVESTATE	 
	         , A.WORKCOUNT	 
	         , A.APPLOVEDUSER	 
	         , A.APPLOVEDDATE	 
	         , A.REWORKQTY	 
	         , A.DESCRIPTION	 
	         , A.LASTTXNCOMMENT	 
	         , A.VALIDSTATE	 
	      FROM PCM_REWORKRETURN A 
	     WHERE A.LOTID = #{LOTID}
	</select>
	<insert id="insertPcmReworkreturn" parameterType="map">
	<!-- smh.pcm.dao.PCMWorkProcessDao.insertPcmReworkreturn -->
	    INSERT INTO PCM_REWORKRETURN(   LOTID  
	                                  , PRODUCTDEFID  
	                                  , PRODUCTDEFVERSION  
	                                  , PROCESSDEFID  
	                                  , PROCESSDEFVERSION  
	                                  , SUBPROCESSDEFID  
	                                  , SUBPROCESSDEFVERSION  
	                                  , FROMPROCESSSEGMENTID  
	                                  , FROMPROCESSSEGMENTVERSION  
	                                  , FROMPROCESSSTATE  
	                                  , FROMAREAID  
	                                  , FROMRESOURCEID  
	                                  , REWORKPROCESSSEGMENTID  
	                                  , REWORKPROCESSSEGMENTVERSION  
	                                  , REWORKAREAID  
	                                  , REWORKRESOURCE  
	                                  , TOPROCESSSEGMENTID  
	                                  , TOPROCESSSEGMENTVERSION  
	                                  , TOPROCESSSTATE  
	                                  , TORESOURCEID  
	                                  , TOAREAID  
	                                  , MOVESTATE  
	                                  , WORKCOUNT  
	                                  , APPLOVEDUSER  
	                                  , APPLOVEDDATE  
	                                  , REWORKQTY  
	                                  , DESCRIPTION  
	                                  , CREATOR  
	                                  , CREATEDTIME  
	                                  , MODIFIER  
	                                  , MODIFIEDTIME  
	                                  , LASTTXNHISTKEY  
	                                  , LASTTXNID  
	                                  , LASTTXNUSER  
	                                  , LASTTXNTIME  
	                                  , LASTTXNCOMMENT  
	                                  , VALIDSTATE        
	                                 ) VALUES(  #{LOTID}  
	                                          , #{PRODUCTDEFID}  
	                                          , #{PRODUCTDEFVERSION}  
	                                          , #{PROCESSDEFID}  
	                                          , #{PROCESSDEFVERSION}  
	                                          , #{SUBPROCESSDEFID}  
	                                          , #{SUBPROCESSDEFVERSION}  
	                                          , #{FROMPROCESSSEGMENTID}  
	                                          , #{FROMPROCESSSEGMENTVERSION}  
	                                          , #{FROMPROCESSSTATE}  
	                                          , #{FROMAREAID}  
	                                          , #{FROMRESOURCEID}  
	                                          , #{REWORKPROCESSSEGMENTID}  
	                                          , #{REWORKPROCESSSEGMENTVERSION}  
	                                          , #{REWORKAREAID}  
	                                          , #{REWORKRESOURCE}  
	                                          , #{TOPROCESSSEGMENTID}  
	                                          , #{TOPROCESSSEGMENTVERSION}  
	                                          , #{TOPROCESSSTATE}  
	                                          , #{TORESOURCEID}  
	                                          , #{TOAREAID}  
	                                          , #{MOVESTATE}  
	                                          , #{WORKCOUNT}  
	                                          , #{APPLOVEDUSER}  
	                                          , #{APPLOVEDDATE}  
	                                          , #{REWORKQTY}  
	                                          , #{DESCRIPTION}  
	                                          , #{CREATOR}  
	                                          , SYSDATE  
	                                          , #{MODIFIER}  
	                                          , SYSDATE  
	                                          , #{LASTTXNHISTKEY}  
	                                          , #{LASTTXNID}  
	                                          , #{LASTTXNUSER}  
	                                          , SYSDATE 
	                                          , #{LASTTXNCOMMENT}  
	                                          , #{VALIDSTATE}    
	                                        )
	</insert>
	<update id="updatePcmReworkreturn" parameterType="map" >
	<!-- smh.pcm.dao.PCMWorkProcessDao.updatePcmReworkreturn -->
	    UPDATE PCM_REWORKRETURN 
	       SET PRODUCTDEFID                = #{PRODUCTDEFID}     
	         , PRODUCTDEFVERSION           = #{PRODUCTDEFVERSION}     
	         , PROCESSDEFID                = #{PROCESSDEFID}     
	         , PROCESSDEFVERSION           = #{PROCESSDEFVERSION}     
	         , SUBPROCESSDEFID             = #{SUBPROCESSDEFID}     
	         , SUBPROCESSDEFVERSION        = #{SUBPROCESSDEFVERSION}     
	         , FROMPROCESSSEGMENTID        = #{FROMPROCESSSEGMENTID}     
	         , FROMPROCESSSEGMENTVERSION   = #{FROMPROCESSSEGMENTVERSION}     
	         , FROMPROCESSSTATE            = #{FROMPROCESSSTATE}     
	         , FROMAREAID                  = #{FROMAREAID}     
	         , FROMRESOURCEID              = #{FROMRESOURCEID}     
	         , REWORKPROCESSSEGMENTID      = #{REWORKPROCESSSEGMENTID}     
	         , REWORKPROCESSSEGMENTVERSION = #{REWORKPROCESSSEGMENTVERSION}     
	         , REWORKAREAID                = #{REWORKAREAID}     
	         , REWORKRESOURCE              = #{REWORKRESOURCE}     
	         , TOPROCESSSEGMENTID          = #{TOPROCESSSEGMENTID}     
	         , TOPROCESSSEGMENTVERSION     = #{TOPROCESSSEGMENTVERSION}     
	         , TOPROCESSSTATE              = #{TOPROCESSSTATE}     
	         , TORESOURCEID                = #{TORESOURCEID}     
	         , TOAREAID                    = #{TOAREAID}     
	         , MOVESTATE                   = #{MOVESTATE}     
	         , WORKCOUNT                   = #{WORKCOUNT}     
	         , APPLOVEDUSER                = #{APPLOVEDUSER}     
	         , APPLOVEDDATE                = #{APPLOVEDDATE}     
	         , REWORKQTY                   = #{REWORKQTY}     
	         , DESCRIPTION                 = #{DESCRIPTION}                     
	         , MODIFIER                    = #{MODIFIER}     
	         , MODIFIEDTIME                = SYSDATE     
	         , LASTTXNHISTKEY              = #{LASTTXNHISTKEY}     
	         , LASTTXNID                   = #{LASTTXNID}     
	         , LASTTXNUSER                 = #{LASTTXNUSER}     
	         , LASTTXNTIME                 = SYSDATE     
	         , LASTTXNCOMMENT              = #{LASTTXNCOMMENT}     
	         , VALIDSTATE                  = #{VALIDSTATE}
	     WHERE LOTID                       = #{LOTID}
	</update>	
    <insert id="insertQamInspectiondefect" parameterType="map">
    <!-- smh.pcm.dao.PCMWorkProcessDao.insertQamInspectiondefect -->
	    INSERT INTO QAM_INSPECTIONDEFECT(  TXNHISTKEY  
	                                     , RESOURCETYPE  
	                                     , RESOURCEID  
	                                     , DEFECTCODE  
	                                     , PROCESSRELNO  
	                                     , DEGREE  
	                                     , MAPPINGRESOURCEID  
	                                     , INSPECTIONQTY  
	                                     , SAMPLEQTY  
	                                     , DEFECTQTY  
	                                     , REASONSEGMENTID  
	                                     , REASONCONSUMABLELOTID  
	                                     , REASONCONSUMABLEDEFID  
	                                     , REASONCONSUMABLEDEFVERSION  
	                                     , REASONAREAID  
	                                     , FILERESOURCEID  
	                                     , INSPECTIONRESULT  
	                                     , QCSEGMENTID  
	                                     , DESCRIPTION  
	                                     , CREATOR  
	                                     , CREATEDTIME  
	                                     , MODIFIER  
	                                     , MODIFIEDTIME  
	                                     , TXNGROUPHISTKEY  
	                                     , TXNID  
	                                     , TXNUSER  
	                                     , TXNTIME  
	                                     , TXNCOMMENT        
	                                    )  VALUES(   #{TXNHISTKEY}  
	                                               , #{RESOURCETYPE}  
	                                               , #{RESOURCEID}  
	                                               , #{DEFECTCODE}  
	                                               , #{PROCESSRELNO}  
	                                               , #{DEGREE}  
	                                               , #{MAPPINGRESOURCEID}  
	                                               , #{INSPECTIONQTY}  
	                                               , #{SAMPLEQTY}  
	                                               , #{DEFECTQTY}  
	                                               , #{REASONSEGMENTID}  
	                                               , #{REASONCONSUMABLELOTID}  
	                                               , #{REASONCONSUMABLEDEFID}  
	                                               , #{REASONCONSUMABLEDEFVERSION}  
	                                               , #{REASONAREAID}  
	                                               , #{FILERESOURCEID}  
	                                               , #{INSPECTIONRESULT}  
	                                               , #{QCSEGMENTID}  
	                                               , #{DESCRIPTION}  
	                                               , #{CREATOR}  
	                                               , SYSDATE  
	                                               , #{MODIFIER}  
	                                               , SYSDATE  
	                                               , #{TXNGROUPHISTKEY}  
	                                               , #{TXNID}  
	                                               , #{TXNUSER}  
	                                               , SYSDATE  
	                                               , #{TXNCOMMENT}    
	                                             )
	</insert>
	<select id="selectQamInspectionresultCnt" parameterType="map" resultType="int">
	 <!-- smh.pcm.dao.PCMWorkProcessDao.selectQamInspectionresultCnt -->
	    SELECT COUNT(*) AS CNT
	      FROM QAM_INSPECTIONRESULT A 
	     WHERE A.PROCESSRELNO = #{PROCESSRELNO}
	       AND A.RESOURCEID   = #{RESOURCEID}
	       AND A.RESOURCETYPE = #{RESOURCETYPE}	
	</select>
	<insert id="insertQamInspectionresult" parameterType="map">
	<!-- smh.pcm.dao.PCMWorkProcessDao.insertQamInspectionresult -->
	    INSERT INTO QAM_INSPECTIONRESULT(  TXNHISTKEY  
	                                     , RESOURCETYPE  
	                                     , RESOURCEID  
	                                     , PROCESSRELNO  
	                                     , INSPECTIONDEFID  
	                                     , INSPECTIONDEFVERSION  
	                                     , "degree"  
	                                     , ENTERPRISEID  
	                                     , PLANTID  
	                                     , INSPECTIONTYPE  
	                                     , PRODUCTDEFID  
	                                     , PRODUCTDEFVERSION  
	                                     , PROCESSDEFID  
	                                     , PROCESSDEFVERSION  
	                                     , PROCESSSEGMENTID  
	                                     , PROCESSSEGMENTVERSION  
	                                     , EQUIPMENTID  
	                                     , REQUESTUSER  
	                                     , REQUESTDATE  
	                                     , ACCEPTUSER  
	                                     , ACCEPTDATE  
	                                     , INSPECTIONQTY  
	                                     , SAMPLEQTY  
	                                     , SPECOUTQTY  
	                                     , INSPECTIONRESULT  
	                                     , INSPECTIONDATE  
	                                     , INSPECTIONUSER  
	                                     , ISSEND  
	                                     , AREAID  
	                                     , ISNCRPUBLISH  
	                                     , DESCRIPTION  
	                                     , CREATOR  
	                                     , CREATEDTIME  
	                                     , MODIFIER  
	                                     , MODIFIEDTIME  
	                                     , TXNGROUPHISTKEY  
	                                     , TXNID  
	                                     , TXNUSER  
	                                     , TXNTIME  
	                                     , TXNCOMMENT  
	                                     , ISCOMPLETION  
	                                     , RESULTITEM  
	                                     , JUDGMENTCRITERIA  
	                                     , WORKCOUNT  
	                                     , INSPECTIONCLASSID        
	                                    ) VALUES(  #{TXNHISTKEY}  
	                                             , #{RESOURCETYPE}  
	                                             , #{RESOURCEID}  
	                                             , #{PROCESSRELNO}  
	                                             , #{INSPECTIONDEFID}  
	                                             , #{INSPECTIONDEFVERSION}  
	                                             , #{DEGREE}  
	                                             , #{ENTERPRISEID}  
	                                             , #{PLANTID}  
	                                             , #{INSPECTIONTYPE}  
	                                             , #{PRODUCTDEFID}  
	                                             , #{PRODUCTDEFVERSION}  
	                                             , #{PROCESSDEFID}  
	                                             , #{PROCESSDEFVERSION}  
	                                             , #{PROCESSSEGMENTID}  
	                                             , #{PROCESSSEGMENTVERSION}  
	                                             , #{EQUIPMENTID}  
	                                             , #{REQUESTUSER}  
	                                             , #{REQUESTDATE}  
	                                             , #{ACCEPTUSER}  
	                                             , #{ACCEPTDATE}  
	                                             , #{INSPECTIONQTY}  
	                                             , #{SAMPLEQTY}  
	                                             , #{SPECOUTQTY}  
	                                             , #{INSPECTIONRESULT}  
	                                             , #{INSPECTIONDATE}  
	                                             , #{INSPECTIONUSER}  
	                                             , #{ISSEND}  
	                                             , #{AREAID}  
	                                             , #{ISNCRPUBLISH}  
	                                             , #{DESCRIPTION}  
	                                             , #{CREATOR}  
	                                             , SYSDATE  
	                                             , #{MODIFIER}  
	                                             , SYSDATE  
	                                             , #{TXNGROUPHISTKEY}  
	                                             , #{TXNID}  
	                                             , #{TXNUSER}  
	                                             , SYSDATE 
	                                             , #{TXNCOMMENT}  
	                                             , #{ISCOMPLETION}  
	                                             , #{RESULTITEM}  
	                                             , #{JUDGMENTCRITERIA}  
	                                             , #{WORKCOUNT}  
	                                             , #{INSPECTIONCLASSID}    
	                                            )
	</insert>
	<select id="selectPcmQcaoibbtworkcomplete" parameterType="map" resultType="hashmap">
	<!-- smh.pcm.dao.PCMWorkProcessDao.selectPcmQcaoibbtworkcomplete -->
	    SELECT A.LOTID  
	         , A.ENTERPRISEID  
	         , A.PLANTID  
	         , A.AREAID  
	         , A.PRODUCTDEFID  
	         , A.PRODUCTDEFVERSION  
	         , A.PROCESSSEGMENTID  
	         , A.PROCESSSEGMENTVERSION  
	         , A.PROCESSDEFID  
	         , A.PROCESSDEFVERSION  
	         , A.SEGMENTTYPE  
	         , A.LAYERID  
	         , A.DEFECTCODE  
	         , A.USERSEQUENCE  
	         , A.DEFECTCOUNT  
	         , A.ISREWORK  
	         , A.INSPECTIONQTY  
	         , A.REPAIRTARGETQTY  
	         , A.REPAIRRESULTQTY  
	         , A.CREATOR  
	         , A.CREATEDTIME  
	         , A.MODIFIER  
	         , A.MODIFIEDTIME  
	         , A.LASTTXNHISTKEY  
	         , A.LASTTXNID  
	         , A.LASTTXNUSER  
	         , A.LASTTXNTIME  
	         , A.LASTTXNCOMMENT  
	         , A.VALIDSTATE  
	      FROM PCM_QCAOIBBTWORKCOMPLETE A 
	     WHERE A.AREAID               = #{AREAID}
	      AND A.DEFECTCODE            = #{DEFECTCODE}
	      AND A.ENTERPRISEID          = #{ENTERPRISEID}
	      AND A.LAYERID               = #{LAYERID}
	      AND A.LOTID                 = #{LOTID}
	      AND A.PLANTID               = #{PLANTID}
	      AND A.PROCESSDEFID          = #{PROCESSDEFID}
	      AND A.PROCESSDEFVERSION     = #{PROCESSDEFVERSION}
	      AND A.PROCESSSEGMENTID      = #{PROCESSSEGMENTID}
	      AND A.PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
	      AND A.PRODUCTDEFID          = #{PRODUCTDEFID}
	      AND A.PRODUCTDEFVERSION     = #{PRODUCTDEFVERSION}
	</select>	
	<update id="updatePcmQcaoibbtworkcomplete" parameterType="map" >
	<!-- smh.pcm.dao.PCMWorkProcessDao.updatePcmQcaoibbtworkcomplete -->
	    UPDATE PCM_QCAOIBBTWORKCOMPLETE 
	       SET SEGMENTTYPE           = #{SEGMENTTYPE}     
	         , USERSEQUENCE          = #{USERSEQUENCE}     
	         , DEFECTCOUNT           = #{DEFECTCOUNT}     
	         , ISREWORK              = #{ISREWORK}     
	         , INSPECTIONQTY         = #{INSPECTIONQTY}     
	         , REPAIRTARGETQTY       = #{REPAIRTARGETQTY}     
	         , REPAIRRESULTQTY       = #{REPAIRRESULTQTY}   
	         , REPAIRRESULTPNLQTY    = #{REPAIRRESULTPNLQTY}                  
	         , MODIFIER              = #{MODIFIER}     
	         , MODIFIEDTIME          = SYSDATE     
	         , LASTTXNHISTKEY        = #{LASTTXNHISTKEY}     
	         , LASTTXNID             = #{LASTTXNID}     
	         , LASTTXNUSER           = #{LASTTXNUSER}     
	         , LASTTXNTIME           = SYSDATE     
	         , LASTTXNCOMMENT        = #{LASTTXNCOMMENT}     
	         , VALIDSTATE            = #{VALIDSTATE}
	     WHERE AREAID                = #{AREAID}
	       AND DEFECTCODE            = #{DEFECTCODE}
	       AND ENTERPRISEID          = #{ENTERPRISEID}
	       AND LAYERID               = #{LAYERID}
	       AND LOTID                 = #{LOTID}
	       AND PLANTID               = #{PLANTID}
	       AND PROCESSDEFID          = #{PROCESSDEFID}
	       AND PROCESSDEFVERSION     = #{PROCESSDEFVERSION}
	       AND PROCESSSEGMENTID      = #{PROCESSSEGMENTID}
	       AND PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
	       AND PRODUCTDEFID          = #{PRODUCTDEFID}
	       AND PRODUCTDEFVERSION     = #{PRODUCTDEFVERSION}
	</update>
	<insert id="insertMtmLotplanttransit" parameterType="map">
	<!-- smh.pcm.dao.PCMWorkProcessDao.insertMtmLotplanttransit -->
	    INSERT INTO MTM_LOTPLANTTRANSIT(  TXNHISTKEY  
	                                    , LOTID  
	                                    , ENTERPRISEID  
	                                    , PLANTID  
	                                    , PRODUCTIONORDERID  
	                                    , LINENO  
	                                    , PREVPLANTID  
	                                    , FACTORYID  
	                                    , AREAID  
	                                    , PREVAREAID  
	                                    , PROCESSDEFID  
	                                    , PROCESSDEFVERSION  
	                                    , PROCESSSEGMENTID  
	                                    , PREVPROCESSSEGMENTID  
	                                    , WORKCOUNT  
	                                    , SENDUSER  
	                                    , SENDDATE  
	                                    , RECEIVEUSER  
	                                    , RECEIVEDATE  
	                                    , TRANSITSTATUS  
	                                    , DESCRIPTION  
	                                    , CREATOR  
	                                    , CREATEDTIME  
	                                    , TXNGROUPHISTKEY  
	                                    , TXNUSER  
	                                    , TXNTIME  
	                                    , TXNREASONCODECLASS  
	                                    , TXNREASONCODE  
	                                    , TXNCOMMENT        
	                                   ) VALUES(  #{TXNHISTKEY}  
	                                            , #{LOTID}  
	                                            , #{ENTERPRISEID}  
	                                            , #{PLANTID}  
	                                            , #{PRODUCTIONORDERID}  
	                                            , #{LINENO}  
	                                            , #{PREVPLANTID}  
	                                            , #{FACTORYID}  
	                                            , #{AREAID}  
	                                            , #{PREVAREAID}  
	                                            , #{PROCESSDEFID}  
	                                            , #{PROCESSDEFVERSION}  
	                                            , #{PROCESSSEGMENTID}  
	                                            , #{PREVPROCESSSEGMENTID}  
	                                            , #{WORKCOUNT}  
	                                            , #{SENDUSER}  
	                                            , #{SENDDATE}
	                                            , #{RECEIVEUSER}  
	                                            , #{RECEIVEDATE}  
	                                            , #{TRANSITSTATUS}  
	                                            , #{DESCRIPTION}  
	                                            , #{CREATOR}  
	                                            , SYSDATE  
	                                            , #{TXNGROUPHISTKEY}  
	                                            , #{TXNUSER}  
	                                            , SYSDATE
	                                            , #{TXNREASONCODECLASS}  
	                                            , #{TXNREASONCODE}  
	                                            , #{TXNCOMMENT}    
	                                           )
	</insert>	
    <delete id="deletePcmConsumemateriallotTemp" parameterType="map" > 
    <!-- smh.pcm.dao.PCMWorkProcessDao.deletePcmConsumemateriallotTemp -->
        DELETE FROM PCM_CONSUMEMATERIALLOT_TEMP 
         WHERE LOTID            = #{LOTID}
           AND MATERIALLOTID    = #{MATERIALLOTID}
           AND PROCESSSEGMENTID = #{PROCESSSEGMENTID}
    </delete>
	<insert id="insertMtmConsumemateriallot" parameterType="map">
	<!-- smh.pcm.dao.PCMWorkProcessDao.insertMtmConsumemateriallot -->
	    INSERT INTO MTM_CONSUMEMATERIALLOT(  MATERIALLOTID  
	                                       , LOTID  
	                                       , MATERIALTYPE  
	                                       , TXNHISTKEY  
	                                       , ENTERPRISEID  
	                                       , PLANTID  
	                                       , AREAID  
	                                       , CONSUMEDQTY  
	                                       , EQUIPMENTID  
	                                       , LOCATIONID  
	                                       , PRODUCTDEFID  
	                                       , PRODUCTDEFVERSION  
	                                       , PROCESSDEFID  
	                                       , PROCESSDEFVERSION  
	                                       , PROCESSPATHID  
	                                       , USERSEQUENCE  
	                                       , PROCESSSEGMENTID  
	                                       , PROCESSSEGMENTVERSION  
	                                       , WORKCOUNT  
	                                       , CONSUMABLEDEFID  
	                                       , CONSUMABLEDEFVERSION  
	                                       , CREATOR  
	                                       , CREATEDTIME  
	                                       , TXNGROUPHISTKEY  
	                                       , TXNUSER  
	                                       , TXNTIME  
	                                       , TXNREASONCODECLASS  
	                                       , TXNREASONCODE  
	                                       , TXNCOMMENT  
	                                       , TRANSACTIONREASONCODE  
	                                       , WAREHOUSEID        
	                                      )  VALUES (   #{MATERIALLOTID}  
	                                                  , #{LOTID}  
	                                                  , #{MATERIALTYPE}  
	                                                  , #{TXNHISTKEY}  
	                                                  , #{ENTERPRISEID}  
	                                                  , #{PLANTID}  
	                                                  , #{AREAID}  
	                                                  , #{CONSUMEDQTY}  
	                                                  , #{EQUIPMENTID}  
	                                                  , #{LOCATIONID}  
	                                                  , #{PRODUCTDEFID}  
	                                                  , #{PRODUCTDEFVERSION}  
	                                                  , #{PROCESSDEFID}  
	                                                  , #{PROCESSDEFVERSION}  
	                                                  , #{PROCESSPATHID}  
	                                                  , #{USERSEQUENCE}  
	                                                  , #{PROCESSSEGMENTID}  
	                                                  , #{PROCESSSEGMENTVERSION}  
	                                                  , #{WORKCOUNT}  
	                                                  , #{CONSUMABLEDEFID}  
	                                                  , #{CONSUMABLEDEFVERSION}  
	                                                  , #{CREATOR}  
	                                                  , SYSDATE  
	                                                  , #{TXNGROUPHISTKEY}  
	                                                  , #{TXNUSER}  
	                                                  , SYSDATE
	                                                  , #{TXNREASONCODECLASS}  
	                                                  , #{TXNREASONCODE}  
	                                                  , #{TXNCOMMENT}  
	                                                  , #{TRANSACTIONREASONCODE}  
	                                                  , #{WAREHOUSEID}    
	                                                )
	</insert>  
 	<select id="salectBudgetControl"  statementType="CALLABLE" parameterType="map">
 	<!-- smh.pcm.dao.PCMWorkProcessDao.salectBudgetControl -->
		{call   /* smh.pcm.dao.PCMWorkProcessDao.salectBudgetControl */	
				IFC_OSM_COMMON_PKG.BUDGET_CONTROL(   #{P_LOT_NAME}
													,#{P_SOP_CODE}
													,#{P_RSC_CODE}
													,#{P_ITEM_CODE}
													,#{P_STEP_ID}
													,#{O_CTRL_YN,mode=OUT,jdbcType=VARCHAR ,javaType=string}
													,#{O_ERR_MSG,mode=OUT,jdbcType=VARCHAR ,javaType=string}
													)
	     }
    </select>
    <select id="salectReceivingAndForwardingStatus"  parameterType="map" resultType="map">
    <!-- smh.pcm.dao.PCMWorkProcessDao.salectReceivingAndForwardingStatus -->
		     WITH ATC AS
		    (
		               SELECT SLT.LOTID
		                    , SLT.PLANTID
		                    , SLT.AREAID
		                    , SLT.LOTTYPE
		                    , PPH.PATHSEQUENCE AS PATHSEQUENCESTART
		                    , PPH.USERSEQUENCE AS USERSEQUENCE
		                    , UFN_OSP_SELECTSAMEAREASEQ(SLT.LOTID, 'PRIMARY')   AS PATHSEQUENCEEND
		                    , UFN_OSP_SELECTSAMEAREASEQ(SLT.LOTID, 'ALTERNATE') AS PATHSEQUENCEEND_ALT
		                 FROM PCM_LOT SLT
		      LEFT OUTER JOIN PCM_LOTWORKRESULT  LWR   ON LWR.LOTID                 = SLT.LOTID
		                                              AND LWR.PROCESSSEGMENTID      = SLT.PROCESSSEGMENTID
		                                              AND LWR.PROCESSSEGMENTVERSION = SLT.PROCESSSEGMENTVERSION
		                                              AND LWR.WORKCOUNT             = SLT.WORKCOUNT
		      LEFT OUTER JOIN BAS_PROCESSPATH    CPP   ON CPP.PROCESSDEFID          = LWR.PROCESSDEFID
		                                              AND CPP.PROCESSDEFVERSION     = LWR.PROCESSDEFVERSION
		                                              AND CPP.PROCESSSEGMENTID      = LWR.PROCESSSEGMENTID
		                                              AND CPP.PROCESSSEGMENTVERSION = LWR.PROCESSSEGMENTVERSION
		           INNER JOIN BAS_PROCESSPATH    PPH   ON PPH.PROCESSDEFID          = LWR.PROCESSDEFID
		                                              AND PPH.PROCESSDEFVERSION     = LWR.PROCESSDEFVERSION
		                                              AND PPH.PATHSEQUENCE          = CPP.PATHSEQUENCE
		                WHERE SLT.LOTID   = #{LOTID}     
		    )
		     SELECT 
		           CASE WHEN COALESCE(TO_CHAR(A.SENDDATE), ' ')               <![CDATA[<>]]> ' '  THEN 'OUTPUTED'
		                ELSE CASE WHEN COALESCE(TO_CHAR(A.RECEIPTDATE), ' ')  <![CDATA[<>]]> ' '  THEN 'INPUTED'   
		                          ELSE                                                                 'NO_ROW_IN_OSP'
		                          END 
		                END                                                                 OSPSTATUS
		      FROM (
		             SELECT OLT.SENDDATE
		                  , OLT.RECEIPTDATE
		                  , OLT.LOTHISTKEY
		                  , OLT.LOTID
		                  , SLT.LOTID                                             PCM_LOT_LOTID
		               FROM PCM_LOT           SLT
		            INNER JOIN PCM_LOTWORKRESULT SLH   ON SLH.LOTID                      = SLT.LOTID
		                                              AND SLH.PROCESSSEGMENTID           = SLT.PROCESSSEGMENTID
		                                              AND NVL(SLH.WORKCOUNT,0)           = NVL(SLT.WORKCOUNT,0)
		                                              AND NVL(SLH.RESULTTYPE,'@')        <![CDATA[<>]]> 'SKIP'
		            INNER JOIN ATC                     ON ATC.LOTID                      = SLH.LOTID
		            LEFT OUTER JOIN PCM_LOTHISTORY        HST   ON HST.LOTID                 = SLH.LOTID
		                                                       AND HST.TXNHISTKEY            = SLH.PREVSENDLOTHISTKEY
		            LEFT OUTER JOIN BAS_PRODUCTDEFINITION PRD   ON PRD.PRODUCTDEFID          = SLT.PRODUCTDEFID
		                                                       AND PRD.PRODUCTDEFVERSION     = SLT.PRODUCTDEFVERSION
		            LEFT OUTER JOIN BAS_PROCESSSEGMENT    PRS   ON PRS.PROCESSSEGMENTID      = SLT.PROCESSSEGMENTID
		                                                       AND PRS.PROCESSSEGMENTVERSION = SLT.PROCESSSEGMENTVERSION
		            LEFT OUTER JOIN BAS_PROCESSSEGMENT    PSP   ON PSP.PROCESSSEGMENTID      = HST.PREVPROCESSSEGMENTID
		                                                       AND PSP.PROCESSSEGMENTVERSION = HST.PREVPROCESSSEGMENTVERSION
		            LEFT OUTER JOIN OSM_OSPRECEIPTSENDLOT OLT   ON OLT.LOTHISTKEY            = SLH.TXNHISTKEY
		                                                       AND OLT.LOTID                 = SLH.LOTID
		              WHERE SLT.LOTID              = #{LOTID}               
		                AND SLT.PLANTID            = #{PLANTID}             
		                AND SLT.AREAID             = #{AREAID}              
		                AND SLT.LOTSTATE           IN ('Created', 'Finished', 'Consumed', 'Shipped', 'Terminated', 'InProduction')   --InTransit
		                AND SLT.PROCESSSTATE       IN ('Wait', 'Run', 'WaitForSend')       
		                AND NVL(SLT.ISHOLD,'N')    != 'Y'
		                AND NVL(SLT.ISLOCKING,'N') != 'Y'
		           ORDER BY SLT.LOTID ,SLH.TXNHISTKEY DESC
		          ) A
		         WHERE ROWNUM        = 1
    </select>
    
   <select id="selectBasPlant" parameterType="map" resultType="map">
		    SELECT 
		        A.PLANTID	 
		        ,A.ENTERPRISEID	 
		        ,A.PLANTNAME	 
		        ,A.ADDRESS	 
		        ,A.PHONE	 
		        ,A.FAXNO	 
		        ,A.LANGUAGE	 
		        ,A.ISOSPBUDGETCONTROL	 
		        ,A.ISOSPETCBUDGETCONTROL	 
		        ,A.WORKTIME	 
		        ,A.TIMEZONE	 
		        ,A.SETHOLDDATE	 
		        ,A.ISOTIMEZONE	 
		        ,A.ISAUDIT	 
		        ,A.ISOSPWAREHOUSEOPERATE	 
		        ,A.ISWIPSURVEY	 
		        ,A.DESCRIPTION	 
		        ,A.CREATOR	 
		        ,A.CREATEDTIME	 
		        ,A.MODIFIER	 
		        ,A.MODIFIEDTIME	 
		        ,A.LASTTXNHISTKEY	 
		        ,A.LASTTXNID	 
		        ,A.LASTTXNUSER	 
		        ,A.LASTTXNTIME	 
		        ,A.LASTTXNCOMMENT	 
		        ,A.VALIDSTATE	 
		    FROM	BAS_PLANT A 
		    WHERE A.PLANTID = #{PLANTID}
    </select>           
</mapper>
