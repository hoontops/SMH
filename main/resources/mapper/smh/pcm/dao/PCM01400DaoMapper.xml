<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="smh.pcm.dao.PCM01400Dao">
		
	<select id="selectSalseOrderStausPerProduct" parameterType="map" resultType="hashmap">
	/* "SelectSalseOrderStausPerProduct" 10001 */
	--id : selectSalseOrderStausPerProduct
		WITH PACKED (PRODUCTDEFID, PRODUCTDEFVERSION, QTY) AS
		(
			-- 포장완료 재고 PCS
			SELECT
					LOT.PRODUCTDEFID
				,	LOT.PRODUCTDEFVERSION
				,	SUM(LOT.QTY) AS QTY
			FROM		PCM_LOT					LOT
			INNER JOIN	PCM_LOT					RL	ON	RL.LOTID = LOT.ROOTLOTID
			INNER JOIN	BAS_PRODUCTDEFINITION	PD	ON	PD.PRODUCTDEFID = LOT.PRODUCTDEFID
													AND	PD.PRODUCTDEFVERSION = LOT.PRODUCTDEFVERSION
			WHERE	1 = 1
			AND		PD.PRODUCTDEFTYPE = 'Product'
			AND 	RL.LOTCREATEDTYPE <![CDATA[<>]]> 'Return'
			AND		LOT.LOTCREATEDTYPE <![CDATA[<>]]> 'Defect'
			AND 	(LOT.ISREPRESENTROLLLOT IS NULL OR LOT.ISREPRESENTROLLLOT = 'N')
			AND		LOT.ISREWORK = 'N'
			AND		LOT.ISHOLD = 'N'
			AND		LOT.LOTSTATE = 'Finished'
			AND		LOT.QTY > 0
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
			GROUP BY LOT.PRODUCTDEFID, LOT.PRODUCTDEFVERSION
		)
		, PACKING (PRODUCTDEFID, PRODUCTDEFVERSION, QTY) AS
		(
			-- 포장재공 PCS
			SELECT
					LOT.PRODUCTDEFID
				,	LOT.PRODUCTDEFVERSION
				,	SUM(LOT.QTY) AS QTY
			FROM		PCM_LOT					LOT
			INNER JOIN	PCM_LOT					RL	ON	RL.LOTID = LOT.ROOTLOTID
			INNER JOIN	BAS_PRODUCTDEFINITION	PD	ON	PD.PRODUCTDEFID = LOT.PRODUCTDEFID
													AND	PD.PRODUCTDEFVERSION = LOT.PRODUCTDEFVERSION
			INNER JOIN	BAS_PROCESSPATH			PTH	ON	PTH.PROCESSPATHID = LOT.PROCESSPATHSTACK
			WHERE	1 = 1
			AND		PD.PRODUCTDEFTYPE = 'Product'
			AND 	RL.LOTCREATEDTYPE <![CDATA[<>]]> 'Return'
			AND		LOT.LOTCREATEDTYPE <![CDATA[<>]]> 'Defect'
			AND 	(LOT.ISREPRESENTROLLLOT IS NULL OR LOT.ISREPRESENTROLLLOT = 'N')
			AND		LOT.ISREWORK = 'N'
			AND		LOT.ISHOLD = 'N'
			AND		LOT.LOTSTATE = 'InProduction'
			AND		LOT.QTY > 0
			AND		PTH.PATHTYPE IN ('End', 'StartEnd')
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
			GROUP BY LOT.PRODUCTDEFID, LOT.PRODUCTDEFVERSION
		)
		, RETURN (PRODUCTDEFID, PRODUCTDEFVERSION, PRODUCTDEFNAME, QTY, PCSPNL, PCSMM) AS
		(
			-- 반품재공 PCS
			SELECT
					LOT.PRODUCTDEFID
				,	LOT.PRODUCTDEFVERSION
				,	MAX(PD.PRODUCTDEFNAME) AS PRODUCTDEFNAME
				,	SUM(LOT.QTY) AS QTY
				,	MAX(PD.PCSPNL) AS PCSPNL
				,	MAX(PD.PCSMM) AS PCSMM	
			FROM		PCM_LOT					LOT
			INNER JOIN	PCM_LOT					RL	ON	RL.LOTID = LOT.ROOTLOTID
			INNER JOIN	BAS_PRODUCTDEFINITION	PD	ON	PD.PRODUCTDEFID = LOT.PRODUCTDEFID
													AND	PD.PRODUCTDEFVERSION = LOT.PRODUCTDEFVERSION
			WHERE	1 = 1
			AND		PD.PRODUCTDEFTYPE = 'Product'
			AND 	RL.LOTCREATEDTYPE = 'Return'
			AND		LOT.LOTCREATEDTYPE <![CDATA[<>]]> 'Defect'
			AND 	(LOT.ISREPRESENTROLLLOT IS NULL OR LOT.ISREPRESENTROLLLOT = 'N')
			AND		LOT.ISHOLD = 'N'
			AND		LOT.LOTSTATE IN ('InProduction', 'InTransit')
			AND		LOT.QTY > 0
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
			GROUP BY LOT.PRODUCTDEFID, LOT.PRODUCTDEFVERSION
		)
		, INPUT (PRODUCTDEFID, PRODUCTDEFVERSION,  QTY) AS
		(
			-- 투입 수량 PCS
			SELECT
					LOT.PRODUCTDEFID
				,	LOT.PRODUCTDEFVERSION
				,	SUM(LOT.CREATEDQTY) AS QTY
			FROM		PCM_LOT					LOT
			INNER JOIN	BAS_PRODUCTDEFINITION	PD	ON	PD.PRODUCTDEFID = LOT.PRODUCTDEFID
													AND	PD.PRODUCTDEFVERSION = LOT.PRODUCTDEFVERSION
			WHERE	1 = 1
			and		LOT.LOTID = LOT.ROOTLOTID
			AND		PD.PRODUCTDEFTYPE = 'Product'
			AND 	LOT.LOTCREATEDTYPE NOT IN ('Return', 'Defect')
			AND 	(LOT.ISREPRESENTROLLLOT IS NULL OR LOT.ISREPRESENTROLLLOT = 'N')
			AND		LOT.LOTSTATE <![CDATA[<>]]> 'Created'
			AND		LOT.CREATEDQTY > 0
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
			GROUP BY LOT.PRODUCTDEFID, LOT.PRODUCTDEFVERSION
		)
		, BEFORESHIP (PRODUCTDEFID, PRODUCTDEFVERSION, QTY) AS
		(
			-- 출하전 재공 PCS
			SELECT
					LOT.PRODUCTDEFID
				,	LOT.PRODUCTDEFVERSION
				,	SUM(LOT.QTY) AS QTY
			FROM		PCM_LOT					LOT
			INNER JOIN	PCM_LOT					RL	ON	RL.LOTID = LOT.ROOTLOTID
			INNER JOIN	BAS_PRODUCTDEFINITION	PD	ON	PD.PRODUCTDEFID = LOT.PRODUCTDEFID
													AND	PD.PRODUCTDEFVERSION = LOT.PRODUCTDEFVERSION
			INNER JOIN	BAS_PROCESSPATH			PTH	ON	PTH.PROCESSPATHID = SUBSTR(LOT.PROCESSPATHSTACK, INSTR(LOT.PROCESSPATHSTACK, '.', -1) + 1)
			WHERE	1 = 1
			AND		PD.PRODUCTDEFTYPE = 'Product'
			AND 	RL.LOTCREATEDTYPE <![CDATA[<>]]> 'Return'
			AND		LOT.LOTCREATEDTYPE <![CDATA[<>]]> 'Defect'
			AND 	(LOT.ISREPRESENTROLLLOT IS NULL OR LOT.ISREPRESENTROLLLOT = 'N')
			AND		LOT.ISHOLD = 'N'
			AND		LOT.LOTSTATE IN ('InProduction', 'InTransit')
			AND		LOT.QTY > 0
			AND		PTH.PATHTYPE NOT IN ('End', 'StartEnd')
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
			GROUP BY LOT.PRODUCTDEFID, LOT.PRODUCTDEFVERSION
		)
		, HOLD (PRODUCTDEFID, PRODUCTDEFVERSION, QTY) AS
		(
			-- 보류 재공 PCS
			SELECT
					LOT.PRODUCTDEFID
				,	LOT.PRODUCTDEFVERSION
				,	SUM(LOT.QTY) AS QTY
			FROM		PCM_LOT					LOT
			INNER JOIN	PCM_LOT					RL	ON	RL.LOTID = LOT.ROOTLOTID
			INNER JOIN	BAS_PRODUCTDEFINITION	PD	ON	PD.PRODUCTDEFID = LOT.PRODUCTDEFID
													AND	PD.PRODUCTDEFVERSION = LOT.PRODUCTDEFVERSION
			WHERE	1 = 1
			AND		PD.PRODUCTDEFTYPE = 'Product'
			AND 	RL.LOTCREATEDTYPE <![CDATA[<>]]> 'Return'
			AND		LOT.LOTCREATEDTYPE <![CDATA[<>]]> 'Defect'
			AND 	(LOT.ISREPRESENTROLLLOT IS NULL OR LOT.ISREPRESENTROLLLOT = 'N')
			AND		LOT.ISHOLD = 'Y'
			AND		LOT.LOTSTATE IN ('InProduction', 'InTransit')
			AND		LOT.QTY > 0
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
			GROUP BY LOT.PRODUCTDEFID, LOT.PRODUCTDEFVERSION
		)
		, DEFECT (PRODUCTDEFID, PRODUCTDEFVERSION,  QTY) AS
		(
			-- 불량 미확정 재공 PCS
			SELECT
					LOT.PRODUCTDEFID
				,	LOT.PRODUCTDEFVERSION
				,	SUM(LOT.DEFECTQTY) AS QTY
			FROM		PCM_LOT					LOT
			INNER JOIN	PCM_LOT					RL	ON	RL.LOTID = LOT.ROOTLOTID
			INNER JOIN	BAS_PRODUCTDEFINITION	PD	ON	PD.PRODUCTDEFID = LOT.PRODUCTDEFID
													AND	PD.PRODUCTDEFVERSION = LOT.PRODUCTDEFVERSION
			WHERE	1 = 1
			AND		PD.PRODUCTDEFTYPE = 'Product'
			AND 	RL.LOTCREATEDTYPE <![CDATA[<>]]> 'Return'
			AND		LOT.LOTCREATEDTYPE = 'Defect'
			AND 	(LOT.ISREPRESENTROLLLOT IS NULL OR LOT.ISREPRESENTROLLLOT = 'N')
			AND		LOT.ISHOLD = 'N'
			AND		LOT.LOTSTATE IN ('InProduction', 'InTransit')
			AND		LOT.DEFECTQTY > 0
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
			GROUP BY LOT.PRODUCTDEFID, LOT.PRODUCTDEFVERSION
		)
		, INPUT2WEEK (PRODUCTDEFID, PRODUCTDEFVERSION,  QTY) AS
		(
			-- 투입 수량 PCS (2주 이내)
			SELECT
					LOT.PRODUCTDEFID
				,	LOT.PRODUCTDEFVERSION
				,	SUM(LOT.CREATEDQTY) AS QTY
			FROM		PCM_LOT					LOT
			INNER JOIN	BAS_PRODUCTDEFINITION	PD	ON	PD.PRODUCTDEFID = LOT.PRODUCTDEFID
													AND	PD.PRODUCTDEFVERSION = LOT.PRODUCTDEFVERSION
			WHERE	1 = 1
			and		LOT.LOTID = LOT.ROOTLOTID
			AND		PD.PRODUCTDEFTYPE = 'Product'
			AND 	LOT.LOTCREATEDTYPE NOT IN ('Return', 'Defect')
			AND 	(LOT.ISREPRESENTROLLLOT IS NULL OR LOT.ISREPRESENTROLLLOT = 'N')
			AND		LOT.LOTSTATE <![CDATA[<>]]> 'Created'
			AND		LOT.CREATEDQTY > 0
			AND		LOT.LOTSTARTDATE > CURRENT_TIMESTAMP - (INTERVAL '14' DAY)
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
			GROUP BY LOT.PRODUCTDEFID, LOT.PRODUCTDEFVERSION
		)
		, RESULT2WEEK (PRODUCTDEFID, PRODUCTDEFVERSION,  QTY) AS
		(
			-- 실적 수량 PCS (7일 이내)
			SELECT
					LOT.PRODUCTDEFID
				,	LOT.PRODUCTDEFVERSION
				,	SUM(LWR.SENDPCSQTY) AS QTY
			FROM		PCM_LOT					LOT
			INNER JOIN	PCM_LOT					RL	ON	RL.LOTID = LOT.ROOTLOTID
			INNER JOIN	BAS_PRODUCTDEFINITION	PD	ON	PD.PRODUCTDEFID = LOT.PRODUCTDEFID
													AND	PD.PRODUCTDEFVERSION = LOT.PRODUCTDEFVERSION
			INNER JOIN	BAS_PROCESSPATH			PTH	ON	PTH.PROCESSDEFID = LOT.PROCESSDEFID
													AND PTH.PROCESSDEFVERSION = LOT.PROCESSDEFVERSION
													and PTH.PATHTYPE IN ('End', 'StartEnd')
			INNER JOIN	PCM_LOTWORKRESULT		LWR	ON	LWR.LOTID = LOT.LOTID
													AND	LWR.PROCESSSEGMENTID = PTH.PROCESSSEGMENTID
													AND LWR.PROCESSSEGMENTVERSION = PTH.PROCESSSEGMENTVERSION
													AND LWR.WORKCOUNT =
													(
														SELECT MAX(WORKCOUNT)
														FROM PCM_LOTWORKRESULT LWR
														WHERE	1 = 1
														AND		LWR.LOTID = LOT.LOTID
														AND		LWR.PROCESSSEGMENTID = PTH.PROCESSSEGMENTID
														AND 	LWR.PROCESSSEGMENTVERSION = PTH.PROCESSSEGMENTVERSION
													)
			WHERE	1 = 1
			AND		PD.PRODUCTDEFTYPE = 'Product'
			AND 	RL.LOTCREATEDTYPE <![CDATA[<>]]> 'Return'
			AND		LOT.LOTCREATEDTYPE <![CDATA[<>]]> 'Defect'
			AND 	(LOT.ISREPRESENTROLLLOT IS NULL OR LOT.ISREPRESENTROLLLOT = 'N')
			AND		LWR.SENDPCSQTY > 0
			AND		LWR.SENDTIME > CURRENT_TIMESTAMP - (INTERVAL '7' DAY)
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
			GROUP BY LOT.PRODUCTDEFID, LOT.PRODUCTDEFVERSION
		)
		, INPUT2MONTH (PRODUCTDEFID, PRODUCTDEFVERSION, QTY) AS
		(
			-- 투입 수량 PCS (2달 이내)
			SELECT
					LOT.PRODUCTDEFID
				,	LOT.PRODUCTDEFVERSION
				,	SUM(LOT.CREATEDQTY) AS QTY
			FROM		PCM_LOT					LOT
			INNER JOIN	BAS_PRODUCTDEFINITION	PD	ON	PD.PRODUCTDEFID = LOT.PRODUCTDEFID
													AND	PD.PRODUCTDEFVERSION = LOT.PRODUCTDEFVERSION
			WHERE	1 = 1
			and		LOT.LOTID = LOT.ROOTLOTID
			AND		PD.PRODUCTDEFTYPE = 'Product'
			AND 	LOT.LOTCREATEDTYPE NOT IN ('Return', 'Defect')
			AND 	(LOT.ISREPRESENTROLLLOT IS NULL OR LOT.ISREPRESENTROLLLOT = 'N')
			AND		LOT.LOTSTATE <![CDATA[<>]]> 'Created'
			AND		LOT.CREATEDQTY > 0
			AND		LOT.LOTSTARTDATE > CURRENT_TIMESTAMP - (INTERVAL '2' MONTH)
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
			GROUP BY LOT.PRODUCTDEFID, LOT.PRODUCTDEFVERSION
		)
		, RESULT2MONTH (PRODUCTDEFID, PRODUCTDEFVERSION, QTY) AS
		(
			-- 실적 수량 PCS (2달 이내)
			SELECT
					LOT.PRODUCTDEFID
				,	LOT.PRODUCTDEFVERSION
				,	SUM(LWR.SENDPCSQTY) AS QTY
			FROM		PCM_LOT					LOT
			INNER JOIN	PCM_LOT					RL	ON	RL.LOTID = LOT.ROOTLOTID
			INNER JOIN	BAS_PRODUCTDEFINITION	PD	ON	PD.PRODUCTDEFID = LOT.PRODUCTDEFID
													AND	PD.PRODUCTDEFVERSION = LOT.PRODUCTDEFVERSION
			INNER JOIN	BAS_PROCESSPATH			PTH	ON	PTH.PROCESSDEFID = LOT.PROCESSDEFID
													AND PTH.PROCESSDEFVERSION = LOT.PROCESSDEFVERSION
													and PTH.PATHTYPE IN ('End', 'StartEnd')
			INNER JOIN	PCM_LOTWORKRESULT		LWR	ON	LWR.LOTID = LOT.LOTID
													AND	LWR.PROCESSSEGMENTID = PTH.PROCESSSEGMENTID
													AND LWR.PROCESSSEGMENTVERSION = PTH.PROCESSSEGMENTVERSION
													AND LWR.WORKCOUNT =
													(
														SELECT MAX(WORKCOUNT)
														FROM PCM_LOTWORKRESULT LWR
														WHERE	1 = 1
														AND		LWR.LOTID = LOT.LOTID
														AND		LWR.PROCESSSEGMENTID = PTH.PROCESSSEGMENTID
														AND 	LWR.PROCESSSEGMENTVERSION = PTH.PROCESSSEGMENTVERSION
													)
			WHERE	1 = 1
			AND		PD.PRODUCTDEFTYPE = 'Product'
			AND 	RL.LOTCREATEDTYPE <![CDATA[<>]]> 'Return'
			AND		LOT.LOTCREATEDTYPE <![CDATA[<>]]> 'Defect'
			AND 	(LOT.ISREPRESENTROLLLOT IS NULL OR LOT.ISREPRESENTROLLLOT = 'N')
			AND		LWR.SENDPCSQTY > 0
			AND		LWR.SENDTIME > CURRENT_TIMESTAMP - (INTERVAL '2' MONTH)
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
			GROUP BY LOT.PRODUCTDEFID, LOT.PRODUCTDEFVERSION
		)
		, INPUT1MONTH (PRODUCTDEFID, PRODUCTDEFVERSION, QTY) AS
		(
			-- 투입 수량 PCS (1달 이내)
			SELECT
					LOT.PRODUCTDEFID
				,	LOT.PRODUCTDEFVERSION
				,	SUM(LOT.CREATEDQTY) AS QTY
			FROM		PCM_LOT					LOT
			INNER JOIN	BAS_PRODUCTDEFINITION	PD	ON	PD.PRODUCTDEFID = LOT.PRODUCTDEFID
													AND	PD.PRODUCTDEFVERSION = LOT.PRODUCTDEFVERSION
			WHERE	1 = 1
			and		LOT.LOTID = LOT.ROOTLOTID
			AND		PD.PRODUCTDEFTYPE = 'Product'
			AND 	LOT.LOTCREATEDTYPE NOT IN ('Return', 'Defect')
			AND 	(LOT.ISREPRESENTROLLLOT IS NULL OR LOT.ISREPRESENTROLLLOT = 'N')
			AND		LOT.LOTSTATE <![CDATA[<>]]> 'Created'
			AND		LOT.CREATEDQTY > 0
			AND		LOT.LOTSTARTDATE > CURRENT_TIMESTAMP - (INTERVAL '1' MONTH)
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
			GROUP BY LOT.PRODUCTDEFID, LOT.PRODUCTDEFVERSION
		)
		, RESULT1MONTH (PRODUCTDEFID, PRODUCTDEFVERSION, QTY) AS
		(
			-- 실적 수량 PCS (1달 이내)
			SELECT
					LOT.PRODUCTDEFID
				,	LOT.PRODUCTDEFVERSION
				,	SUM(LWR.SENDPCSQTY) AS QTY
			FROM		PCM_LOT					LOT
			INNER JOIN	PCM_LOT					RL	ON	RL.LOTID = LOT.ROOTLOTID
			INNER JOIN	BAS_PRODUCTDEFINITION	PD	ON	PD.PRODUCTDEFID = LOT.PRODUCTDEFID
													AND	PD.PRODUCTDEFVERSION = LOT.PRODUCTDEFVERSION
			INNER JOIN	BAS_PROCESSPATH			PTH	ON	PTH.PROCESSDEFID = LOT.PROCESSDEFID
													AND PTH.PROCESSDEFVERSION = LOT.PROCESSDEFVERSION
													and PTH.PATHTYPE IN ('End', 'StartEnd')
			INNER JOIN	PCM_LOTWORKRESULT		LWR	ON	LWR.LOTID = LOT.LOTID
													AND	LWR.PROCESSSEGMENTID = PTH.PROCESSSEGMENTID
													AND LWR.PROCESSSEGMENTVERSION = PTH.PROCESSSEGMENTVERSION
													AND LWR.WORKCOUNT =
													(
														SELECT MAX(WORKCOUNT)
														FROM PCM_LOTWORKRESULT LWR
														WHERE	1 = 1
														AND		LWR.LOTID = LOT.LOTID
														AND		LWR.PROCESSSEGMENTID = PTH.PROCESSSEGMENTID
														AND 	LWR.PROCESSSEGMENTVERSION = PTH.PROCESSSEGMENTVERSION
													)
			WHERE	1 = 1
			AND		PD.PRODUCTDEFTYPE = 'Product'
			AND 	RL.LOTCREATEDTYPE <![CDATA[<>]]> 'Return'
			AND		LOT.LOTCREATEDTYPE <![CDATA[<>]]> 'Defect'
			AND 	(LOT.ISREPRESENTROLLLOT IS NULL OR LOT.ISREPRESENTROLLLOT = 'N')
			AND		LWR.SENDPCSQTY > 0
			AND		LWR.SENDTIME > CURRENT_TIMESTAMP - (INTERVAL '1' MONTH)
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
			GROUP BY LOT.PRODUCTDEFID, LOT.PRODUCTDEFVERSION
		)
		, ORDERINFO (PRODUCTDEFID, PRODUCTDEFVERSION, QTY) AS
		(
			SELECT 
						PD.PRODUCTDEFID
					,	PD.PRODUCTDEFVERSION						
					,	SUM(BSP.ORDERQTY) AS QTY			
			FROM BAS_PRODUCTDEFINITION		PD
			LEFT OUTER JOIN BAS_SALESORDER	BS	ON	BS.PRODUCTDEFID = PD.PRODUCTDEFID
												AND	BS.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
			LEFT OUTER JOIN BAS_SALEORDERAPPROVAL	BSP	ON	BSP.SALESORDERID =	BS.SALESORDERID	
												AND	BSP.ORG_LINENO = BS.LINENO
			WHERE 1 = 1
			AND		PD.PRODUCTDEFTYPE = 'Product'
			AND	COALESCE(BS.STATE, ' ') <![CDATA[<>]]>	'CLOSED'
			AND	COALESCE(BS.STATE, ' ') <![CDATA[<>]]>	'CANCELLED'
			AND (BS.SALESORDERDATE <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{PERIOD_PERIODFR},1,8), 'YYYY-MM-DD') OR BS.SALESORDERDATE	IS NULL	)
			AND (BS.SALESORDERDATE <![CDATA[<]]> TO_TIMESTAMP(SUBSTR(#{PERIOD_PERIODTO},1,8), 'YYYY-MM-DD') OR BS.SALESORDERDATE	IS NULL	)
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
			GROUP BY PD.PRODUCTDEFID, PD.PRODUCTDEFVERSION
			
		)
		, UNORDERINFO (PRODUCTDEFID, PRODUCTDEFVERSION, QTY) AS
		(
			
			SELECT 
				BS.PRODUCTDEFID
			,	BS.PRODUCTDEFVERSION
			,	SUM(BS.QTY)			AS	QTY	
			FROM
			(
				SELECT 
						BS.PRODUCTDEFID
						,	'미배분'	AS	PRODUCTDEFVERSION					
						,	BS.ORDERQTY - SUM(BSP.ORDERQTY) AS QTY			
						,	BS.LINENO	
				FROM BAS_PRODUCTDEFINITION		PD
				LEFT OUTER JOIN BAS_SALESORDER	BS	ON	BS.PRODUCTDEFID = PD.PRODUCTDEFID
													AND	BS.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
				LEFT JOIN BAS_SALEORDERAPPROVAL	BSP	ON	BSP.SALESORDERID =	BS.SALESORDERID	
													AND	BSP.ORG_LINENO = BS.LINENO
				WHERE 1 = 1
				AND		PD.PRODUCTDEFTYPE = 'Product'
				AND	COALESCE(BS.STATE, ' ') <![CDATA[<>]]>	'CLOSED'
				AND	COALESCE(BS.STATE, ' ') <![CDATA[<>]]>	'CANCELLED'
				AND (BS.SALESORDERDATE <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{PERIOD_PERIODFR},1,8), 'YYYY-MM-DD') OR BS.SALESORDERDATE	IS NULL	)
				AND (BS.SALESORDERDATE <![CDATA[<]]> TO_TIMESTAMP(SUBSTR(#{PERIOD_PERIODTO},1,8), 'YYYY-MM-DD') OR BS.SALESORDERDATE	IS NULL	)
				 
				<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
				</if>
				<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
					AND 	EXISTS
									(
										SELECT	1
										FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
										WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
									)
				</if>
				<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
					AND 	EXISTS
									(
										SELECT	1
										FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
										WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
									)
				</if>
				<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
					AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
				</if>
				 
				 
				GROUP BY BS.PRODUCTDEFID, BS.PRODUCTDEFVERSION, BS.SALESORDERID, BS.ORDERQTY, BS.LINENO
			) BS
			WHERE 1 = 1
			AND	BS.QTY > 0
			GROUP BY BS.PRODUCTDEFID, BS.PRODUCTDEFVERSION
			ORDER BY BS.PRODUCTDEFID, BS.PRODUCTDEFVERSION
		)
		,PRODUCT_SO_LIST AS
		(
			SELECT
			
					SO.SALESORDERID PRODUCTIONORDERID
				,	SO.LINENO
				,	SO.ENTERPRISEID
				,	SO.PLANTID
				,	SO.PRODUCTDEFID			                            AS ORGPRODUCTDEFID
				,	SO.PRODUCTDEFID                                     AS PRODUCTDEFID 
				,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION
				         ELSE SO.CHANGECODEVERSION
				         END  PRODUCTDEFVERSION
				,	SO.CUSTOMERID
				,	SO.ORDERQTY - COALESCE(PO.SURPLUSWIP,0) - COALESCE(PO.SURPLUSSTOCK,0) PLANQTY
				,	PD.PCSPNL
			FROM	BAS_SALEORDERAPPROVAL		SO
			LEFT JOIN MFM_PRODUCTIONORDER PO ON  SO.SALESORDERID = PO.PRODUCTIONORDERID
			                                AND SO.LINENO = PO.LINENO
			                                AND SO.ENTERPRISEID = PO.ENTERPRISEID
			                                AND SO.PLANTID = PO.PLANTID
			INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	SO.PRODUCTDEFID = PD.PRODUCTDEFID
												AND	((COALESCE(SO.CHANGECODEVERSION,' ') = ' ' AND SO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION) OR (COALESCE(SO.CHANGECODEVERSION,' ')  <![CDATA[<>]]> ' ' AND SO.CHANGECODEVERSION = PD.PRODUCTDEFVERSION))
			WHERE	1 = 1
			AND		COALESCE(PO.ISSPLIT, ' ') != 'Y'
			
		)
		, QTY AS
		(
			SELECT
					T.PRODUCTIONORDERID
				,	T.LINENO
				,	T.ENTERPRISEID
				,	T.PLANTID
				,	T.PRODUCTDEFID
				,	T.PRODUCTDEFVERSION
				,	MAX(T.PLANQTY)						AS PLANQTY
				,	ROUND(MAX(T.PLANQTY / T.PCSPNL))		AS PLANPANELQTY
				,	COALESCE(SUM(T.CREATEDQTY), 0)		AS CREATEDQTY
				,	COALESCE(SUM(T.CREATEDPANELQTY), 0)	AS CREATEDPANELQTY
			FROM
			(
				SELECT
						PO.PRODUCTIONORDERID
					,	PO.LINENO
					,	PO.ENTERPRISEID
					,	PO.PLANTID
					,	PO.PRODUCTDEFID
					,	PO.PRODUCTDEFVERSION
					,	PO.PLANQTY
					,	PO.PCSPNL
					,	TO_NUMBER(CASE WHEN PD.PRODUCTDEFTYPE = 'Product' THEN L.CREATEDQTY
							 ELSE L.CREATEDQTY / L.PANELPERQTY * PO.PCSPNL
						END)			AS CREATEDQTY
					,	L.CREATEDQTY / L.PANELPERQTY	AS CREATEDPANELQTY
				FROM	PRODUCT_SO_LIST			PO
				LEFT OUTER JOIN PCM_LOT			L	ON	PO.PRODUCTIONORDERID = L.PRODUCTIONORDERID
													AND	PO.LINENO = L.LINENO
													AND	PO.PRODUCTDEFID = L.PRODUCTDEFID
													AND	PO.PRODUCTDEFVERSION = L.PRODUCTDEFVERSION
													AND	L.ROOTLOTID = L.PARENTLOTID
													AND	L.LOTCREATEDTYPE = 'Normal'
													AND	L.LOTSTATE != 'Created'
													AND L.ISOEM = 'N'
				INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
													AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
				WHERE	1 = 1
			)	T
			GROUP BY T.PRODUCTIONORDERID
					,T.LINENO
					,T.ENTERPRISEID
					,T.PLANTID
					,T.PRODUCTDEFID
					,T.PRODUCTDEFVERSION
		)
		,PLANINFO (PRODUCTDEFID, PRODUCTDEFVERSION, PLANQTY, INPUTQTY) AS
		(
			SELECT
					PO.PRODUCTDEFID
				,	PO.PRODUCTDEFVERSION
				,	SUM(PO.PLANQTY)			AS PLANQTY
				,	SUM(PO.CREATEDQTY)		AS INPUTQTY
			FROM	QTY						PO
			INNER JOIN PRODUCT_SO_LIST		POL	ON	PO.PRODUCTIONORDERID = POL.PRODUCTIONORDERID
												AND	PO.LINENO = POL.LINENO
												AND	PO.ENTERPRISEID = POL.ENTERPRISEID
												AND	PO.PLANTID = POL.PLANTID
												AND	PO.PRODUCTDEFID = POL.PRODUCTDEFID
												AND	PO.PRODUCTDEFVERSION = POL.PRODUCTDEFVERSION
			INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
													AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
			LEFT OUTER JOIN BAS_CUSTOMER		C	ON	POL.CUSTOMERID = C.CUSTOMERID
			
			WHERE	1 = 1
			AND		PO.PLANQTY > PO.CREATEDQTY
			AND     PD.PRODUCTDEFTYPE = 'Product'
			 
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
			GROUP BY PO.PRODUCTDEFID
					,PO.PRODUCTDEFVERSION
					,PD.PRODUCTDEFNAME
					,PD.PRODUCTIONTYPE
					,POL.CUSTOMERID
					,C.CUSTOMERNAME
					,POL.PCSPNL
					,POL.ORGPRODUCTDEFID
			ORDER BY POL.ORGPRODUCTDEFID
		)
		, LOCKING (PRODUCTDEFID, PRODUCTDEFVERSION, QTY) AS
		(
			SELECT	
					L.PRODUCTDEFID
				,	L.PRODUCTDEFVERSION
				,	SUM(L.QTY)				AS	QTY					
			FROM	PCM_LOTLOCKING				LL
			INNER JOIN PCM_LOT					L	ON	LL.LOTID = L.LOTID
			INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	LL.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LL.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
			INNER JOIN MFM_PRODUCTIONORDER		PO	ON	L.PRODUCTIONORDERID = PO.PRODUCTIONORDERID
													AND L.LINENO = PO.LINENO
			WHERE   L.LOTSTATE IN ('InProduction', 'InTransit')
			AND 	LL.LOCKINGSTATUS = 'Y'
			AND     L.ISHOLD = 'N'
			AND 	LL.LOCKINGTYPE NOT IN (
											SELECT REASONCODEID
			                                FROM BAS_REASONCODE
			                                WHERE REASONCODECLASSID IN (
			                                                                SELECT REASONCODECLASSID
			                                                                FROM BAS_REASONCODECLASS
			                                                                WHERE PARENTREASONCODECLASSID = 'AbnormalOccurrenceCode'
			                                                           )
										  )
			-- Locking 여부
			AND     COALESCE(L.ISLOCKING, 'N') = 'Y'
			AND		PD.PRODUCTDEFTYPE = 'Product'
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
			GROUP BY L.PRODUCTDEFID, L.PRODUCTDEFVERSION
		)
		, ONHAND		AS
		(
			SELECT 
						SUM(FGI_ONHAND)		AS	FGI_ONHAND
					,	SUM(SO_FGI_ONHAND)	AS	SO_FGI_ONHAND
					,	SUM(HDI_ONHAND)		AS	HDI_ONHAND
					,	SUM(VMI_ONHAND)		AS	VMI_ONHAND
					,	SUM(AGI_ONHAND)		AS	AGI_ONHAND
					,	SUM(REJ_ONHAND)		AS	REJ_ONHAND
					,	SUM(REI_ONHAND)		AS	REI_ONHAND
					,	SUM(REP_ONHAND)		AS	REP_ONHAND	
					,	SEGMENT1			AS	PRODUCTDEFID
			FROM IFC_MES_S_SO_ONHAND_V@ERPPROD	
			WHERE 1 = 1
			AND	ENTERPRISEID = 'SMLINES'
			AND	PLANTID	=	#{PLANTID}
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
			AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	SEGMENT1 = PRO.VALUE
								)	
			</if>
			GROUP BY	SEGMENT1
		)
		, ISSUE AS
		(
			SELECT 
					SUM(SHIPMENT_QTY) AS SHIPMENT_QTY 
					,SEGMENT1			AS	PRODUCTDEFID
			FROM IFC_MES_S_SO_ISSUE_V@ERPPROD
			WHERE 1 = 1
			AND	ENTERPRISEID = 'SMLINES'
			AND	PLANTID	=	#{PLANTID}
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
			AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	SEGMENT1 = PRO.VALUE
								)	
			</if>	
			GROUP BY	SEGMENT1
		)
		, NONISSUE AS
		(
			SELECT 
					SUM(NOT_SHIPMENT_QTY) AS NOT_SHIPMENT_QTY 
					,SEGMENT1				AS	PRODUCTDEFID
			FROM IFC_MES_S_SO_NONISSUE_V@ERPPROD
			WHERE 1 = 1
			AND	ENTERPRISEID = 'SMLINES'
			AND	PLANTID	=	#{PLANTID}
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
			AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	SEGMENT1 = PRO.VALUE
								)	
			</if>
			GROUP BY	SEGMENT1
								
		)
		, MAIN (PRODUCTDEFID, PRODUCTDEFVERSION, PRODUCTDEFNAME, CUSTOMERNAME, PCSPNL, PCSMM) AS
		(
			SELECT	DISTINCT
					PD.PRODUCTDEFID
				,	PD.PRODUCTDEFVERSION
				,	PD.PRODUCTDEFNAME
				,	BC.CUSTOMERNAME 
				,	PD.PCSPNL
				,	PD.PCSMM
			FROM				BAS_PRODUCTDEFINITION	PD
			LEFT OUTER JOIN 	MFM_PRODUCTIONORDER		PO	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
															AND PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
			LEFT JOIN BAS_CUSTOMER						BC	ON	BC.CUSTOMERID = PD.CUSTOMERID
			WHERE	1 = 1
			AND		PD.PRODUCTDEFTYPE = 'Product'
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')	PRO
									WHERE	PD.PRODUCTDEFID = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')	PRO
									WHERE	PD.PRODUCTDEFVERSION = PRO.VALUE
								)
			</if>
			<if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME !=''">
				AND 	EXISTS
								(
									SELECT	1
									FROM	UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFNAME}, ',')	PRO
									WHERE	PD.PRODUCTDEFNAME LIKE '%' || PRO.VALUE || '%'
								)
			</if>
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE = #{PRODUCTIONTYPE}
			</if>
		)
		,	RESULTINFO AS 
		(
			SELECT
					NORETURN.CUSTOMERNAME									--고객사
				,	NORETURN.PRODUCTDEFID																	-- 품목 ID
				,	NORETURN.PRODUCTDEFVERSION																-- 품목Rev
				,	COALESCE(NORETURN.PRODUCTDEFNAME, YESRETURN.PRODUCTDEFNAME) AS PRODUCTDEFNAME			-- 품목명
				,	NORETURN.ORDERQTY										-- 수주
				,	YESRETURN.RETURNWIP										-- 반품재공
				,	NORETURN.PRODUCTIONNOTPACKED							-- 생산미입고
				,	NORETURN.NOTINPUTPCSQTY									-- 미투입PCS
				,	NORETURN.INPUTQTY										-- 투입
			--	,	NORETURN.PRODSTOCK										-- 생산재고
				,	NORETURN.BEFORESHIP										-- 출하전재공
				,	NORETURN.AFTERSHIP										-- 출하후재공
				,	NORETURN.HOLD											-- 보류 재공
				,	NORETURN.DEFECT 										-- 불량미확정
				,	NORETURN.LOCKING										-- LOCKING
				,	COALESCE(NORETURN.PCSPNL, YESRETURN.PCSPNL) AS PCSPNL 	-- 합수
				,	COALESCE(NORETURN.PCSMM, YESRETURN.PCSMM) AS PCSMM		-- 산출수
				,	NORETURN.YIELD2MONTH									-- 2달 수율
				,	NORETURN.YIELD1MONTH									-- 1달 수율
				,	NORETURN.YIELD1WEEK										-- 1주 수율
			FROM
			(
				-- 반품 재공 외
				SELECT
						M.CUSTOMERNAME											-- 고객사
					,	M.PRODUCTDEFID											-- 품목 ID
					,	COALESCE(ODI.PRODUCTDEFVERSION, M.PRODUCTDEFVERSION)	AS PRODUCTDEFVERSION	-- 품목Rev		
					,	MAX(M.PRODUCTDEFNAME)									AS PRODUCTDEFNAME		-- 품목명 
					,	MAX(ODI.QTY) 											AS ORDERQTY				-- 수주	 
					,	NULL													AS RETURNWIP			-- 반품재공
					,	MAX(PO.PLANQTY) - SUM(PKD.QTY)							AS PRODUCTIONNOTPACKED	-- 생산미입고
					,	MAX(PO.PLANQTY) - SUM(PO.INPUTQTY)						AS NOTINPUTPCSQTY		-- 미투입PCS
					,	SUM(PO.INPUTQTY)										AS INPUTQTY				-- 투입
					--,	SUM(STK.QTY)											AS PRODSTOCK			-- 생산재고
					,	SUM(BFS.QTY)											AS BEFORESHIP			-- 출하전재공
					,	SUM(PKG.QTY)											AS AFTERSHIP			-- 출하후재공
					,	SUM(HLD.QTY)											AS HOLD					-- 보류 재공
					,	SUM(DFT.QTY)											AS DEFECT				-- 불량미확정
					,	SUM(LCG.QTY)											AS LOCKING				-- LOCKING
					,	MAX(M.PCSPNL)											AS PCSPNL				-- 합수
					,	MAX(M.PCSMM)											AS PCSMM				-- 산출수
					,	CASE WHEN SUM(IM2.QTY) > 0 THEN COALESCE(SUM(RM2.QTY), 0) / SUM(IM2.QTY) ELSE 0 END AS YIELD2MONTH	-- 2달 수율
					,	CASE WHEN SUM(IM1.QTY) > 0 THEN COALESCE(SUM(RM1.QTY), 0) / SUM(IM1.QTY) ELSE 0 END AS YIELD1MONTH	-- 1달 수율
					,	CASE WHEN SUM(IW2.QTY) > 0 THEN COALESCE(SUM(RW2.QTY), 0) / SUM(IW2.QTY) ELSE 0 END AS YIELD1WEEK	-- 1주 수율
				FROM			MAIN				M
				LEFT OUTER JOIN	PLANINFO			PO	ON	PO.PRODUCTDEFID = M.PRODUCTDEFID
														AND	PO.PRODUCTDEFVERSION = M.PRODUCTDEFVERSION
				LEFT OUTER JOIN INPUT				INP	ON	INP.PRODUCTDEFID = M.PRODUCTDEFID
														AND	INP.PRODUCTDEFVERSION = M.PRODUCTDEFVERSION
				LEFT OUTER JOIN PACKED				PKD	ON	PKD.PRODUCTDEFID = M.PRODUCTDEFID
														AND	PKD.PRODUCTDEFVERSION = M.PRODUCTDEFVERSION
				--LEFT OUTER JOIN STOCK				STK	ON	STK.PRODUCTDEFID = M.PRODUCTDEFID
				LEFT OUTER JOIN BEFORESHIP			BFS	ON	BFS.PRODUCTDEFID = M.PRODUCTDEFID
														AND	BFS.PRODUCTDEFVERSION = M.PRODUCTDEFVERSION
				LEFT OUTER JOIN PACKING				PKG	ON	PKG.PRODUCTDEFID = M.PRODUCTDEFID
														AND	PKG.PRODUCTDEFVERSION = M.PRODUCTDEFVERSION
				LEFT OUTER JOIN HOLD				HLD	ON	HLD.PRODUCTDEFID = M.PRODUCTDEFID
														AND	HLD.PRODUCTDEFVERSION = M.PRODUCTDEFVERSION
				LEFT OUTER JOIN DEFECT				DFT	ON	DFT.PRODUCTDEFID = M.PRODUCTDEFID
														AND	DFT.PRODUCTDEFVERSION = M.PRODUCTDEFVERSION
				LEFT OUTER JOIN INPUT2MONTH			IM2 ON	IM2.PRODUCTDEFID = M.PRODUCTDEFID
														AND	IM2.PRODUCTDEFVERSION = M.PRODUCTDEFVERSION
				LEFT OUTER JOIN RESULT2MONTH		RM2 ON	RM2.PRODUCTDEFID = M.PRODUCTDEFID
														AND	RM2.PRODUCTDEFVERSION = M.PRODUCTDEFVERSION
				LEFT OUTER JOIN INPUT1MONTH			IM1 ON	IM1.PRODUCTDEFID = M.PRODUCTDEFID
														AND	IM1.PRODUCTDEFVERSION = M.PRODUCTDEFVERSION
				LEFT OUTER JOIN RESULT1MONTH		RM1 ON	RM1.PRODUCTDEFID = M.PRODUCTDEFID
														AND	RM1.PRODUCTDEFVERSION = M.PRODUCTDEFVERSION
				LEFT OUTER JOIN INPUT2WEEK			IW2 ON	IW2.PRODUCTDEFID = M.PRODUCTDEFID
														AND	IW2.PRODUCTDEFVERSION = M.PRODUCTDEFVERSION
				LEFT OUTER JOIN RESULT2WEEK			RW2 ON	RW2.PRODUCTDEFID = M.PRODUCTDEFID
														AND	RW2.PRODUCTDEFVERSION = M.PRODUCTDEFVERSION
				LEFT OUTER JOIN ORDERINFO			ODI	ON	ODI.PRODUCTDEFID = M.PRODUCTDEFID
														AND	ODI.PRODUCTDEFVERSION = M.PRODUCTDEFVERSION
				LEFT OUTER JOIN LOCKING				LCG ON	LCG.PRODUCTDEFID = M.PRODUCTDEFID
														AND	LCG.PRODUCTDEFVERSION = M.PRODUCTDEFVERSION	
				GROUP BY M.PRODUCTDEFID, ODI.PRODUCTDEFVERSION, M.PRODUCTDEFVERSION, M.CUSTOMERNAME
				
				UNION ALL
				
				SELECT
						M.CUSTOMERNAME											-- 고객사
					,	M.PRODUCTDEFID											-- 품목 ID
					,	UOD.PRODUCTDEFVERSION			AS PRODUCTDEFVERSION	-- 품목Rev		
					,	MAX(M.PRODUCTDEFNAME)			AS PRODUCTDEFNAME		-- 품목명 
					,	MAX(UOD.QTY) 					AS ORDERQTY				-- 수주	 
					,	NULL							AS RETURNWIP			-- 반품재공
					,	NULL							AS PRODUCTIONNOTPACKED	-- 생산미입고
					,	NULL							AS NOTINPUTPCSQTY		-- 미투입PCS
					,	NULL							AS INPUTQTY				-- 투입
					,	NULL							AS BEFORESHIP			-- 출하전재공
					,	NULL							AS AFTERSHIP			-- 출하후재공
					,	NULL							AS HOLD					-- 보류 재공
					,	NULL							AS DEFECT				-- 불량미확정
					,	NULL							AS LOCKING				-- LOCKING
					,	NULL							AS PCSPNL				-- 합수
					,	NULL							AS PCSMM				-- 산출수
					,	NULL 							AS YIELD2MONTH	-- 2달 수율
					,	NULL 							AS YIELD1MONTH	-- 1달 수율
					,	NULL 							AS YIELD1WEEK	-- 1주 수율
				FROM			MAIN				M
				INNER JOIN UNORDERINFO			UOD	ON	UOD.PRODUCTDEFID = M.PRODUCTDEFID
				GROUP BY M.PRODUCTDEFID, UOD.PRODUCTDEFVERSION, M.CUSTOMERNAME
			) NORETURN
			FULL OUTER JOIN
			(
				-- 반품 재공
				SELECT
						RTN.PRODUCTDEFID
					,	MAX(RTN.PRODUCTDEFNAME) AS PRODUCTDEFNAME
					,	SUM(RTN.QTY)			AS RETURNWIP			-- 반품재공
					,	NULL					AS PRODUCTIONNOTPACKED	-- 생산미입고
					,	NULL					AS NOTINPUTPCSQTY		-- 미투입PCS
					--,	NULL					AS PRODSTOCK			-- 생산재고
					,	NULL					AS BEFORESHIP			-- 출하전재공
					,	NULL					AS AFTERSHIP			-- 출하후재공
					,	NULL					AS HOLD					-- 보류 재공
					,	NULL					AS DEFECT				-- 불량미확정
					,	MAX(RTN.PCSPNL)			AS PCSPNL				-- 합수
					,	MAX(RTN.PCSMM)			AS PCSMM				-- 산출수
					,	NULL 					AS YIELD2MONTH			-- 2달 수율
					,	NULL 					AS YIELD1MONTH			-- 1달 수율
					,	NULL 					AS YIELD1WEEK			-- 2주 수율
				FROM 	RETURN	RTN
				GROUP BY RTN.PRODUCTDEFID
			) YESRETURN
			ON	NORETURN.PRODUCTDEFID = YESRETURN.PRODUCTDEFID
			
			ORDER BY 	
					NORETURN.PRODUCTDEFID, NORETURN.PRODUCTDEFVERSION
		)
		,	RESULTINFOSUM AS
		(
			SELECT 
						CUSTOMERNAME				--고객사
					,	PRODUCTDEFID				-- 품목 ID
					,	PRODUCTDEFVERSION			-- 품목Rev
					,	PRODUCTDEFNAME				-- 품목명
					,	ORDERQTY					-- 수주
					,	RETURNWIP					-- 반품재공
					,	PRODUCTIONNOTPACKED			-- 생산미입고
					,	NOTINPUTPCSQTY				-- 미투입PCS
					,	INPUTQTY					-- 투입
					,	NULL 	AS	FGI_ONHAND		--생산재고
					,	NULL	AS	SO_FGI_ONHAND	--영업재고
					,	NULL	AS	HDI_ONHAND		--영업보류재고
					,	NULL	AS	VMI_ONHAND		--VMI재고
					,	NULL	AS	AGI_ONHAND		--잉여재고
					,	NULL	AS	REJ_ONHAND		--불량재고
					,	NULL	AS	REI_ONHAND		--재검재고
					,	NULL	AS	REP_ONHAND		--재포장재고
					,	NULL	AS	SHIPMENT_QTY	--출고
					,	NULL	AS	NOT_SHIPMENT_QTY--미출고
					,	BEFORESHIP					-- 출하전재공
					,	AFTERSHIP					-- 출하후재공
					,	HOLD						-- 보류 재공
					,	DEFECT 						-- 불량미확정
					,	LOCKING						-- LOCKING
					,	PCSPNL 						-- 합수
					,	PCSMM						-- 산출수
					,	YIELD2MONTH					-- 2달 수율
					,	YIELD1MONTH					-- 1달 수율
					,	YIELD1WEEK					-- 1주 수율	
			FROM RESULTINFO
		 	
			UNION ALL
			
			SELECT 
						RSL.CUSTOMERNAME				AS	CUSTOMERNAME		--고객사
					,	RSL.PRODUCTDEFID				AS	PRODUCTDEFID		-- 품목 ID
					,	'합계'							AS	PRODUCTDEFVERSION	-- 품목Rev
					,	MAX(RSL.PRODUCTDEFNAME)			AS	PRODUCTDEFNAME		-- 품목명
					,	SUM(RSL.ORDERQTY)				AS	ORDERQTY			-- 수주
					,	SUM(RSL.RETURNWIP)				AS	RETURNWIP			-- 반품재공
					,	SUM(RSL.PRODUCTIONNOTPACKED)	AS	PRODUCTIONNOTPACKED	-- 생산미입고
					,	SUM(RSL.NOTINPUTPCSQTY)			AS	NOTINPUTPCSQTY		-- 미투입PCS
					,	SUM(RSL.INPUTQTY)				AS	INPUTQTY			-- 투입
					,	SUM(ONH.FGI_ONHAND)	 			AS	FGI_ONHAND			--생산재고
					,	SUM(ONH.SO_FGI_ONHAND)			AS	SO_FGI_ONHAND		--영업재고
					,	SUM(ONH.HDI_ONHAND)				AS	HDI_ONHAND			--영업보류재고
					,	SUM(ONH.VMI_ONHAND)				AS	VMI_ONHAND			--VMI재고
					,	SUM(ONH.AGI_ONHAND)				AS	AGI_ONHAND			--잉여재고
					,	SUM(ONH.REJ_ONHAND)				AS	REJ_ONHAND			--불량재고
					,	SUM(ONH.REI_ONHAND)				AS	REI_ONHAND			--재검재고
					,	SUM(ONH.REP_ONHAND)				AS	REP_ONHAND			--재포장재고
					,	SUM(ISS.SHIPMENT_QTY)			AS	SHIPMENT_QTY		--출고
					,	SUM(NON.NOT_SHIPMENT_QTY)		AS	NOT_SHIPMENT_QTY	--미출고
					,	SUM(RSL.BEFORESHIP)				AS	BEFORESHIP			-- 출하전재공
					,	SUM(RSL.AFTERSHIP)				AS	AFTERSHIP			-- 출하후재공
					,	SUM(RSL.HOLD)					AS	HOLD				-- 보류 재공
					,	SUM(RSL.DEFECT)					AS	DEFECT				-- 불량미확정
					,	SUM(RSL.LOCKING)				AS	LOCKING				-- LOCKING
					,	NULL 							AS	PCSPNL				-- 합수
					,	NULL							AS	PCSMM				-- 산출수
					,	MAX(RSL.YIELD2MONTH)			AS	YIELD2MONTH			-- 2달 수율
					,	MAX(RSL.YIELD1MONTH)			AS	YIELD1MONTH			-- 1달 수율
					,	MAX(RSL.YIELD1WEEK)				AS	YIELD1WEEK			-- 1주 수율	
			FROM RESULTINFO			RSL
			LEFT OUTER JOIN ONHAND 		ONH	ON	ONH.PRODUCTDEFID = RSL.PRODUCTDEFID
			LEFT OUTER JOIN ISSUE 		ISS ON	ISS.PRODUCTDEFID = RSL.PRODUCTDEFID
			LEFT OUTER JOIN NONISSUE		NON	ON	NON.PRODUCTDEFID = RSL.PRODUCTDEFID
			GROUP BY RSL.PRODUCTDEFID, RSL.CUSTOMERNAME
		)
		SELECT * FROM RESULTINFOSUM
		WHERE 1 = 1
		ORDER BY PRODUCTDEFID, PRODUCTDEFVERSION
	</select>
	
</mapper>