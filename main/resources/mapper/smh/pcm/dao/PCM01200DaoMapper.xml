<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="smh.pcm.dao.PCM01200Dao">
		
	<select id="selectNotInputList" parameterType="map" resultType="hashmap">
	/* "SelectNotInputList" 10001 */
	--id : selectNotInputList
		WITH PRODUCT_SO_LIST AS
			(
				SELECT
				
						SO.SALESORDERID PRODUCTIONORDERID
					,	SO.LINENO
					,	SO.ENTERPRISEID
					,	SO.PLANTID
					,	SO.PRODUCTDEFID			                            AS ORGPRODUCTDEFID
					,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION
					         ELSE SO.CHANGECODEVERSION
					         END ORGPRODUCTDEFVERSION
					,	SO.PRODUCTDEFID                                     AS PRODUCTDEFID 
					,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION
					         ELSE SO.CHANGECODEVERSION
					         END  PRODUCTDEFVERSION
					,	SO.CUSTOMERID
		--			,	SO.UNITPRICE * COALESCE(ME.EXCHANGEVALUE,1.0) SALESPRICE
					,	NVL(PCM_EXCHANGE_FN(SO.PLANTID , SYSDATE , UP.CURRENCY_CODE, 1 * UP.UNITPRICE),0) AS SALESPRICE
					,	SO.ORDERQTY - COALESCE(PO.SURPLUSWIP,0) - COALESCE(PO.SURPLUSSTOCK,0) PLANQTY
					,	PD.LAYER
					,	PD.PCSPNL
					,	PD.PCSMM
					--,	0						AS "SEQUENCE"
					,	SO.ORDERQTY					
				FROM	BAS_SALEORDERAPPROVAL		SO
				LEFT JOIN MFM_PRODUCTIONORDER PO ON  SO.SALESORDERID = PO.PRODUCTIONORDERID
				                                AND SO.LINENO = PO.LINENO
				                                AND SO.ENTERPRISEID = PO.ENTERPRISEID
				                                AND SO.PLANTID = PO.PLANTID
				INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	SO.PRODUCTDEFID = PD.PRODUCTDEFID
													AND	((COALESCE(SO.CHANGECODEVERSION,' ') = ' ' AND SO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION) OR (COALESCE(SO.CHANGECODEVERSION,' ') <![CDATA[<>]]>' ' AND SO.CHANGECODEVERSION = PD.PRODUCTDEFVERSION))
				LEFT JOIN BAS_UNITPRICEFORMES    UP ON UP.PRODUCTDEFID = PO.PRODUCTDEFID 
												   AND UP.PRODUCTDEFVERSION = PO.PRODUCTDEFVERSION 
												   AND SYSDATE  BETWEEN APPLY_START_DATE 
									   				AND NVL(UP.APPLY_END_DATE,TO_TIMESTAMP('9999-12-31 23:59:59','yyyy-MM-dd HH24:MI:SS'))																									
				WHERE	1 = 1
				AND		COALESCE(PO.ISSPLIT, ' ') != 'Y'
				UNION ALL
				SELECT
					    SO.SALESORDERID PRODUCTIONORDERID
					,	SO.LINENO
					,	SO.ENTERPRISEID
					,	SO.PLANTID
					,	COALESCE(PO.PRODUCTDEFID,SO.PRODUCTDEFID)			AS ORGPRODUCTDEFID
					,	COALESCE(PO.PRODUCTDEFVERSION,SO.PRODUCTDEFVERSION)	AS ORGPRODUCTDEFVERSION
					,	BOM.MATERIALDEFID		AS PRODUCTDEFID
					,	BOM.MATERIALDEFVERSION	AS PRODUCTDEFVERSION
					,	SO.CUSTOMERID
		--			,	SO.UNITPRICE * COALESCE(ME.EXCHANGEVALUE,1.0) SALESPRICE
					,	NVL(PCM_EXCHANGE_FN(SO.PLANTID , SYSDATE , UP.CURRENCY_CODE, 1 * UP.UNITPRICE),0) AS SALESPRICE
					,	SO.ORDERQTY - COALESCE(PO.SURPLUSWIP,0) - COALESCE(PO.SURPLUSSTOCK,0) PLANQTY
					,	PD.LAYER
					,	PD.PCSPNL
					,	PD.PCSMM
					--,	BOM.SEQUENCE
					,	SO.ORDERQTY					
				FROM	BAS_SALEORDERAPPROVAL		SO
				LEFT JOIN MFM_PRODUCTIONORDER PO ON  SO.SALESORDERID = PO.PRODUCTIONORDERID
				                                AND SO.LINENO = PO.LINENO
				                                AND SO.ENTERPRISEID = PO.ENTERPRISEID
				                                AND SO.PLANTID = PO.PLANTID
				INNER JOIN BAS_PRODUCTDEFINITION	PDD	ON	SO.PRODUCTDEFID = PDD.PRODUCTDEFID
													AND SO.PRODUCTDEFVERSION = PDD.PRODUCTDEFVERSION
				INNER JOIN BAS_BILLOFMATERIAL	BOM	ON	PO.PRODUCTDEFID = BOM.PRODUCTDEFID
													AND	PO.PRODUCTDEFVERSION = BOM.PRODUCTDEFVERSION
													AND	PDD.PROCESSDEFID = BOM.PROCESSDEFID
													AND PDD.PROCESSDEFVERSION = BOM.PROCESSDEFVERSION
													AND	BOM.MATERIALTYPE = 'Product'
				INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
													AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
				LEFT JOIN BAS_UNITPRICEFORMES    UP ON UP.PRODUCTDEFID = PO.PRODUCTDEFID 
												   AND UP.PRODUCTDEFVERSION = PO.PRODUCTDEFVERSION 
												   AND SYSDATE  BETWEEN APPLY_START_DATE 
									   				AND NVL(UP.APPLY_END_DATE,TO_TIMESTAMP('9999-12-31 23:59:59','yyyy-MM-dd HH24:MI:SS'))																
				WHERE	1 = 1
				AND		COALESCE(PO.ISSPLIT, '') != 'Y' -- 수주배분 라인번호의 LOT생성 완료.
			), QTY AS
			(
				SELECT
						T.PRODUCTIONORDERID
					,	T.LINENO
					,	T.ENTERPRISEID
					,	T.PLANTID
					,	T.PRODUCTDEFID
					,	T.PRODUCTDEFVERSION
					,	MAX(T.PLANQTY)						AS PLANQTY
					,	ROUND(MAX(T.PLANQTY / T.PCSPNL))		AS PLANPANELQTY
					,	COALESCE(SUM(T.CREATEDQTY), 0)		AS CREATEDQTY
					,	COALESCE(SUM(T.CREATEDPANELQTY), 0)	AS CREATEDPANELQTY
				FROM
				(
					SELECT
							PO.PRODUCTIONORDERID
						,	PO.LINENO
						,	PO.ENTERPRISEID
						,	PO.PLANTID
						,	PO.PRODUCTDEFID
						,	PO.PRODUCTDEFVERSION
						,	PO.PLANQTY
						,	PO.PCSPNL
						,	TO_NUMBER(CASE WHEN PD.PRODUCTDEFTYPE = 'Product' THEN L.CREATEDQTY
								 ELSE L.CREATEDQTY / L.PANELPERQTY * PO.PCSPNL
							END)			AS CREATEDQTY
						,	L.CREATEDQTY / L.PANELPERQTY	AS CREATEDPANELQTY
					FROM	PRODUCT_SO_LIST			PO
					LEFT OUTER JOIN PCM_LOT			L	ON	PO.PRODUCTIONORDERID = L.PRODUCTIONORDERID
														AND	PO.LINENO = L.LINENO
														AND	PO.PRODUCTDEFID = L.PRODUCTDEFID
														AND	PO.PRODUCTDEFVERSION = L.PRODUCTDEFVERSION
														AND	L.ROOTLOTID = L.PARENTLOTID
														AND	L.LOTCREATEDTYPE = 'Normal'
														AND	L.LOTSTATE != 'Created'
														AND L.ISOEM = 'N'
					INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
														AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
					WHERE	1 = 1
				)	T
				GROUP BY T.PRODUCTIONORDERID
						,T.LINENO
						,T.ENTERPRISEID
						,T.PLANTID
						,T.PRODUCTDEFID
						,T.PRODUCTDEFVERSION
			)
			SELECT
					PO.PRODUCTDEFID
				<if test='INNERREVISIONTOTAL == "Y"'>
					,	PO.PRODUCTDEFVERSION
				</if>				
				,	PD.PRODUCTDEFNAME
				,	COALESCE(PDN.DICTIONARYNAME, PDC.MEANING)									AS PRODUCTIONTYPE
				,	POL.CUSTOMERID
				,	C.CUSTOMERNAME
				,	COALESCE(PTN.DICTIONARYNAME, PT.MEANING)									AS PRODUCTDEFTYPE
				,	POL.LAYER
				,	POL.PCSPNL
				,	POL.PCSMM
				,	SUM(PO.PLANQTY - PO.CREATEDQTY)												AS QTY
				,	SUM(PO.PLANPANELQTY - PO.CREATEDPANELQTY)									AS PANELQTY
				,	ROUND(SUM(((PO.PLANQTY - PO.CREATEDQTY) / POL.PCSMM)), 2) 					AS M2
				--,	SUM((PO.PLANQTY - PO.CREATEDQTY) * POL.SALESPRICE / 100000000)				AS SALESPRICE
				,	ROUND(TO_NUMBER(SUM((PO.PLANQTY - PO.CREATEDQTY) * POL.SALESPRICE / 100000000)),1)				AS SALESPRICE
				,	COALESCE(RSN.DICTIONARYNAME, RS.MEANING)									AS RTRSHT
				,	COALESCE(PSN.DICTIONARYNAME, PS.PROCESSSEGMENTNAME)							AS PROCESSSEGMENTNAME
				,	SUM(COALESCE(POL.ORDERQTY, 0)) - SUM(COALESCE(PO.CREATEDQTY, 0))				AS LEFTQTY --잔량
			FROM	QTY						PO
			INNER JOIN PRODUCT_SO_LIST		POL	ON	PO.PRODUCTIONORDERID = POL.PRODUCTIONORDERID
												AND	PO.LINENO = POL.LINENO
												AND	PO.ENTERPRISEID = POL.ENTERPRISEID
												AND	PO.PLANTID = POL.PLANTID
												AND	PO.PRODUCTDEFID = POL.PRODUCTDEFID
												AND	PO.PRODUCTDEFVERSION = POL.PRODUCTDEFVERSION
			INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
													AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
			LEFT OUTER JOIN BAS_CUSTOMER		C	ON	POL.CUSTOMERID = C.CUSTOMERID
			INNER JOIN CMD_LOOKUP_VALUES	PT	ON	PD.PRODUCTDEFTYPE = PT.LOOKUP_CODE
												AND	PT.LOOKUP_TYPE = 'ProductDefType'
			LEFT OUTER JOIN CMD_DICTIONARY	PTN	ON	PT.DICTIONARYID = PTN.DICTIONARYID
												AND	PTN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			INNER JOIN CMD_LOOKUP_VALUES	RS	ON	PD.RTRSHT = RS.LOOKUP_CODE
												AND	RS.LOOKUP_TYPE = 'RTRSHT'
			LEFT OUTER JOIN CMD_DICTIONARY	RSN	ON	RS.DICTIONARYID = RSN.DICTIONARYID
												AND	RSN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			INNER JOIN BAS_PROCESSPATH		PP	ON	PD.PROCESSDEFID = PP.PROCESSDEFID
												AND	PD.PROCESSDEFVERSION = PP.PROCESSDEFVERSION
												--AND	PP.PATHSEQUENCE = 1
												AND	PP.PATHTYPE IN ('Start', 'StartEnd')
			INNER JOIN BAS_PROCESSSEGMENT	PS	ON	PP.PROCESSSEGMENTID = PS.PROCESSSEGMENTID
												AND	PP.PROCESSSEGMENTVERSION = PS.PROCESSSEGMENTVERSION
			LEFT OUTER JOIN CMD_DICTIONARY	PSN	ON	PS.PROCESSSEGMENTNAME = PSN.DICTIONARYID
												AND	PSN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			LEFT OUTER JOIN CMD_LOOKUP_VALUES	PDC	ON	PDC.LOOKUP_CODE = PD.PRODUCTIONTYPE
												AND	PDC.LOOKUP_TYPE = 'ProductionType'
			LEFT OUTER JOIN CMD_DICTIONARY	PDN	ON	PDC.MEANING = PDN.DICTIONARYID
												AND	PDN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			WHERE	1 = 1
			AND		PO.PLANQTY > PO.CREATEDQTY
			AND     PD.PRODUCTDEFTYPE = 'Product'
			<if test="PLANTID != null and PLANTID !=''">
				AND 	PO.PLANTID =  #{PLANTID}
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	PD.PRODUCTDEFVERSION =  #{PRODUCTDEFVERSION}
			</if>
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	PO.PRODUCTDEFID =  #{PRODUCTDEFID}
			</if>	
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE =  #{PRODUCTIONTYPE}  
			</if>	
			<if test="CUSTOMERNAME != null and CUSTOMERNAME !=''">
				AND 	POL.CUSTOMERID =  #{CUSTOMERID}
			</if>	
			GROUP BY PO.PRODUCTDEFID
					<if test='INNERREVISIONTOTAL == "Y"'>
					,PO.PRODUCTDEFVERSION
					,POL.ORGPRODUCTDEFVERSION
					</if>	
					,PD.PRODUCTDEFNAME
					,PD.PRODUCTIONTYPE
					,POL.CUSTOMERID
					,C.CUSTOMERNAME
					,PT.MEANING
					,PTN.DICTIONARYNAME
					,POL.LAYER
					,POL.PCSPNL
					,POL.PCSMM
					,RS.MEANING
					,RSN.DICTIONARYNAME
					,PS.PROCESSSEGMENTNAME
					,PSN.DICTIONARYNAME
					,PDN.DICTIONARYNAME						
					,POL.ORGPRODUCTDEFID
					
					--,POL.SEQUENCE
					,PDC.MEANING
			ORDER BY POL.ORGPRODUCTDEFID
					<if test='INNERREVISIONTOTAL == "Y"'>
					,POL.ORGPRODUCTDEFVERSION
					</if>	
					--,POL.SEQUENCE
	</select>
	<select id="selectNotInputListBySalseOrder" parameterType="map" resultType="hashmap">
	/* "SelectNotInputListBySalseOrder" 10001 */
	--id : selectNotInputListBySalseOrder
			WITH PRODUCT_SO_LIST AS
			(				
				SELECT
						SO.SALESORDERID PRODUCTIONORDERID
					,	SO.LINENO
					,   CASE WHEN COALESCE(SO.ISAPPROVAL,' ') =' ' THEN 'N'
					         ELSE 'Y'   
					         END ISAPPROVAL
					,	SO.ENTERPRISEID
					,	SO.PLANTID
					,	SO.PRODUCTDEFID			AS ORGPRODUCTDEFID
					,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION
					         ELSE SO.CHANGECODEVERSION
					         END ORGPRODUCTDEFVERSION
					,	SO.PRODUCTDEFID
					,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION
					         ELSE SO.CHANGECODEVERSION
					         END  PRODUCTDEFVERSION
					,	SO.CUSTOMERID
					--,	SO.UNITPRICE * COALESCE(ME.EXCHANGEVALUE,1.0) SALESPRICE
					,	NVL(PCM_EXCHANGE_FN(SO.PLANTID , SYSDATE , UP.CURRENCY_CODE, 1 * UP.UNITPRICE),0) AS SALESPRICE
					,	SO.ORDERQTY - COALESCE(PO.SURPLUSWIP,0) - COALESCE(PO.SURPLUSSTOCK,0) PLANQTY
					,	PD.LAYER
					,	PD.PCSPNL
					,	PD.PCSMM
					,	0						AS SEQUENCE
				FROM	BAS_SALEORDERAPPROVAL		SO
				LEFT JOIN MFM_PRODUCTIONORDER PO ON  SO.SALESORDERID = PO.PRODUCTIONORDERID
				                                AND SO.LINENO = PO.LINENO
				                                AND SO.ENTERPRISEID = PO.ENTERPRISEID
				                                AND SO.PLANTID = PO.PLANTID
				INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	SO.PRODUCTDEFID = PD.PRODUCTDEFID
													AND	((COALESCE(SO.CHANGECODEVERSION,' ') = ' ' AND SO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION) OR (COALESCE(SO.CHANGECODEVERSION,' ') <![CDATA[<>]]> ' ' AND SO.CHANGECODEVERSION = PD.PRODUCTDEFVERSION))
				LEFT JOIN BAS_UNITPRICEFORMES    UP ON UP.PRODUCTDEFID = PO.PRODUCTDEFID 
												   	AND UP.PRODUCTDEFVERSION = PO.PRODUCTDEFVERSION 
												   	AND SYSDATE  BETWEEN APPLY_START_DATE 
								   					AND NVL(UP.APPLY_END_DATE,TO_TIMESTAMP('9999-12-31 23:59:59','yyyy-MM-dd HH24:MI:SS'))																									

				WHERE	1 = 1
				AND		COALESCE(PO.ISSPLIT, ' ') != 'Y'
				/*
				UNION ALL
				SELECT
					    SO.SALESORDERID PRODUCTIONORDERID
					,	SO.LINENO
					,   CASE WHEN COALESCE(SO.ISAPPROVAL,' ') =' ' THEN 'N'
					         ELSE 'Y'   
					         END ISAPPROVAL
					,	SO.ENTERPRISEID
					,	SO.PLANTID
					,	SO.PRODUCTDEFID			AS ORGPRODUCTDEFID
					,	SO.PRODUCTDEFVERSION	AS ORGPRODUCTDEFVERSION
					,	BOM.MATERIALDEFID		AS PRODUCTDEFID
					,	BOM.MATERIALDEFVERSION	AS PRODUCTDEFVERSION
					,	SO.CUSTOMERID
					,	SO.UNITPRICE * COALESCE(ME.EXCHANGEVALUE,1.0) SALESPRICE
					,	SO.ORDERQTY - COALESCE(PO.SURPLUSWIP,0) - COALESCE(PO.SURPLUSSTOCK,0) PLANQTY
					,	PD.LAYER
					,	PD.PCSPNL
					,	PD.PCSMM
					,	BOM.SEQUENCE
				FROM	MM_SALEORDERAPPROVAL		SO
				LEFT JOIN SF_PRODUCTIONORDER PO ON  SO.SALESORDERID = PO.PRODUCTIONORDERID
				                                AND SO.LINENO = PO.LINENO
				                                AND SO.ENTERPRISEID = PO.ENTERPRISEID
				                                AND SO.PLANTID = PO.PLANTID
				INNER JOIN SF_BILLOFMATERIAL	BOM	ON	PO.PRODUCTDEFID = BOM.PRODUCTDEFID
													AND	PO.PRODUCTDEFVERSION = BOM.PRODUCTDEFVERSION
													AND	BOM.MATERIALTYPE = 'Product'
				INNER JOIN SF_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
													AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
				LEFT  JOIN MM_EXCHANGE          ME  ON  TO_CHAR(CURRENT_TIMESTAMP,'YYYY-MM-01') = TO_CHAR(ME.EXCHANGEDATE,'YYYY-MM-DD')
				                                    AND SO.CURRENCY = ME.CURRENCYUNIT
				                                    AND ME.EXCHANGETYPE = 'Month'														
				WHERE	1 = 1
				AND		COALESCE(PO.ISSPLIT, '') != 'Y'
				*/
			), QTY AS
			(
				SELECT
						T.PRODUCTIONORDERID
					,	T.LINENO
					,   T.ISAPPROVAL
					,	T.ENTERPRISEID
					,	T.PLANTID
					,	T.PRODUCTDEFID
					,	T.PRODUCTDEFVERSION
					,	MAX(T.PLANQTY)						AS PLANQTY
					,	ROUND(MAX(T.PLANQTY / T.PCSPNL))	AS PLANPANELQTY
					,	COALESCE(SUM(T.CREATEDQTY), 0)		AS CREATEDQTY
					,	COALESCE(SUM(T.CREATEDPANELQTY), 0)	AS CREATEDPANELQTY
				FROM
				(
					SELECT
							PO.PRODUCTIONORDERID
						,	PO.LINENO
						,   PO.ISAPPROVAL
						,	PO.ENTERPRISEID
						,	PO.PLANTID
						,	PO.PRODUCTDEFID
						,	PO.PRODUCTDEFVERSION
						,	PO.PLANQTY
						,	PO.PCSPNL
						,	TO_NUMBER(CASE WHEN PD.PRODUCTDEFTYPE = 'Product' THEN L.CREATEDQTY
								 ELSE L.CREATEDQTY / L.PANELPERQTY * PO.PCSPNL
							END)					AS CREATEDQTY
						,	L.CREATEDQTY / L.PANELPERQTY	AS CREATEDPANELQTY
					FROM	PRODUCT_SO_LIST			PO
					LEFT OUTER JOIN PCM_LOT			L	ON	PO.PRODUCTIONORDERID = L.PRODUCTIONORDERID
														AND	PO.LINENO = L.LINENO
														AND	PO.PRODUCTDEFID = L.PRODUCTDEFID
														AND	PO.PRODUCTDEFVERSION = L.PRODUCTDEFVERSION
														AND	L.ROOTLOTID = L.PARENTLOTID
														AND	L.LOTCREATEDTYPE = 'Normal'
														AND	L.LOTSTATE != 'Created'
														AND L.ISOEM = 'N'
					INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
														AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
					WHERE	1 = 1
				)	T
				GROUP BY 
				         T.PRODUCTIONORDERID
						,T.LINENO
						,T.ISAPPROVAL
						,T.ENTERPRISEID
						,T.PLANTID
						,T.PRODUCTDEFID
						,T.PRODUCTDEFVERSION
			)
			SELECT  PO.PRODUCTIONORDERID 
			<if test='INNERREVISIONTOTAL == "Y"'>
			    ,	PO.LINENO 
			    ,	PO.PRODUCTDEFVERSION
		    </if>
			    ,   PO.ISAPPROVAL
				,	PO.PRODUCTDEFID
				,	PD.PRODUCTDEFNAME
				,	COALESCE(PDN.DICTIONARYNAME, PDC.MEANING)									AS PRODUCTIONTYPE
				,	POL.CUSTOMERID
				,	C.CUSTOMERNAME
				,	COALESCE(PTN.DICTIONARYNAME, PT.MEANING)									AS PRODUCTDEFTYPE
				,	POL.LAYER
				,	POL.PCSPNL
				,	POL.PCSMM
				,	SUM(PO.PLANQTY - PO.CREATEDQTY)												AS QTY
				,	SUM(PO.PLANPANELQTY - PO.CREATEDPANELQTY)									AS PANELQTY
				,	ROUND(SUM(((PO.PLANQTY - PO.CREATEDQTY) / POL.PCSMM)), 2)					AS M2
				--,	SUM((PO.PLANQTY - PO.CREATEDQTY) * POL.SALESPRICE / 100000000)				AS SALESPRICE
				,	ROUND(TO_NUMBER(SUM((PO.PLANQTY - PO.CREATEDQTY) * POL.SALESPRICE / 100000000)), 1)				AS SALESPRICE
				,	COALESCE(RSN.DICTIONARYNAME, RS.MEANING)									AS RTRSHT
				,	COALESCE(PSN.DICTIONARYNAME, PS.PROCESSSEGMENTNAME)							AS PROCESSSEGMENTNAME
				,	'Y'																							AS SALSEORDER		--수주배분여부 BAS_SALEORDERAPPROVAL 에서 조회되기때문에 수주배분 되어있어서 Y고정
			FROM	QTY						PO
			INNER JOIN PRODUCT_SO_LIST		POL	ON	PO.PRODUCTIONORDERID = POL.PRODUCTIONORDERID
												AND	PO.LINENO = POL.LINENO
												AND	PO.ENTERPRISEID = POL.ENTERPRISEID
												AND	PO.PLANTID = POL.PLANTID
												AND	PO.PRODUCTDEFID = POL.PRODUCTDEFID
												AND	PO.PRODUCTDEFVERSION = POL.PRODUCTDEFVERSION
			INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
												AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
			LEFT OUTER JOIN BAS_CUSTOMER		C	ON	POL.CUSTOMERID = C.CUSTOMERID
			INNER JOIN CMD_LOOKUP_VALUES	PT	ON	PD.PRODUCTDEFTYPE = PT.LOOKUP_CODE
												AND	PT.LOOKUP_TYPE = 'ProductDefType'
			LEFT OUTER JOIN CMD_DICTIONARY	PTN	ON	PT.DICTIONARYID = PTN.DICTIONARYID
												AND	PTN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			INNER JOIN CMD_LOOKUP_VALUES	RS	ON	PD.RTRSHT = RS.LOOKUP_CODE
												AND	RS.LOOKUP_TYPE = 'RTRSHT'
			LEFT OUTER JOIN CMD_DICTIONARY	RSN	ON	RS.DICTIONARYID = RSN.DICTIONARYID
												AND	RSN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			INNER JOIN BAS_PROCESSPATH		PP	ON	PD.PROCESSDEFID = PP.PROCESSDEFID
												AND	PD.PROCESSDEFVERSION = PP.PROCESSDEFVERSION
												--AND	PP.PATHSEQUENCE = 1
												AND	PP.PATHTYPE IN ('Start', 'StartEnd')
			INNER JOIN BAS_PROCESSSEGMENT	PS	ON	PP.PROCESSSEGMENTID = PS.PROCESSSEGMENTID
												AND	PP.PROCESSSEGMENTVERSION = PS.PROCESSSEGMENTVERSION
			LEFT OUTER JOIN CMD_DICTIONARY	PSN	ON	PS.PROCESSSEGMENTNAME = PSN.DICTIONARYID
												AND	PSN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			LEFT OUTER JOIN CMD_LOOKUP_VALUES	PDC	ON	PDC.LOOKUP_CODE = PD.PRODUCTIONTYPE
												AND	PDC.LOOKUP_TYPE = 'ProductionType'
			LEFT OUTER JOIN CMD_DICTIONARY	PDN	ON	PDC.MEANING = PDN.DICTIONARYID
												AND	PDN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			WHERE	1 = 1
			AND		PO.PLANQTY > PO.CREATEDQTY
			AND     PD.PRODUCTDEFTYPE = 'Product'
			<if test="PLANTID != null and PLANTID !=''">
				AND 	PO.PLANTID =  #{PLANTID}
			</if>
			<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
				AND 	PD.PRODUCTDEFVERSION =  #{PRODUCTDEFVERSION}
			</if>
			<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
				AND 	PO.PRODUCTDEFID =  #{PRODUCTDEFID}
			</if>	
			<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
				AND 	PD.PRODUCTIONTYPE =  #{PRODUCTIONTYPE}  
			</if>		
			<if test="CUSTOMERNAME != null and CUSTOMERNAME !=''">
				AND 	POL.CUSTOMERID =  #{CUSTOMERID}
			</if>			
			GROUP BY PO.PRODUCTIONORDERID 
					<if test='INNERREVISIONTOTAL == "Y"'>
			        ,PO.LINENO
			        ,POL.ORGPRODUCTDEFVERSION
			        </if>
			        ,PO.ISAPPROVAL
			        ,PO.PRODUCTDEFID
					,PO.PRODUCTDEFVERSION
					,PD.PRODUCTDEFNAME
					,POL.CUSTOMERID
					,C.CUSTOMERNAME
					,PT.MEANING
					,PTN.DICTIONARYNAME
					,PDC.MEANING
					,PDN.DICTIONARYNAME						
					,POL.LAYER
					,POL.PCSPNL
					,POL.PCSMM
					,RS.MEANING
					,RSN.DICTIONARYNAME
					,PS.PROCESSSEGMENTNAME
					,PSN.DICTIONARYNAME
					,POL.ORGPRODUCTDEFID
					
					,POL.SEQUENCE
			ORDER BY POL.ORGPRODUCTDEFID
					<if test='INNERREVISIONTOTAL == "Y"'>
					,POL.ORGPRODUCTDEFVERSION
					 </if>
					,POL.SEQUENCE
	</select>
	<select id="selectNotInputMaterialRequirementByMainBase" parameterType="map" resultType="hashmap">
	/* "SelectNotInputMaterialRequirementByMainBase" 10001 */
	--id : selectNotInputMaterialRequirementByMainBase
		WITH PRODUCT_SO_LIST AS
				(
					SELECT
							SO.SALESORDERID PRODUCTIONORDERID
						,	SO.LINENO
						,	SO.ENTERPRISEID
						,	SO.PLANTID
						,	SO.PRODUCTDEFID			AS ORGPRODUCTDEFID
						,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION
						         ELSE SO.CHANGECODEVERSION
						         END ORGPRODUCTDEFVERSION
						,	SO.PRODUCTDEFID
						,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION
						         ELSE SO.CHANGECODEVERSION
						         END  PRODUCTDEFVERSION
						,	SO.CUSTOMERID
						--,	SO.UNITPRICE * COALESCE(ME.EXCHANGEVALUE,1.0) SALESPRICE
						,	NVL(PCM_EXCHANGE_FN(SO.PLANTID , SYSDATE , UP.CURRENCY_CODE, 1 * UP.UNITPRICE),0) AS SALESPRICE
						,	SO.ORDERQTY - COALESCE(PO.SURPLUSWIP,0) - COALESCE(PO.SURPLUSSTOCK,0) PLANQTY
						,	PD.LAYER
						,	PD.PCSPNL
						,	PD.PCSMM
						,	0						AS SEQUENCE
					FROM	BAS_SALEORDERAPPROVAL		SO
					LEFT JOIN MFM_PRODUCTIONORDER PO ON  SO.SALESORDERID = PO.PRODUCTIONORDERID
					                                AND SO.LINENO = PO.LINENO
					                                AND SO.ENTERPRISEID = PO.ENTERPRISEID
					                                AND SO.PLANTID = PO.PLANTID
					INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	SO.PRODUCTDEFID = PD.PRODUCTDEFID
														AND	((COALESCE(SO.CHANGECODEVERSION,' ') = ' ' AND SO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION) OR (COALESCE(SO.CHANGECODEVERSION,' ') <![CDATA[<>]]>' ' AND SO.CHANGECODEVERSION = PD.PRODUCTDEFVERSION))
					LEFT JOIN BAS_UNITPRICEFORMES    UP ON UP.PRODUCTDEFID = PO.PRODUCTDEFID 
												   		AND UP.PRODUCTDEFVERSION = PO.PRODUCTDEFVERSION 
												   		AND SYSDATE  BETWEEN APPLY_START_DATE 
									   					AND NVL(UP.APPLY_END_DATE,TO_TIMESTAMP('9999-12-31 23:59:59','yyyy-MM-dd HH24:MI:SS'))	
					--LEFT  JOIN MM_EXCHANGE          ME  ON  TO_CHAR(SO.SALESORDERDATE,'YYYY-MM-01') = TO_CHAR(ME.EXCHANGEDATE,'YYYY-MM-DD')
					--                                    AND SO.CURRENCY = ME.CURRENCYUNIT
					--                                    AND ME.EXCHANGETYPE = 'Month'
					WHERE	1 = 1
					AND		COALESCE(PO.ISSPLIT, ' ') <![CDATA[<>]]> 'Y'
					/*
					UNION ALL
					SELECT
						    SO.SALESORDERID PRODUCTIONORDERID
						,	SO.LINENO
						,	SO.ENTERPRISEID
						,	SO.PLANTID
						,	SO.PRODUCTDEFID			AS ORGPRODUCTDEFID
						,	SO.PRODUCTDEFVERSION	AS ORGPRODUCTDEFVERSION
						,	BOM.MATERIALDEFID		AS PRODUCTDEFID
						,	BOM.MATERIALDEFVERSION	AS PRODUCTDEFVERSION
						,	SO.CUSTOMERID
						,	SO.UNITPRICE * COALESCE(ME.EXCHANGEVALUE,1.0) SALESPRICE
						,	SO.ORDERQTY - COALESCE(PO.SURPLUSWIP,0) - COALESCE(PO.SURPLUSSTOCK,0) PLANQTY
						,	PD.LAYER
						,	PD.PCSPNL
						,	PD.PCSMM
						,	BOM.SEQUENCE
					FROM	MM_SALEORDERAPPROVAL		SO
					LEFT JOIN SF_PRODUCTIONORDER PO ON  SO.SALESORDERID = PO.PRODUCTIONORDERID
					                                AND SO.LINENO = PO.LINENO
					                                AND SO.ENTERPRISEID = PO.ENTERPRISEID
					                                AND SO.PLANTID = PO.PLANTID
					INNER JOIN SF_BILLOFMATERIAL	BOM	ON	PO.PRODUCTDEFID = BOM.PRODUCTDEFID
														AND	PO.PRODUCTDEFVERSION = BOM.PRODUCTDEFVERSION
														AND	BOM.MATERIALTYPE = 'Product'
					INNER JOIN SF_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
														AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
					LEFT  JOIN MM_EXCHANGE          ME  ON  TO_CHAR(SO.SALESORDERDATE,'YYYY-MM-DD') = TO_CHAR(ME.EXCHANGEDATE,'YYYY-MM-DD')
					                                    AND SO.CURRENCY = ME.CURRENCYUNIT
					                                    AND ME.EXCHANGETYPE = 'Month'														
					WHERE	1 = 1
					AND		COALESCE(PO.ISSPLIT, '') != 'Y'
					*/
				), QTY AS
				(
					SELECT
							T.PRODUCTIONORDERID
						,	T.LINENO
						,	T.ENTERPRISEID
						,	T.PLANTID
						,	T.PRODUCTDEFID
						,	T.PRODUCTDEFVERSION
						,	MAX(T.PLANQTY)						AS PLANQTY
						,	ROUND(MAX(T.PLANQTY / T.PCSPNL))	AS PLANPANELQTY
						,	COALESCE(SUM(T.CREATEDQTY), 0)		AS CREATEDQTY
						,	COALESCE(SUM(T.CREATEDPANELQTY), 0)	AS CREATEDPANELQTY
					FROM
					(
						SELECT
								PO.PRODUCTIONORDERID
							,	PO.LINENO
							,	PO.ENTERPRISEID
							,	PO.PLANTID
							,	PO.PRODUCTDEFID
							,	PO.PRODUCTDEFVERSION
							,	PO.PLANQTY
							,	PO.PCSPNL
							,	TO_NUMBER(CASE WHEN PD.PRODUCTDEFTYPE = 'Product' THEN L.CREATEDQTY
									 ELSE L.CREATEDQTY / L.PANELPERQTY * PO.PCSPNL
								END)			AS CREATEDQTY
							,	L.CREATEDQTY / L.PANELPERQTY	AS CREATEDPANELQTY
						FROM	PRODUCT_SO_LIST			PO
						LEFT OUTER JOIN PCM_LOT			L	ON	PO.PRODUCTIONORDERID = L.PRODUCTIONORDERID
															AND	PO.LINENO = L.LINENO
															AND	PO.PRODUCTDEFID = L.PRODUCTDEFID
															AND	PO.PRODUCTDEFVERSION = L.PRODUCTDEFVERSION
															AND	L.ROOTLOTID = L.PARENTLOTID
															AND	L.LOTCREATEDTYPE = 'Normal'
															AND	L.LOTSTATE != 'Created'
															AND L.ISOEM = 'N'
						INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
															AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
						WHERE	1 = 1
					)	T
					GROUP BY T.PRODUCTIONORDERID
							,T.LINENO
							,T.ENTERPRISEID
							,T.PLANTID
							,T.PRODUCTDEFID
							,T.PRODUCTDEFVERSION
				),	BILLOFMATERIAL AS
				(
					SELECT *
					FROM
					(
						SELECT	
								BOM.ENTERPRISEID
							,	BOM.PLANTID
							,	BOM.PRODUCTDEFID
							,	BOM.PRODUCTDEFVERSION
							,	BOM.PROCESSDEFID
							,	BOM.PROCESSDEFVERSION
							,	BOM.MATERIALDEFID
							,	BOM.MATERIALDEFVERSION
							,	BOM.QTY
						    ,   ROW_NUMBER () OVER(PARTITION  BY BOM.PRODUCTDEFID,BOM.PRODUCTDEFVERSION ,BOM.PROCESSDEFID ,BOM.PROCESSDEFVERSION ,BOM.PROCESSSEGMENTID 
											        ORDER BY CASE WHEN COALESCE(BOM.ISREQUIRED ,'N')	= 'Y' THEN 10
											        ELSE BOM."sequence"  END
						                           )RN	     							
						FROM	QTY							PO
						INNER JOIN BAS_PROCESSPATH			PP	ON	PO.PRODUCTDEFID = PP.PROCESSDEFID
																AND	PO.PRODUCTDEFVERSION = PP.PROCESSDEFVERSION
																AND	PP.PATHTYPE LIKE 'Start%'
						INNER JOIN BAS_BILLOFMATERIAL		BOM	ON	PO.ENTERPRISEID = BOM.ENTERPRISEID
																AND	PO.PLANTID = BOM.PLANTID
																AND	PO.PRODUCTDEFID = BOM.PRODUCTDEFID
																AND	PO.PRODUCTDEFVERSION = BOM.PRODUCTDEFVERSION
																AND	PP.PROCESSDEFID = BOM.PROCESSDEFID
																AND	PP.PROCESSDEFVERSION = BOM.PROCESSDEFVERSION
																AND	PP.PROCESSSEGMENTID = BOM.PROCESSSEGMENTID
																AND	BOM.MATERIALTYPE = 'Consumable'
															--	AND	COALESCE(BOM.ISREQUIRED, 'N') = 'Y'
						INNER JOIN BAS_CONSUMABLEDEFINITION	CD	ON	BOM.MATERIALDEFID = CD.CONSUMABLEDEFID
																AND	BOM.MATERIALDEFVERSION = CD.CONSUMABLEDEFVERSION
																AND	CD.CONSUMABLECLASSID = 'RawMaterial'
					)X
					WHERE RN=1
				)
				SELECT
						PO.PRODUCTDEFID || '|' || PO.PRODUCTDEFVERSION	AS KEYCOLUMN
					,	PO.PRODUCTDEFID
					,	PO.PRODUCTDEFVERSION
					,	PD.PRODUCTDEFNAME
					,	BOM.MATERIALDEFID								AS CONSUMABLEDEFID
					,	BOM.MATERIALDEFVERSION							AS CONSUMABLEDEFVERSION
					,	CD.CONSUMABLEDEFNAME
					,	SUM(PO.PLANQTY - PO.CREATEDQTY)					AS NOTINPUTPCSQTY
					,	SUM(PO.PLANPANELQTY - PO.CREATEDPANELQTY)		AS NOTINPUTPNLQTY
					,	SUM((PO.PLANQTY - PO.CREATEDQTY) * BOM.QTY)		AS MATERIALREQUIREMENTQTY
					,	''												AS CONSUMABLEDEFIDDETAIL
					,	''												AS CONSUMABLEDEFVERSIONDETAIL
					,	''												AS CONSUMABLEDEFNAMEDETAIL
					,	''												AS QTY
				FROM	QTY							PO
				INNER JOIN PRODUCT_SO_LIST			POL	ON	PO.PRODUCTIONORDERID = POL.PRODUCTIONORDERID
														AND	PO.LINENO = POL.LINENO
														AND	PO.ENTERPRISEID = POL.ENTERPRISEID
														AND	PO.PLANTID = POL.PLANTID
														AND	PO.PRODUCTDEFID = POL.PRODUCTDEFID
														AND	PO.PRODUCTDEFVERSION = POL.PRODUCTDEFVERSION
				INNER JOIN BAS_PRODUCTDEFINITION		PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
														AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
				INNER JOIN BILLOFMATERIAL			BOM	ON	PO.ENTERPRISEID = BOM.ENTERPRISEID
														AND	PO.PLANTID = BOM.PLANTID
														AND	PO.PRODUCTDEFID = BOM.PRODUCTDEFID
														AND	PO.PRODUCTDEFVERSION = BOM.PRODUCTDEFVERSION
				INNER JOIN BAS_CONSUMABLEDEFINITION	CD	ON	BOM.MATERIALDEFID = CD.CONSUMABLEDEFID
														AND	BOM.MATERIALDEFVERSION = CD.CONSUMABLEDEFVERSION
				WHERE	1 = 1
				AND		PO.PLANQTY > PO.CREATEDQTY
				AND		PD.PRODUCTDEFTYPE = 'Product'
				<if test="PLANTID != null and PLANTID !=''">
				AND 	PO.PLANTID =  #{PLANTID}
				</if>
				<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
					AND 	PD.PRODUCTDEFVERSION =  #{PRODUCTDEFVERSION}
				</if>
				<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
					AND 	PO.PRODUCTDEFID =  #{PRODUCTDEFID}
				</if>	
				<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
					AND 	PD.PRODUCTIONTYPE =  #{PRODUCTIONTYPE}  
				</if>		
				<if test="CUSTOMERNAME != null and CUSTOMERNAME !=''">
					AND 	POL.CUSTOMERID =  #{CUSTOMERID}
				</if>					
				GROUP BY PO.PRODUCTDEFID
						,PO.PRODUCTDEFVERSION
						,PD.PRODUCTDEFNAME
						,BOM.MATERIALDEFID
						,BOM.MATERIALDEFVERSION
						,CD.CONSUMABLEDEFNAME
						,POL.ORGPRODUCTDEFID
						,POL.ORGPRODUCTDEFVERSION
						,POL.SEQUENCE
				ORDER BY POL.ORGPRODUCTDEFID
						,POL.ORGPRODUCTDEFVERSION
						,POL.SEQUENCE
	</select>
	<select id="selectNotInputMaterialRequirementByConsumable" parameterType="map" resultType="hashmap">
	/* "SelectNotInputMaterialRequirementByConsumable" 10002 */
	--id : selectNotInputMaterialRequirementByConsumable
		WITH PRODUCT_SO_LIST AS
				(
					SELECT
							SO.SALESORDERID 		AS PRODUCTIONORDERID
						,	SO.LINENO
						,	SO.ENTERPRISEID
						,	SO.PLANTID
						,	SO.PRODUCTDEFID			AS ORGPRODUCTDEFID
						,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION
						         ELSE SO.CHANGECODEVERSION
						         END 				AS ORGPRODUCTDEFVERSION
						,	SO.PRODUCTDEFID
						,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION
						         ELSE SO.CHANGECODEVERSION
						         END  				AS PRODUCTDEFVERSION
						,	SO.CUSTOMERID
						--,	SO.UNITPRICE * COALESCE(ME.EXCHANGEVALUE,1.0) 							AS SALESPRICE
						,	NVL(PCM_EXCHANGE_FN(SO.PLANTID , SYSDATE , UP.CURRENCY_CODE, 1 * UP.UNITPRICE),0) AS SALESPRICE
						,	SO.ORDERQTY - COALESCE(PO.SURPLUSWIP,0) - COALESCE(PO.SURPLUSSTOCK,0) 	AS PLANQTY
						,	PD.LAYER
						,	PD.PCSPNL
						,	PD.PCSMM
						,	0						AS SEQUENCE
					FROM		BAS_SALEORDERAPPROVAL	SO
					LEFT JOIN 	MFM_PRODUCTIONORDER 		PO 	ON  SO.SALESORDERID = PO.PRODUCTIONORDERID
					                                		AND SO.LINENO = PO.LINENO
					                                		AND SO.ENTERPRISEID = PO.ENTERPRISEID
					                                		AND SO.PLANTID = PO.PLANTID
					INNER JOIN 	BAS_PRODUCTDEFINITION	PD	ON	SO.PRODUCTDEFID = PD.PRODUCTDEFID
															AND	((COALESCE(SO.CHANGECODEVERSION, ' ') = ' ' AND SO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION) 
																	OR (COALESCE(SO.CHANGECODEVERSION, ' ') <![CDATA[<>]]> ' ' AND SO.CHANGECODEVERSION = PD.PRODUCTDEFVERSION))
					LEFT JOIN BAS_UNITPRICEFORMES    UP ON UP.PRODUCTDEFID = PO.PRODUCTDEFID 
												   		AND UP.PRODUCTDEFVERSION = PO.PRODUCTDEFVERSION 
												   		AND SYSDATE  BETWEEN APPLY_START_DATE 
									   					AND NVL(UP.APPLY_END_DATE,TO_TIMESTAMP('9999-12-31 23:59:59','yyyy-MM-dd HH24:MI:SS'))	
					--LEFT  JOIN 	MM_EXCHANGE          	ME  ON  TO_CHAR(SO.SALESORDERDATE, 'YYYY-MM-01') = TO_CHAR(ME.EXCHANGEDATE,'YYYY-MM-DD')
					--										AND SO.CURRENCY = ME.CURRENCYUNIT
					--										AND ME.EXCHANGETYPE = 'Month'
					WHERE	1 = 1
					AND		COALESCE(PO.ISSPLIT, ' ') != 'Y'
					
					<if test="CUSTOMERNAME != null and CUSTOMERNAME !=''">
						AND 	SO.CUSTOMERID =  #{CUSTOMERID}
					</if>	
				), QTY AS
				(
					SELECT
							T.PRODUCTIONORDERID
						,	T.LINENO
						,	T.ENTERPRISEID
						,	T.PLANTID
						,	T.PRODUCTDEFID
						,	T.PRODUCTDEFVERSION
						,	MAX(T.PLANQTY)						AS PLANQTY
						,	ROUND(MAX(T.PLANQTY / T.PCSPNL))	AS PLANPANELQTY
						,	COALESCE(SUM(T.CREATEDQTY), 0)		AS CREATEDQTY
						,	COALESCE(SUM(T.CREATEDPANELQTY), 0)	AS CREATEDPANELQTY
					FROM
					(
						SELECT
								PO.PRODUCTIONORDERID
							,	PO.LINENO
							,	PO.ENTERPRISEID
							,	PO.PLANTID
							,	PO.PRODUCTDEFID
							,	PO.PRODUCTDEFVERSION
							,	PO.PLANQTY
							,	PO.PCSPNL
							,	TO_NUMBER(CASE WHEN PD.PRODUCTDEFTYPE = 'Product' THEN L.CREATEDQTY
									 ELSE L.CREATEDQTY / L.PANELPERQTY * PO.PCSPNL
									END)				AS CREATEDQTY
							,	L.CREATEDQTY / L.PANELPERQTY	AS CREATEDPANELQTY
						FROM			PRODUCT_SO_LIST	PO
						LEFT OUTER JOIN PCM_LOT			L	ON	PO.PRODUCTIONORDERID = L.PRODUCTIONORDERID
															AND	PO.LINENO = L.LINENO
															AND	PO.PRODUCTDEFID = L.PRODUCTDEFID
															AND	PO.PRODUCTDEFVERSION = L.PRODUCTDEFVERSION
															AND	L.ROOTLOTID = L.PARENTLOTID
															AND	L.LOTCREATEDTYPE = 'Normal'
															AND	L.LOTSTATE != 'Created'
						INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
															AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
						WHERE	1 = 1
					)	T
					GROUP BY 	T.PRODUCTIONORDERID
							,	T.LINENO
							,	T.ENTERPRISEID
							,	T.PLANTID
							,	T.PRODUCTDEFID
							,	T.PRODUCTDEFVERSION
				), BILLOFMATERIAL_PRODUCT(PRODUCTIONORDERID, LINENO, ENTERPRISEID, PLANTID, POPRODUCTDEFID
				, POPRODUCTDEFVERSION, PARENTPRODUCTDEFID, PARENTPRODUCTDEFVERSION, PLANQTY, PLANPANELQTY, CREATEDQTY, CREATEDPANELQTY
				, PRODUCTDEFID, PRODUCTDEFVERSION, MATERIALQTY) AS
				(
					select
							PO.PRODUCTIONORDERID
						,	PO.LINENO
						,	PO.ENTERPRISEID
						,	PO.PLANTID
						,	PO.PRODUCTDEFID					AS	POPRODUCTDEFID
						,	PO.PRODUCTDEFVERSION			AS	POPRODUCTDEFVERSION
						,	PO.PRODUCTDEFID					AS	PARENTPRODUCTDEFID
						,	PO.PRODUCTDEFVERSION			AS	PARENTPRODUCTDEFVERSION
						,	PO.PLANQTY
						,	PO.PLANPANELQTY
						,	PO.CREATEDQTY
						,	PO.CREATEDPANELQTY
						,	PO.PRODUCTDEFID
						,	PO.PRODUCTDEFVERSION
						,	(PO.PLANQTY - PO.CREATEDQTY) 	AS MATERIALQTY
					FROM	QTY						PO
					
					UNION ALL
					
					SELECT
							PRD.PRODUCTIONORDERID
						,	PRD.LINENO
						,	PRD.ENTERPRISEID
						,	PRD.PLANTID
						,	PRD.POPRODUCTDEFID
						,	PRD.POPRODUCTDEFVERSION
						,	PRD.PRODUCTDEFID				AS	PARENTPRODUCTDEFID
						,	PRD.PRODUCTDEFVERSION			AS	PARENTPRODUCTDEFVERSION
						,	PRD.PLANQTY
						,	PRD.PLANPANELQTY
						,	PRD.CREATEDQTY
						,	PRD.CREATEDPANELQTY
						,	BOM.MATERIALDEFID				AS PRODUCTDEFID
						,	BOM.MATERIALDEFVERSION			AS PRODUCTDEFVERSION
						,	PRD.MATERIALQTY * bom.QTY		AS MATERIALQTY
					FROM	BILLOFMATERIAL_PRODUCT	PRD
					INNER JOIN BAS_BILLOFMATERIAL	BOM	ON	BOM.ENTERPRISEID = PRD.ENTERPRISEID
														AND	BOM.PLANTID = PRD.PLANTID
														AND BOM.PRODUCTDEFID = PRD.PRODUCTDEFID
														AND BOM.PRODUCTDEFVERSION = PRD.PRODUCTDEFVERSION
														AND	BOM.PROCESSDEFID = PRD.PRODUCTDEFID
														AND BOM.PROCESSDEFVERSION = PRD.PRODUCTDEFVERSION
														AND BOM.MATERIALTYPE = 'Product'
				),	BILLOFMATERIAL AS
				(				
					SELECT
							PRD.POPRODUCTDEFID
						,	PRD.POPRODUCTDEFVERSION
						,	BOM.ENTERPRISEID
						,	BOM.PLANTID
						,	BOM.MATERIALDEFID
						,	BOM.MATERIALDEFVERSION
						,	SUM(PRD.MATERIALQTY  * BOM.QTY) AS MATERIALQTY
					FROM	BILLOFMATERIAL_PRODUCT	PRD
					INNER JOIN BAS_BILLOFMATERIAL	BOM	ON	PRD.ENTERPRISEID = BOM.ENTERPRISEID
														AND	PRD.PLANTID = BOM.PLANTID
														AND	PRD.PRODUCTDEFID = BOM.PRODUCTDEFID
														AND	PRD.PRODUCTDEFVERSION = BOM.PRODUCTDEFVERSION
														AND	PRD.PRODUCTDEFID = BOM.PROCESSDEFID
														AND	PRD.PRODUCTDEFVERSION = BOM.PROCESSDEFVERSION
														AND	BOM.MATERIALTYPE = 'Consumable'
					WHERE	PRD.PLANQTY > PRD.CREATEDQTY
					GROUP BY
							PRD.POPRODUCTDEFID
						,	PRD.POPRODUCTDEFVERSION
						,	BOM.MATERIALDEFID
						,	BOM.MATERIALDEFVERSION
						,	BOM.ENTERPRISEID
						,	BOM.PLANTID
				)
				SELECT
						BOM.POPRODUCTDEFID || '|' || BOM.POPRODUCTDEFVERSION	AS KEYCOLUMN
					,	BOM.POPRODUCTDEFID										AS PRODUCTDEFID
					,	BOM.POPRODUCTDEFVERSION									AS PRODUCTDEFVERSION
					,	BOM.MATERIALDEFID										AS CONSUMABLEDEFID
					,	BOM.MATERIALDEFVERSION									AS CONSUMABLEDEFVERSION
					,	CD.CONSUMABLEDEFNAME
					,	BOM.MATERIALQTY											AS QTY
				FROM		BILLOFMATERIAL				BOM
				INNER JOIN 	BAS_PRODUCTDEFINITION		PD	ON	BOM.POPRODUCTDEFID = PD.PRODUCTDEFID
															AND	BOM.POPRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
				LEFT OUTER JOIN BAS_CONSUMABLEDEFINITION	CD	ON	BOM.MATERIALDEFID = CD.CONSUMABLEDEFID
															AND	BOM.MATERIALDEFVERSION = CD.CONSUMABLEDEFVERSION
				WHERE	1 = 1
				AND		EXISTS
						(
							SELECT	1
							FROM	UFN_SELECTSTRINGTOSPLIT3(#{PRODUCTLIST}, ',', '|')	T
							WHERE	BOM.POPRODUCTDEFID = T.VALUE
							AND		BOM.POPRODUCTDEFVERSION = T.VALUE2
							AND		BOM.MATERIALDEFID != T.VALUE3
						)
				<if test="PLANTID != null and PLANTID !=''">
					AND 	BOM.PLANTID =  #{PLANTID}
				</if>
				<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
					AND 	PD.PRODUCTDEFVERSION =  #{PRODUCTDEFVERSION}
				</if>			
				<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
					AND		bom.POPRODUCTDEFID = #{PRODUCTDEFID}
				</if>				
				<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
					AND 	PD.PRODUCTIONTYPE =  #{PRODUCTIONTYPE}  
				</if>	
				ORDER BY	
						BOM.POPRODUCTDEFID
					,	BOM.POPRODUCTDEFVERSION
					,	BOM.MATERIALDEFID
					,	BOM.MATERIALDEFVERSION
	</select>
	<select id="selectNotInputMaterialRequirementByConsumableTotalList" parameterType="map" resultType="hashmap">
	--id : selectNotInputMaterialRequirementByConsumableTotalList
		WITH PRODUCT_SO_LIST AS
				(
					SELECT
							SO.SALESORDERID PRODUCTIONORDERID
						,	SO.LINENO
						,	SO.ENTERPRISEID
						,	SO.PLANTID
						,	SO.PRODUCTDEFID			AS ORGPRODUCTDEFID
						,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION
						         ELSE SO.CHANGECODEVERSION
						         END ORGPRODUCTDEFVERSION
						,	SO.PRODUCTDEFID
						,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION
						         ELSE SO.CHANGECODEVERSION
						         END  PRODUCTDEFVERSION
						,	SO.CUSTOMERID
						--,	SO.UNITPRICE * COALESCE(ME.EXCHANGEVALUE,1.0) SALESPRICE
						,	NVL(PCM_EXCHANGE_FN(SO.PLANTID , SYSDATE , UP.CURRENCY_CODE, 1 * UP.UNITPRICE),0) AS SALESPRICE
						,	SO.ORDERQTY - COALESCE(PO.SURPLUSWIP,0) - COALESCE(PO.SURPLUSSTOCK,0) PLANQTY
						,	PD.LAYER
						,	PD.PCSPNL
						,	PD.PCSMM
						,	0						AS SEQUENCE
					FROM	BAS_SALEORDERAPPROVAL		SO
					LEFT JOIN MFM_PRODUCTIONORDER PO ON  SO.SALESORDERID = PO.PRODUCTIONORDERID
					                                AND SO.LINENO = PO.LINENO
					                                AND SO.ENTERPRISEID = PO.ENTERPRISEID
					                                AND SO.PLANTID = PO.PLANTID
					INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	SO.PRODUCTDEFID = PD.PRODUCTDEFID
														AND	((COALESCE(SO.CHANGECODEVERSION,' ') = ' ' AND SO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION) OR (COALESCE(SO.CHANGECODEVERSION,' ') <![CDATA[<>]]>' ' AND SO.CHANGECODEVERSION = PD.PRODUCTDEFVERSION))
					LEFT JOIN BAS_UNITPRICEFORMES    UP ON UP.PRODUCTDEFID = PO.PRODUCTDEFID 
												   		AND UP.PRODUCTDEFVERSION = PO.PRODUCTDEFVERSION 
												   		AND SYSDATE  BETWEEN APPLY_START_DATE 
									   					AND NVL(UP.APPLY_END_DATE,TO_TIMESTAMP('9999-12-31 23:59:59','yyyy-MM-dd HH24:MI:SS'))	
					--LEFT  JOIN MM_EXCHANGE          ME  ON  TO_CHAR(SO.SALESORDERDATE,'YYYY-MM-01') = TO_CHAR(ME.EXCHANGEDATE,'YYYY-MM-DD')
					--                                    AND SO.CURRENCY = ME.CURRENCYUNIT
					--                                    AND ME.EXCHANGETYPE = 'Month'
					WHERE	1 = 1
					AND		COALESCE(PO.ISSPLIT, ' ') <![CDATA[<>]]> 'Y'
					<if test="PLANTID != null and PLANTID !=''">
						AND 	SO.PLANTID =  #{PLANTID}
					</if>
					/*
					UNION ALL
					SELECT
						    SO.SALESORDERID PRODUCTIONORDERID
						,	SO.LINENO
						,	SO.ENTERPRISEID
						,	SO.PLANTID
						,	SO.PRODUCTDEFID			AS ORGPRODUCTDEFID
						,	SO.PRODUCTDEFVERSION	AS ORGPRODUCTDEFVERSION
						,	BOM.MATERIALDEFID		AS PRODUCTDEFID
						,	BOM.MATERIALDEFVERSION	AS PRODUCTDEFVERSION
						,	SO.CUSTOMERID
						,	SO.UNITPRICE * COALESCE(ME.EXCHANGEVALUE,1.0) SALESPRICE
						,	SO.ORDERQTY - COALESCE(PO.SURPLUSWIP,0) - COALESCE(PO.SURPLUSSTOCK,0) PLANQTY
						,	PD.LAYER
						,	PD.PCSPNL
						,	PD.PCSMM
						,	BOM.SEQUENCE
					FROM	MM_SALEORDERAPPROVAL		SO
					LEFT JOIN SF_PRODUCTIONORDER PO ON  SO.SALESORDERID = PO.PRODUCTIONORDERID
					                                AND SO.LINENO = PO.LINENO
					                                AND SO.ENTERPRISEID = PO.ENTERPRISEID
					                                AND SO.PLANTID = PO.PLANTID
					INNER JOIN SF_BILLOFMATERIAL	BOM	ON	PO.PRODUCTDEFID = BOM.PRODUCTDEFID
														AND	PO.PRODUCTDEFVERSION = BOM.PRODUCTDEFVERSION
														AND	BOM.MATERIALTYPE = 'Product'
					INNER JOIN SF_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
														AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
					LEFT  JOIN MM_EXCHANGE          ME  ON  TO_CHAR(SO.SALESORDERDATE,'YYYY-MM-DD') = TO_CHAR(ME.EXCHANGEDATE,'YYYY-MM-DD')
					                                    AND SO.CURRENCY = ME.CURRENCYUNIT
					                                    AND ME.EXCHANGETYPE = 'Month'														
					WHERE	1 = 1
					AND		COALESCE(PO.ISSPLIT, '') != 'Y'
					*/
				), QTY AS
				(
					SELECT
							T.PRODUCTIONORDERID
						,	T.LINENO
						,	T.ENTERPRISEID
						,	T.PLANTID
						,	T.PRODUCTDEFID
						,	T.PRODUCTDEFVERSION
						,	MAX(T.PLANQTY)						AS PLANQTY
						,	ROUND(MAX(T.PLANQTY / T.PCSPNL))	AS PLANPANELQTY
						,	COALESCE(SUM(T.CREATEDQTY), 0)		AS CREATEDQTY
						,	COALESCE(SUM(T.CREATEDPANELQTY), 0)	AS CREATEDPANELQTY
					FROM
					(
						SELECT
								PO.PRODUCTIONORDERID
							,	PO.LINENO
							,	PO.ENTERPRISEID
							,	PO.PLANTID
							,	PO.PRODUCTDEFID
							,	PO.PRODUCTDEFVERSION
							,	PO.PLANQTY
							,	PO.PCSPNL
							,	TO_NUMBER(CASE WHEN PD.PRODUCTDEFTYPE = 'Product' THEN L.CREATEDQTY
									 ELSE L.CREATEDQTY / L.PANELPERQTY * PO.PCSPNL
								END)			AS CREATEDQTY
							,	L.CREATEDQTY / L.PANELPERQTY	AS CREATEDPANELQTY
						FROM	PRODUCT_SO_LIST			PO
						LEFT OUTER JOIN PCM_LOT			L	ON	PO.PRODUCTIONORDERID = L.PRODUCTIONORDERID
															AND	PO.LINENO = L.LINENO
															AND	PO.PRODUCTDEFID = L.PRODUCTDEFID
															AND	PO.PRODUCTDEFVERSION = L.PRODUCTDEFVERSION
															AND	L.ROOTLOTID = L.PARENTLOTID
															AND	L.LOTCREATEDTYPE = 'Normal'
															AND	L.LOTSTATE != 'Created'
															AND L.ISOEM = 'N'
						INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
															AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
						WHERE	1 = 1
					)	T
					GROUP BY T.PRODUCTIONORDERID
							,T.LINENO
							,T.ENTERPRISEID
							,T.PLANTID
							,T.PRODUCTDEFID
							,T.PRODUCTDEFVERSION
				),	BILLOFMATERIAL AS
				(
					SELECT *
					FROM
					(
						SELECT	
								BOM.ENTERPRISEID
							,	BOM.PLANTID
							,	BOM.PRODUCTDEFID
							,	BOM.PRODUCTDEFVERSION
							,	BOM.PROCESSDEFID
							,	BOM.PROCESSDEFVERSION
							,	BOM.MATERIALDEFID
							,	BOM.MATERIALDEFVERSION
							,	BOM.QTY
						    ,   ROW_NUMBER () OVER(PARTITION  BY BOM.PRODUCTDEFID,BOM.PRODUCTDEFVERSION ,BOM.PROCESSDEFID ,BOM.PROCESSDEFVERSION ,BOM.PROCESSSEGMENTID 
											        ORDER BY CASE WHEN COALESCE(BOM.ISREQUIRED ,'N')	= 'Y' THEN 10
											        ELSE BOM."sequence"  END
						                           )RN	     							
						FROM	QTY							PO
						INNER JOIN BAS_PROCESSPATH			PP	ON	PO.PRODUCTDEFID = PP.PROCESSDEFID
																AND	PO.PRODUCTDEFVERSION = PP.PROCESSDEFVERSION
																AND	PP.PATHTYPE LIKE 'Start%'
						INNER JOIN BAS_BILLOFMATERIAL		BOM	ON	PO.ENTERPRISEID = BOM.ENTERPRISEID
																AND	PO.PLANTID = BOM.PLANTID
																AND	PO.PRODUCTDEFID = BOM.PRODUCTDEFID
																AND	PO.PRODUCTDEFVERSION = BOM.PRODUCTDEFVERSION
																AND	PP.PROCESSDEFID = BOM.PROCESSDEFID
																AND	PP.PROCESSDEFVERSION = BOM.PROCESSDEFVERSION
																AND	PP.PROCESSSEGMENTID = BOM.PROCESSSEGMENTID
																AND	BOM.MATERIALTYPE = 'Consumable'
															--	AND	COALESCE(BOM.ISREQUIRED, 'N') = 'Y'
						INNER JOIN BAS_CONSUMABLEDEFINITION	CD	ON	BOM.MATERIALDEFID = CD.CONSUMABLEDEFID
																AND	BOM.MATERIALDEFVERSION = CD.CONSUMABLEDEFVERSION
																AND	CD.CONSUMABLECLASSID = 'RawMaterial'
					)X
					WHERE RN=1
				)
				, MASTER AS 
				(
				SELECT
						PO.PRODUCTDEFID || '|' || PO.PRODUCTDEFVERSION	AS KEYCOLUMN
					,	PO.PRODUCTDEFID
					,	PO.PRODUCTDEFVERSION
					,	PD.PRODUCTDEFNAME
					,	BOM.MATERIALDEFID								AS CONSUMABLEDEFID
					,	BOM.MATERIALDEFVERSION							AS CONSUMABLEDEFVERSION
					,	CD.CONSUMABLEDEFNAME
					,	SUM(PO.PLANQTY - PO.CREATEDQTY)					AS NOTINPUTPCSQTY
					,	SUM(PO.PLANPANELQTY - PO.CREATEDPANELQTY)		AS NOTINPUTPNLQTY
					,	SUM((PO.PLANQTY - PO.CREATEDQTY) * BOM.QTY)		AS MATERIALREQUIREMENTQTY
					,	POL.ORGPRODUCTDEFID
					,	POL.ORGPRODUCTDEFVERSION
					,	POL.SEQUENCE
				FROM	QTY							PO
				INNER JOIN PRODUCT_SO_LIST			POL	ON	PO.PRODUCTIONORDERID = POL.PRODUCTIONORDERID
														AND	PO.LINENO = POL.LINENO
														AND	PO.ENTERPRISEID = POL.ENTERPRISEID
														AND	PO.PLANTID = POL.PLANTID
														AND	PO.PRODUCTDEFID = POL.PRODUCTDEFID
														AND	PO.PRODUCTDEFVERSION = POL.PRODUCTDEFVERSION
				INNER JOIN BAS_PRODUCTDEFINITION		PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
														AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
				INNER JOIN BILLOFMATERIAL			BOM	ON	PO.ENTERPRISEID = BOM.ENTERPRISEID
														AND	PO.PLANTID = BOM.PLANTID
														AND	PO.PRODUCTDEFID = BOM.PRODUCTDEFID
														AND	PO.PRODUCTDEFVERSION = BOM.PRODUCTDEFVERSION
				INNER JOIN BAS_CONSUMABLEDEFINITION	CD	ON	BOM.MATERIALDEFID = CD.CONSUMABLEDEFID
														AND	BOM.MATERIALDEFVERSION = CD.CONSUMABLEDEFVERSION
				WHERE	1 = 1
				AND		PO.PLANQTY > PO.CREATEDQTY
				AND		PD.PRODUCTDEFTYPE = 'Product'
				
				<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
					AND 	PD.PRODUCTDEFVERSION =  #{PRODUCTDEFVERSION}
				</if>
				<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
					AND 	PO.PRODUCTDEFID =  #{PRODUCTDEFID}
				</if>	
				<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
					AND 	PD.PRODUCTIONTYPE =  #{PRODUCTIONTYPE}  
				</if>		
				<if test="CUSTOMERNAME != null and CUSTOMERNAME !=''">
					AND 	POL.CUSTOMERID =  #{CUSTOMERID}
				</if>					
				GROUP BY PO.PRODUCTDEFID
						,PO.PRODUCTDEFVERSION
						,PD.PRODUCTDEFNAME
						,BOM.MATERIALDEFID
						,BOM.MATERIALDEFVERSION
						,CD.CONSUMABLEDEFNAME
						,POL.ORGPRODUCTDEFID
						,POL.ORGPRODUCTDEFVERSION
						,POL.SEQUENCE
						/*
				ORDER BY POL.ORGPRODUCTDEFID
						,POL.ORGPRODUCTDEFVERSION
						,POL.SEQUENCE
						*/
				)
				
				--  여기서부터 디테일 입니다.	
				
				, PRODUCT_SO_LIST_DETAIL AS
				(
					SELECT
							SO.SALESORDERID 		AS PRODUCTIONORDERID
						,	SO.LINENO
						,	SO.ENTERPRISEID
						,	SO.PLANTID
						,	SO.PRODUCTDEFID			AS ORGPRODUCTDEFID
						,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION
						         ELSE SO.CHANGECODEVERSION
						         END 				AS ORGPRODUCTDEFVERSION
						,	SO.PRODUCTDEFID
						,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION
						         ELSE SO.CHANGECODEVERSION
						         END  				AS PRODUCTDEFVERSION
						,	SO.CUSTOMERID
						--,	SO.UNITPRICE * COALESCE(ME.EXCHANGEVALUE,1.0) 							AS SALESPRICE
						,	NVL(PCM_EXCHANGE_FN(SO.PLANTID , SYSDATE , UP.CURRENCY_CODE, 1 * UP.UNITPRICE),0) AS SALESPRICE
						,	SO.ORDERQTY - COALESCE(PO.SURPLUSWIP,0) - COALESCE(PO.SURPLUSSTOCK,0) 	AS PLANQTY
						,	PD.LAYER
						,	PD.PCSPNL
						,	PD.PCSMM
						,	0						AS SEQUENCE
					FROM		BAS_SALEORDERAPPROVAL	SO
					LEFT JOIN 	MFM_PRODUCTIONORDER 		PO 	ON  SO.SALESORDERID = PO.PRODUCTIONORDERID
					                                		AND SO.LINENO = PO.LINENO
					                                		AND SO.ENTERPRISEID = PO.ENTERPRISEID
					                                		AND SO.PLANTID = PO.PLANTID
					INNER JOIN 	BAS_PRODUCTDEFINITION	PD	ON	SO.PRODUCTDEFID = PD.PRODUCTDEFID
															AND	((COALESCE(SO.CHANGECODEVERSION, ' ') = ' ' AND SO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION) 
																	OR (COALESCE(SO.CHANGECODEVERSION, ' ') <![CDATA[<>]]> ' ' AND SO.CHANGECODEVERSION = PD.PRODUCTDEFVERSION))
					LEFT JOIN BAS_UNITPRICEFORMES    UP ON UP.PRODUCTDEFID = PO.PRODUCTDEFID 
												   		AND UP.PRODUCTDEFVERSION = PO.PRODUCTDEFVERSION 
												   		AND SYSDATE  BETWEEN APPLY_START_DATE 
									   					AND NVL(UP.APPLY_END_DATE,TO_TIMESTAMP('9999-12-31 23:59:59','yyyy-MM-dd HH24:MI:SS'))	
					--LEFT  JOIN 	MM_EXCHANGE          	ME  ON  TO_CHAR(SO.SALESORDERDATE, 'YYYY-MM-01') = TO_CHAR(ME.EXCHANGEDATE,'YYYY-MM-DD')
					--										AND SO.CURRENCY = ME.CURRENCYUNIT
					--										AND ME.EXCHANGETYPE = 'Month'
					WHERE	1 = 1
					AND		COALESCE(PO.ISSPLIT, ' ') != 'Y'
					
					<if test="CUSTOMERNAME != null and CUSTOMERNAME !=''">
						AND 	SO.CUSTOMERID =  #{CUSTOMERID}
					</if>	
					<if test="PLANTID != null and PLANTID !=''">
						AND 	SO.PLANTID =  #{PLANTID}
					</if>
				), QTY_DETAIL AS
				(
					SELECT
							T.PRODUCTIONORDERID
						,	T.LINENO
						,	T.ENTERPRISEID
						,	T.PLANTID
						,	T.PRODUCTDEFID
						,	T.PRODUCTDEFVERSION
						,	MAX(T.PLANQTY)						AS PLANQTY
						,	ROUND(MAX(T.PLANQTY / T.PCSPNL))	AS PLANPANELQTY
						,	COALESCE(SUM(T.CREATEDQTY), 0)		AS CREATEDQTY
						,	COALESCE(SUM(T.CREATEDPANELQTY), 0)	AS CREATEDPANELQTY
					FROM
					(
						SELECT
								PO.PRODUCTIONORDERID
							,	PO.LINENO
							,	PO.ENTERPRISEID
							,	PO.PLANTID
							,	PO.PRODUCTDEFID
							,	PO.PRODUCTDEFVERSION
							,	PO.PLANQTY
							,	PO.PCSPNL
							,	TO_NUMBER(CASE WHEN PD.PRODUCTDEFTYPE = 'Product' THEN L.CREATEDQTY
									 ELSE L.CREATEDQTY / L.PANELPERQTY * PO.PCSPNL
									END)				AS CREATEDQTY
							,	L.CREATEDQTY / L.PANELPERQTY	AS CREATEDPANELQTY
						FROM			PRODUCT_SO_LIST_DETAIL	PO
						LEFT OUTER JOIN PCM_LOT			L	ON	PO.PRODUCTIONORDERID = L.PRODUCTIONORDERID
															AND	PO.LINENO = L.LINENO
															AND	PO.PRODUCTDEFID = L.PRODUCTDEFID
															AND	PO.PRODUCTDEFVERSION = L.PRODUCTDEFVERSION
															AND	L.ROOTLOTID = L.PARENTLOTID
															AND	L.LOTCREATEDTYPE = 'Normal'
															AND	L.LOTSTATE != 'Created'
						INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
															AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
						WHERE	1 = 1
					)	T
					GROUP BY 	T.PRODUCTIONORDERID
							,	T.LINENO
							,	T.ENTERPRISEID
							,	T.PLANTID
							,	T.PRODUCTDEFID
							,	T.PRODUCTDEFVERSION
				), BILLOFMATERIAL_PRODUCT(PRODUCTIONORDERID, LINENO, ENTERPRISEID, PLANTID, POPRODUCTDEFID
				, POPRODUCTDEFVERSION, PARENTPRODUCTDEFID, PARENTPRODUCTDEFVERSION, PLANQTY, PLANPANELQTY, CREATEDQTY, CREATEDPANELQTY
				, PRODUCTDEFID, PRODUCTDEFVERSION, MATERIALQTY) AS
				(
					select
							PO.PRODUCTIONORDERID
						,	PO.LINENO
						,	PO.ENTERPRISEID
						,	PO.PLANTID
						,	PO.PRODUCTDEFID					AS	POPRODUCTDEFID
						,	PO.PRODUCTDEFVERSION			AS	POPRODUCTDEFVERSION
						,	PO.PRODUCTDEFID					AS	PARENTPRODUCTDEFID
						,	PO.PRODUCTDEFVERSION			AS	PARENTPRODUCTDEFVERSION
						,	PO.PLANQTY
						,	PO.PLANPANELQTY
						,	PO.CREATEDQTY
						,	PO.CREATEDPANELQTY
						,	PO.PRODUCTDEFID
						,	PO.PRODUCTDEFVERSION
						,	(PO.PLANQTY - PO.CREATEDQTY) 	AS MATERIALQTY
					FROM	QTY_DETAIL						PO
					
					UNION ALL
					
					SELECT
							PRD.PRODUCTIONORDERID
						,	PRD.LINENO
						,	PRD.ENTERPRISEID
						,	PRD.PLANTID
						,	PRD.POPRODUCTDEFID
						,	PRD.POPRODUCTDEFVERSION
						,	PRD.PRODUCTDEFID				AS	PARENTPRODUCTDEFID
						,	PRD.PRODUCTDEFVERSION			AS	PARENTPRODUCTDEFVERSION
						,	PRD.PLANQTY
						,	PRD.PLANPANELQTY
						,	PRD.CREATEDQTY
						,	PRD.CREATEDPANELQTY
						,	BOM.MATERIALDEFID				AS PRODUCTDEFID
						,	BOM.MATERIALDEFVERSION			AS PRODUCTDEFVERSION
						,	PRD.MATERIALQTY * bom.QTY		AS MATERIALQTY
					FROM	BILLOFMATERIAL_PRODUCT	PRD
					INNER JOIN BAS_BILLOFMATERIAL	BOM	ON	BOM.ENTERPRISEID = PRD.ENTERPRISEID
														AND	BOM.PLANTID = PRD.PLANTID
														AND BOM.PRODUCTDEFID = PRD.PRODUCTDEFID
														AND BOM.PRODUCTDEFVERSION = PRD.PRODUCTDEFVERSION
														AND	BOM.PROCESSDEFID = PRD.PRODUCTDEFID
														AND BOM.PROCESSDEFVERSION = PRD.PRODUCTDEFVERSION
														AND BOM.MATERIALTYPE = 'Product'
				),	BILLOFMATERIAL_DETAIL AS
				(				
					SELECT
							PRD.POPRODUCTDEFID
						,	PRD.POPRODUCTDEFVERSION
						,	BOM.ENTERPRISEID
						,	BOM.PLANTID
						,	BOM.MATERIALDEFID
						,	BOM.MATERIALDEFVERSION
						,	SUM(PRD.MATERIALQTY  * BOM.QTY) AS MATERIALQTY
					FROM	BILLOFMATERIAL_PRODUCT	PRD
					INNER JOIN BAS_BILLOFMATERIAL	BOM	ON	PRD.ENTERPRISEID = BOM.ENTERPRISEID
														AND	PRD.PLANTID = BOM.PLANTID
														AND	PRD.PRODUCTDEFID = BOM.PRODUCTDEFID
														AND	PRD.PRODUCTDEFVERSION = BOM.PRODUCTDEFVERSION
														AND	PRD.PRODUCTDEFID = BOM.PROCESSDEFID
														AND	PRD.PRODUCTDEFVERSION = BOM.PROCESSDEFVERSION
														AND	BOM.MATERIALTYPE = 'Consumable'
					WHERE	PRD.PLANQTY > PRD.CREATEDQTY
					GROUP BY
							PRD.POPRODUCTDEFID
						,	PRD.POPRODUCTDEFVERSION
						,	BOM.MATERIALDEFID
						,	BOM.MATERIALDEFVERSION
						,	BOM.ENTERPRISEID
						,	BOM.PLANTID
				)
				,
				DETAIL AS
				(
				SELECT
						BOM.POPRODUCTDEFID || '|' || BOM.POPRODUCTDEFVERSION	AS KEYCOLUMN
					,	BOM.POPRODUCTDEFID										AS PRODUCTDEFID
					,	BOM.POPRODUCTDEFVERSION									AS PRODUCTDEFVERSION
					,	BOM.MATERIALDEFID										AS CONSUMABLEDEFIDDETAIL
					,	BOM.MATERIALDEFVERSION									AS CONSUMABLEDEFVERSIONDETAIL
					,	CD.CONSUMABLEDEFNAME								AS CONSUMABLEDEFNAMEDETAIL
					,	BOM.MATERIALQTY											AS QTY
				FROM		BILLOFMATERIAL_DETAIL				BOM
				INNER JOIN 	BAS_PRODUCTDEFINITION		PD	ON	BOM.POPRODUCTDEFID = PD.PRODUCTDEFID
															AND	BOM.POPRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
				LEFT OUTER JOIN BAS_CONSUMABLEDEFINITION	CD	ON	BOM.MATERIALDEFID = CD.CONSUMABLEDEFID
															AND	BOM.MATERIALDEFVERSION = CD.CONSUMABLEDEFVERSION
				WHERE	1 = 1
				AND		EXISTS
						(
							SELECT	1
							FROM	MASTER--UFN_SELECTSTRINGTOSPLIT3({PRODUCTLIST}, ',', '|')	T
							WHERE	BOM.POPRODUCTDEFID = MASTER.PRODUCTDEFID
							AND		BOM.POPRODUCTDEFVERSION = MASTER.PRODUCTDEFVERSION
							AND		BOM.MATERIALDEFID != MASTER.CONSUMABLEDEFID
						)
				
				<if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !=''">
					AND 	PD.PRODUCTDEFVERSION =  #{PRODUCTDEFVERSION}
				</if>			
				<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''">
					AND		bom.POPRODUCTDEFID = #{PRODUCTDEFID}
				</if>				
				<if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE !=''">
					AND 	PD.PRODUCTIONTYPE =  #{PRODUCTIONTYPE}  
				</if>	
				/*
				ORDER BY	
						BOM.POPRODUCTDEFID
					,	BOM.POPRODUCTDEFVERSION
					,	BOM.MATERIALDEFID
					,	BOM.MATERIALDEFVERSION
				*/
				)
				SELECT 
						MS.PRODUCTDEFID
					,	MS.PRODUCTDEFNAME					
					,	MS.PRODUCTDEFID
					,	MS.PRODUCTDEFNAME
					,	MS.CONSUMABLEDEFID
					,	MS.CONSUMABLEDEFNAME
					, 	DT.CONSUMABLEDEFIDDETAIL
					, 	DT.CONSUMABLEDEFNAMEDETAIL
					, 	DT.PRODUCTDEFID
					<if test='INNERREVISIONTOTAL == "Y"'>
					,	MS.KEYCOLUMN
					,	MS.PRODUCTDEFVERSION
					,	MS.KEYCOLUMN
					,	MS.PRODUCTDEFVERSION
					,	MS.CONSUMABLEDEFVERSION
					, 	DT.CONSUMABLEDEFVERSIONDETAIL
					,	MS.NOTINPUTPCSQTY	
					,	MS.NOTINPUTPNLQTY	
					,	MS.MATERIALREQUIREMENTQTY
					, 	DT.QTY
					</if>
					<if test='INNERREVISIONTOTAL == "N"'>
					,	SUM(MS.NOTINPUTPCSQTY)	AS	NOTINPUTPCSQTY
					,	SUM(MS.NOTINPUTPNLQTY)	AS	NOTINPUTPNLQTY
					,	SUM(MS.MATERIALREQUIREMENTQTY) AS	MATERIALREQUIREMENTQTY
					, 	SUM(DT.QTY)
					</if>
				FROM MASTER MS 
				INNER JOIN DETAIL DT
				ON	MS.PRODUCTDEFID = DT.PRODUCTDEFID
				AND	MS.PRODUCTDEFVERSION = DT.PRODUCTDEFVERSION
				<if test='INNERREVISIONTOTAL == "N"'>
					GROUP BY MS.PRODUCTDEFID,	MS.PRODUCTDEFNAME,	MS.CONSUMABLEDEFID,	MS.CONSUMABLEDEFNAME, DT.CONSUMABLEDEFIDDETAIL, DT.CONSUMABLEDEFNAMEDETAIL, DT.PRODUCTDEFID, MS.ORGPRODUCTDEFID
				</if>
				ORDER BY MS.ORGPRODUCTDEFID
						<if test='INNERREVISIONTOTAL == "Y"'>
						,MS.ORGPRODUCTDEFVERSION
						,MS.SEQUENCE
						,DT.PRODUCTDEFVERSION
						,DT.CONSUMABLEDEFVERSIONDETAIL
						</if>
						,DT.CONSUMABLEDEFIDDETAIL
						,DT.PRODUCTDEFID
						
	</select>
</mapper>