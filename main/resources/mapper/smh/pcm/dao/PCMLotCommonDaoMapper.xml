<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="smh.pcm.dao.PCMLotCommonDao">
<!-- PCM 공정작업 공통 -->
	
	
	<!-- lotList 조회 -->
    <select id="selectPcmLotList" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectPcmLotList */
				*	
			FROM 	PCM_LOT 
			WHERE 	1=1
			AND 	LOTID = #{LOTID}
    </select>
    
    <!-- DURABLELOT 조회 -->
    <select id="selectLotDurableDataList" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectLotDurableDataList */
				*	
			FROM 	PCM_LOTDURABLE 
			WHERE 	1=1
			AND 	LOTID = #{LOTID}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
			AND		WORKCOUNT = #{WORKCOUNT}
    </select>
    
       <!-- DURABLELOT 조회 -->
    <select id="selectLotReserveLockingDataList" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectLotReserveLockingDataList */
				*	
			FROM 	PCM_LOTRESERVELOCKING 
			WHERE 	1=1
			AND 	LOTID = #{LOTID}
			AND		ENTERPRISEID = #{ENTERPRISEID}
			AND		PLANTID =#{PLANTID}
			AND		PROCESSDEFID = #{PROCESSDEFID}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		LOCKINGSTATUS = #{LOCKINGSTATUS}
    </select>
    
    <!-- DURABLELOT 조회 -->
    <select id="selectDurableLotDataList" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectDurableLotDataList */
				*	
			FROM 	TOM_DURABLELOT 
			WHERE 	1=1
			AND 	DURABLELOTID = #{DURABLELOTID}
    </select>
    
    
    <!-- lotCommentData 조회 -->
    <select id="selectLotCommentDataList" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectLotCommentDataList */
				*	
			FROM 	PCM_LOTCOMMENT 
			WHERE 	1=1
			AND 	LOTID = #{LOTID}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
			AND		WORKCOUNT = #{WORKCOUNT}
			AND		TRANSITIONID = #{TRANSITIONID}
    </select>
       
   	<!-- lotReelData 조회 -->
    <select id="selectLotReelDataList" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectLotReelDataList */
				*	
			FROM 	PCM_LOTREEL 
			WHERE 	1=1
			AND 	LOTID = #{LOTID}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
    </select>
    
    <!-- lotEquipment 조회 -->
    <select id="selectLotEquipmentData" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectLotEquipmentData */
				*	
			FROM 	PCM_LOTEQUIPMENT 
			WHERE 	1=1
			AND 	LOTID = #{LOTID}
			AND		PROCESSSTATE = #{PROCESSSTATE}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
			AND		WORKCOUNT = #{WORKCOUNT}
    </select>
    
    <!-- getConsumableTransactionMaxSeq 조회 -->
    <select id="getConsumableTransactionMaxSeq" parameterType="map" resultType="hashmap">
    		SELECT 		/* getConsumableTransactionMaxSeq */
				MAX("sequence") AS MAXSEQ +1
			FROM 	MTM_CONSUMABLETRANSACTION 
			WHERE 	1=1
			AND 	PLANTID = #{PLANTID}
			GROUP BY PLANTID
	
    </select>
    
    <!-- getConsumableTxnHeaderTransactionNo 조회 -->
    <select id="getConsumableTxnHeaderTransactionNo" parameterType="map" resultType="hashmap">
    		SELECT 		/* getConsumableTransactionMaxSeq */
				CASE WHEN MAX(TRANSACTIONNO) IS NULL
						THEN TO_CHAR(SYSDATE,'yyyy-mm-dd')||'0001'
					WHEN MAX(TRANSACTIONNO) IS NOT NULL
						THEN SUBSTR(MAX(TRANSACTIONNO),1,8) || LPAD(TO_NUMBER(SUBSTR(MAX(TRANSACTIONNO),9,4))+1,4,'0')
				END AS MAXSEQ
			FROM 	MTM_CONSUMABLETXNHEADER 
			WHERE 	1=1
			AND 	TO_DATE(TRANSACTIONDATE,'yyyy-mm-dd') = TO_DATE(SYSDATE,'yyyy-mm-dd')
			AND		PLANTID = #{PLANTID}
			GROUP BY PLANTID
	
    </select>
    
        <!-- selectQCAOIBBTWorkCompleteDataListCancelTrackOut 조회 -->
    <select id="selectQCAOIBBTWorkCompleteDataListCancelTrackOut" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectQCAOIBBTWorkCompleteDataListCancelTrackOut */
				*
			FROM 	PCM_QCAOIBBTWORKCOMPLETE 
			WHERE 	1=1
			AND ENTERPRISEID = #{ENTERPRISEID}
			AND PLANTID = #{PLANTID}
			AND	AREAID = #{AREAID}
			AND PRODUCTDEFID = #{PRODUCTDEFID}
			AND PRODUCTDEFVERSION = #{PRODUCTDEFVERSION}
			AND PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
			AND PROCESSDEFID = #{PROCESSDEFID}
			AND PROCESSDEFVERSION = #{PROCESSDEFVERSION}
			AND SEGMENTTYPE = #{SEGMENTTYPE}
			AND ISREWORK = #{ISREWORK}
	
    </select>
    
       <!-- lotEquipment 조회 -->
    <select id="selectLotEquipmentDataListTrackOutCancel" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectLotEquipmentDataListTrackOutCancel */
				*	
			FROM 	PCM_LOTEQUIPMENT 
			WHERE 	1=1
			AND 	LOTID = #{LOTID}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		WORKCOUNT = #{WORKCOUNT}
    </select>
    
    <!-- selectLotComment 조회 -->
    <select id="selectLotComment" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectLotComment */
				*	
			FROM 	PCM_LOTCOMMENT 
			WHERE 	1=1
			AND 	LOTID = #{LOTID}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
			AND		WORKCOUNT = #{WORKCOUNT}
			AND		TRANSITIONID = #{TRANSITIONID}
    </select>
    
     <!-- lotWtime 조회 -->
    <select id="selectLotWTimeDataList" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectLotWTimeDataList */
				*
			FROM 	PCM_LOTWTIME 
			WHERE 	1=1
			AND 	LOTID = #{LOTID}
			AND		PROCESSSTATE = #{PROCESSSTATE}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
			AND		PRODUCTDEFID = #{PRODUCTDEFID}
			AND     PRODUCTDEFVERSION = #{PRODUCTDEFVERSION}
			AND 	PROCESSDEFID = #{PROCESSDEFID}
			AND     PROCESSDEFVERSION = #{PROCESSDEFVERSION}
			AND		PROCESSPATHID	= #{PROCESSPATHID}
    </select>
    
     <!--  조회 -->
    <select id="getConsumeMaterialLotAPI" parameterType="map" resultType="hashmap">
   			SELECT 		/*getConsumeMaterialLotAPI*/
					SCM.ENTERPRISEID 
				,	SCM.PLANTID 
				,	SCM.AREAID
				,	SCM.WAREHOUSEID
				,	SCM.CONSUMABLEDEFID    
				,	SCM.CONSUMABLEDEFVERSION
				,	SCM.MATERIALLOTID    
				,	SCM.TXNHISTKEY
				,	SCD.UNIT
				,	SCM.CONSUMEDQTY 
				,	SCM.CREATOR
				,	SCM.TXNTIME
				,	SCM.TXNGROUPHISTKEY
				,	SCD.ISLOTMNG
				,	COALESCE(SCM.TRANSACTIONREASONCODE,'') AS TRANSACTIONREASONCODE
			FROM 	   MTM_CONSUMEMATERIALLOT    SCM
			INNER JOIN BAS_CONSUMABLEDEFINITION  SCD   ON  SCD.CONSUMABLEDEFID      = SCM.CONSUMABLEDEFID
			                                          AND SCD.CONSUMABLEDEFVERSION = SCM.CONSUMABLEDEFVERSION
			WHERE 1=1
				AND	SCM.ENTERPRISEID	 = #{P_ENTERPRISEID}
				AND SCM.PLANTID			= #{P_PLANTID}
				AND SCM.TXNGROUPHISTKEY = #{P_TXNGROUPHISTKEY}
    </select>
    
     <!--  조회 -->
    <select id="GetCheckPeriodAreaCloseCsm" parameterType="map" resultType="hashmap">
   			<![CDATA[
   			SELECT 		/*GetCheckPeriodAreaCloseCsm*/
					COUNT(PERIODID)	AS CNTPERIODID 
			FROM 	   BAS_PERIOD    PRD
			INNER JOIN BAS_AREA  AR		ON  PRD.ENTERPRISEID = AR.ENTERPRISEID
										AND	PRD.PLANTID = AR.PLANTID
										AND	PRD.FACTORYID = AR.FACTORYID
										AND	AR.AREAID = #{P_AREAID}
			WHERE 1=1
				AND	PRD.VALIDSTATE = 'Valid'
				AND	PRD.PERIODTYPE = #{P_PERIODTYPE}
				AND PRD.PLANTID			= #{P_PLANTID}
				AND PRD.ENTERPRISEID = #{P_ENTERPRISEID}
				AND PRD.STARTTIME <= SYSDATE
				AND PRD.ENDTIME > SYSDATE
				AND PRD.PERIODSTATE = 'Open'
			]]> 
    </select>
         <!--  조회 -->
    <select id="GetCheckPeriodPlantCloseCsm" parameterType="map" resultType="hashmap">
   			<![CDATA[
   			SELECT 		/*GetCheckPeriodPlantCloseCsm*/
					COUNT(PERIODID)	AS CNTPERIODID 
			FROM 	   BAS_PERIOD    PRD
			WHERE 1=1
				AND	PRD.VALIDSTATE = 'Valid'
				AND	PRD.PERIODTYPE = #{P_PERIODTYPE}
				AND PRD.PLANTID			= #{P_PLANTID}
				AND PRD.ENTERPRISEID = #{P_ENTERPRISEID}
				AND PRD.STARTTIME <= SYSDATE
				AND PRD.ENDTIME > SYSDATE
				AND PRD.PERIODSTATE = 'Close'
			]]> 
    </select>
    
       <!--  조회 -->
    <select id="GetMaterialTransactionsequence" parameterType="map" resultType="hashmap">
   			
   			SELECT 		/*GetMaterialTransactionsequence*/
					CASE WHEN MAX(MCL.TRANSACTIONSEQUENCE) IS NULL
						THEN 1
					 	ELSE MAX(MCL.TRANSACTIONSEQUENCE) + 1
					 END
			FROM 	   MTM_CONSUMABLETXNLINE    MCL
			WHERE 1=1
				AND	MCL.ENTERPRISEID = #{ENTERPRISEID}
				AND MCL.PLANTID = #{PLANTID}
				AND	MCL.TRANSACTIONNO = #{TRANSACTIONNO}
    </select>
    
     <!-- lotWtime update대상 조회 -->
    <select id="selectLotWTimeDataListForUpdate" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectLotWTimeDataListForUpdate */
				*
			FROM 	PCM_LOTWTIME 
			WHERE 	1=1
				AND	LOTID = #{LOTID}
				AND PRODUCTDEFID = #{PRODUCTDEFID}
				AND PRODUCTDEFVERSION = #{PRODUCTDEFVERSION}
				AND TOPROCESSDEFID = #{TOPPROCESSDEFID}
				AND TOPROCESSDEFVERSION = #{TOPPROCESSDEFVERSION}
				AND TOPROCESSPATHID = #{TOPPROCESSPATHID}
				AND TOPROCESSSEGMENTID = #{TOPPROCESSSEGMENTID}
				AND TOPROCESSSEGMENTVERSION = #{TOPPROCESSSEGMENTVERSION}
				AND TOPROCESSSTATE = #{TOPPROCESSSTATE}
    </select>
    
    <!--  조회 -->
    <select id="selectconsumeMaterialDataList" parameterType="map" resultType="hashmap">
    		SELECT 		/*selectconsumeMaterialDataList */
				*
			FROM 	PCM_CONSUMEMATERIALLOT_TEMP 
			WHERE 	1=1
			AND 	LOTID = #{LOTID}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND 	ENTERPRISEID = #{ENTERPRISEID}
			AND		PLANTID	=	#{PLANTID}
			AND 	MATERIALTYPE = #{MATERIALTYPE}
			AND		AREAID = #{AREAID}
    </select>

    <select id="selectAreaData" parameterType="map" resultType="hashmap">
    		SELECT 		/*selectAreaData */
				*
			FROM 	BAS_AREA 
			WHERE 	1=1
			AND 	AREAID = #{AREAID}	
    </select>
        
        <!-- DurableLotData 조회 -->
    <select id="selectDurableLotData" parameterType="map" resultType="hashmap">
    		SELECT 		/*selectDurableLotData */
				*
			FROM 	TOM_DURABLELOT 
			WHERE 	1=1
			AND 	DURABLELOTID = #{DURABLELOTID}
    </select>
    
            <!-- GetWorkResultByAOIRepairProcess 조회 -->
    <select id="GetWorkResultByAOIRepairProcess" parameterType="map" resultType="hashmap">
    		SELECT		/*GetWorkResultByAOIRepairProcess*/
					WR.TXNHISTKEY
				,	WR.LOTID
			FROM	PCM_LOT				L
			INNER JOIN PCM_LOTHISTORY	LH	ON	L.LOTID = LH.LOTID
											AND	L.PROCESSSEGMENTID = LH.PREVPROCESSSEGMENTID
											AND	L.PROCESSSEGMENTID != LH.PROCESSSEGMENTID
			INNER JOIN PCM_LOTWORKRESULT	WR	ON	LH.TXNHISTKEY = WR.PREVSENDLOTHISTKEY
											AND	LH.LOTID = WR.LOTID
			WHERE	1 = 1
			AND		L.LOTID = #{LOTID}
    </select>
    
                <!-- selectInspectionResultDataCancelTrackOut 조회 -->
    <select id="selectInspectionResultDataCancelTrackOut" parameterType="map" resultType="hashmap">
	 	SELECT		/*selectInspectionResultDataCancelTrackOut*/
			*
		FROM	QAM_INSPECTIONRESULT				
		WHERE	1 = 1
			AND	RESOURCETYPE = #{RESOURCETYPE}
			AND	RESOURCEID =  #{RESOURCEID}
			AND PROCESSRELNO = #{PROCESSRELNO}
    </select>
    
              <!-- DefectLot이 있는지 체크 -->
    <select id="selectDefectLot" parameterType="map" resultType="hashmap">
		SELECT
				LOTID
			,	ISDEFECTED
			,	LOTSTATE
		FROM	PCM_LOT
		WHERE 1=1
			AND		PARENTLOTID = #{LOTID}
			AND 	PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
			AND		PROCESSSTATE = #{PROCESSSTATE}
			AND 	LOTSTATE != 'Terminated'
			AND		ISDEFECTED	= 'Y'
			AND		WORKCOUNT = #{WORKCOUNT}
    </select>
              <!-- 전월 마지막 LOT을 체크 한다. -->
    <select id="selectLotMonthLastDay" parameterType="map" resultType="hashmap">
		SELECT
			*
		FROM PCM_LOTPERDAILY
		WHERE TXNTIME = TO_CHAR(TRUNC(LAST_DAY(ADD_MONTHS(SYSDATE,-1)))+0.99999421,'YYYY-MM-DD')
		AND AREAID = #{AREAID}
		AND LOTID = #{LOTID}
		AND USERSEQUENCE = #{USERSEQUENCE}
		AND PROCESSSTATE = #{PROCESSSTATE}
		AND LOTSTATE = #{LOTSTATE}
    </select>
              <!-- 전월 마지막 LOT을 체크 한다. -->
    <select id="selectLotMonthLastDayWorkResult" parameterType="map" resultType="hashmap">
		SELECT
			*
		FROM PCM_LOTWORKRESULT
		WHERE 1=1
			AND LOTID = #{LOTID}
			AND AREAID = #{AREAID}
			AND USERSEQUENCE = #{USERSEQUENCE}
			AND TO_CHAR(SENDTIME,'YYYY-MM') =  TO_CHAR(TRUNC(LAST_DAY(ADD_MONTHS(SYSDATE,-1)))+0.99999421,'YYYY-MM') 		
    </select>
    
    
             <!-- 분할Lot이 있는지 확인 -->
    <select id="selectSplitLot" parameterType="map" resultType="hashmap">
		SELECT
			GEN.DESTINATIONLOTID
		FROM	PCM_LOTGENEAL	GEN
		LEFT OUTER JOIN 	PCM_LOT	LOT	ON	GEN.DESTINATIONLOTID = LOT.LOTID
		WHERE 1=1
			AND		GEN.LOTID = #{LOTID}
			AND 	GEN.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		GEN.PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
			AND 	GEN.PROCESSSTATE = #{PROCESSSTATE}
			AND 	GEN.LOTCREATETYPE = 'SplitLot'
			AND		GEN.DESTINATIONLOTID IS NOT NULL
			AND		LOT.LOTSTATE != 'Terminated'
			AND		GEN.WORKCOUNT = #{WORKCOUNT}
    </select>
    
     <!-- lotWTime 삭제 -->
    <delete id="deleteLotWTimeData" parameterType="map">
    	DELETE 		/* deleteLotWTimeData */
    	FROM PCM_LOTWTIME
    	 WHERE 1=1		
		   AND 	LOTID = #{LOTID}
			AND		PROCESSSTATE = #{PROCESSSTATE}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
			AND		PRODUCTDEFID = #{PRODUCTDEFID}
			AND     PRODUCTDEFVERSION = #{PRODUCTDEFVERSION}
			AND 	PROCESSDEFID = #{PROCESSDEFID}
			AND     PROCESSDEFVERSION = #{PROCESSDEFVERSION}
			AND		PROCESSPATHID	= #{PROCESSPATHID}
    </delete>
    
    
         <!-- MTM_CONSUMABLELOT -->
    <delete id="deleteConsumableLot" parameterType="map">
    	DELETE 		/* deleteConsumableLot */
    	FROM MTM_CONSUMABLELOT
    	 WHERE 1=1		
		   AND 	CONSUMABLELOTID = #{CONSUMABLELOTID}
		   AND	CONSUMABLEDEFID = #{CONSUMABLEDEFID}
		   AND	CONSUMABLEDEFVERSION = #{CONSUMABLEDEFVERSION}
    </delete>
  
    
         <!-- deleteInspectionResultCancelTrackOut 삭제 -->
    <delete id="deleteInspectionResultCancelTrackOut" parameterType="map">
    	DELETE 		/* deleteInspectionResultCancelTrackOut */
    	FROM QAM_INSPECTIONRESULT
    	WHERE 1=1		
			AND RESOURCETYPE = #{RESOURCETYPE}
			AND	RESOURCEID = #{RESOURCEID}
			AND	PROCESSRELNO = #{PROCESSRELNO}
			AND "degree" = #{DEGREE}
    </delete>
    
    <!-- delete QCAOIBBTWorkComplete 삭제 -->
    <delete id="deleteQCAOIBBTWorkCompleteDataCancelTrackOut" parameterType="map">
    	DELETE 		/* deleteQCAOIBBTWorkCompleteDataCancelTrackOut */
    	FROM PCM_QCAOIBBTWORKCOMPLETE
    	 WHERE 1=1		
		   AND 	LOTID = #{LOTID}
			AND		ENTERPRISEID = #{ENTERPRISEID}
			AND		PLANTID = #{PLANTID}
			AND		AREAID = #{AREAID}
			AND		PRODUCTDEFID = #{PRODUCTDEFID}
			AND     PRODUCTDEFVERSION = #{PRODUCTDEFVERSION}
			AND 	PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND     PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
			AND		PROCESSDEFID	= #{PROCESSDEFID}
    		AND		PROCESSDEFVERSION = #{PROCESSDEFVERSION}
    		AND		SEGMENTTYPE = #{SEGMENTTYPE}
    </delete>
    
         <!-- lotComment 삭제 -->
    <delete id="deleteLotComment" parameterType="map">
    DELETE 		/* deleteLotComment */
    FROM PCM_LOTCOMMENT
    WHERE 	1=1
		AND 	LOTID = #{LOTID}
		AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
		AND		PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
		AND		WORKCOUNT = #{WORKCOUNT}
		AND		TRANSITIONID = #{TRANSITIONID}
    </delete>
    
    <delete id="deleteLotReelData" parameterType="map">
    DELETE 		/* deleteLotReelData */
    FROM PCM_LOTREEL
    WHERE 	1=1
		AND 	LOTID = #{LOTID}
		AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
		AND		PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
		AND		WORKCOUNT = #{WORKCOUNT}
		AND		TRANSITIONID = #{TRANSITIONID}
    </delete>

    
    <!-- lotEquipment 삭제 -->
    <delete id="deleteLotEquipmentData" parameterType="map">
    	DELETE 		/* deleteLotEquipmentData */
    	FROM PCM_LOTEQUIPMENT
    	 WHERE LOTID      = #{LOTID} 		
		   AND PROCESSSTATE            = #{PROCESSSTATE}
		   AND PROCESSSEGMENTID           = #{PROCESSSEGMENTID}
		   AND PROCESSSEGMENTVERSION      = #{PROCESSSEGMENTVERSION}
		   AND WORKCOUNT	= #{WORKCOUNT}
    </delete>
    
        <!-- lotEquipment 삭제 TrackIn -->
    <delete id="deleteLotEquipmentDataTrackInCancel" parameterType="map">
    	DELETE 		/* deleteLotEquipmentData */
    	FROM PCM_LOTEQUIPMENT
    	 WHERE LOTID      = #{LOTID} 		
		   AND PROCESSSTATE            = #{PROCESSSTATE}
		   AND PROCESSSEGMENTID           = #{PROCESSSEGMENTID}
		   AND PROCESSSEGMENTVERSION      = #{PROCESSSEGMENTVERSION}
		   AND WORKCOUNT	= #{WORKCOUNT}
		   AND TXNHISTKEY = #{P_TXNHISTKEY}
    </delete>
    
      <!-- deleteConsumeMaterialLotTempData 삭제 -->
    <delete id="deleteConsumeMaterialLotTempData" parameterType="map">
    	DELETE 		/* deleteConsumeMaterialLotTempData */
    	FROM PCM_CONSUMEMATERIALLOT_TEMP
    	WHERE 1=1		
		 	AND 	LOTID = #{LOTID}
			AND		MATERIALLOTID = #{MATERIALLOTID}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
    </delete>
    
          <!-- deleteConsumeMaterialLotTempConsumeData 삭제 -->
    <delete id="deleteConsumeMaterialLotTempConsumeData" parameterType="map">
    	DELETE 		/* deleteConsumeMaterialLotTempData */
    	FROM PCM_CONSUMEMATERIALLOT_TEMP
    	WHERE 1=1		
		 	AND 	LOTID = #{LOTID}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		MATERIALTYPE = #{MATERIALTYPE}
			AND		AREAID = #{AREAID}
    </delete>
    
    <!-- deleteLotDurableData 삭제 -->
    <delete id="deleteLotDurableData" parameterType="map">
    	DELETE 		/* deleteLotDurableData */
    	FROM PCM_LOTDURABLE
    	WHERE 1=1		
		 	AND 	LOTID = #{LOTID}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
			AND 	WORKCOUNT = #{WORKCOUNT}
    </delete>
   
      <!-- delete LotWorkResult 삭제 -->
    <delete id="deleteLotWorkResult" parameterType="map">
    	<![CDATA[
    	DELETE 		/* deleteLotWorkResult */
    	FROM PCM_LOTWORKRESULT
    	WHERE 1=1		
		 	AND 	LOTID = #{LOTID}
		 	AND		WORKCOUNT = #{WORKCOUNT}
			AND 	TO_NUMBER(USERSEQUENCE) >  #{USERSEQUENCE_TO}
			AND		TO_NUMBER(USERSEQUENCE) <=  #{USERSEQUENCE_FR} 
			]]>
    </delete>
   
         <!-- delete LotWorkResult 삭제2 -->
    <delete id="deleteLotWorkResult2" parameterType="map">
    	<![CDATA[
    	DELETE 		/* deleteLotWorkResult2 */
    	FROM PCM_LOTWORKRESULT
    	WHERE 1=1		
		 	AND 	LOTID = #{LOTID}
		 	AND		WORKCOUNT = #{WORKCOUNT}
			AND 	TO_NUMBER(USERSEQUENCE) =  #{USERSEQUENCE_TO} 
			]]>
    </delete>
         <!-- delete LotWorkResult 삭제 -Rework시 -->
    <delete id="deleteLotWorkResultRework" parameterType="map">
    	<![CDATA[
    	DELETE 		/* deleteLotWorkResult2 */
    	FROM PCM_LOTWORKRESULT
    	WHERE 1=1		
		 	AND 	LOTID = #{LOTID}
		 	AND		WORKCOUNT = #{WORKCOUNT}
			AND 	TO_NUMBER(USERSEQUENCE) =  #{USERSEQUENCE_TO} 
			]]>
    </delete>
    
    
      <!-- deleteInspectionDefectData CancelTrackOut 삭제 -->
    <delete id="deleteInspectionDefectDataCancelTrackOut" parameterType="map">
    	DELETE 		/* "deleteInspectionDefectDataCancelTrackOut" */
    	FROM QAM_INSPECTIONRESULT
    	WHERE 1=1		
		 	AND 	RESOURCETYPE = #{RESOURCETYPE}
			AND 	RESOURCEID = #{RESOURCEID}
    </delete>
    
          <!-- deleteInspectionDefectData CancelTrackOut 삭제 -->
    <delete id="deleteLotWorkResultByRepairProcess" parameterType="map">
    	DELETE 		/* "deleteLotWorkResultByRepairProcess" */
    	FROM PCM_LOTWORKRESULT
    	WHERE 1=1		
		 	AND 	LOTID = #{P_LOTID}
			AND 	TXNHISTKEY = #{P_TXNHISTKEY}
    </delete>
    
      <!-- deleteConsumeMaterialLotCancelTrackOut CancelTrackOut 삭제 -->
    <delete id="deleteConsumeMaterialLotCancelTrackOut" parameterType="map">
    	DELETE 		/* "deleteConsumeMaterialLotCancelTrackOut" */
    	FROM MTM_CONSUMEMATERIALLOT
    	WHERE 1=1		
		 	AND	MATERIALLOTID = #{MATERIALLOTID}
		 	AND	LOTID = #{LOTID}
		 	AND MATERIALTYPE = #{MATERIALTYPE}
		 	AND	ENTERPRISEID = #{ENTERPRISEID}
		 	AND	PLANTID = #{PLANTID}
		 	AND	AREAID = #{AREAID}
		 	AND	PRODUCTDEFID = #{PRODUCTDEFID}
		 	AND PRODUCTDEFVERSION = #{PRODUCTDEFVERSION}
		 	AND	PROCESSDEFID = #{PROCESSDEFID}
		 	AND PROCESSDEFVERSION = #{PROCESSDEFVERSION}
		 	AND	PROCESSPATHID = #{PROCESSPATHID}
		 	AND	USERSEQUENCE = #{USERSEQUENCE}
		 	AND	PROCESSSEGMENTID = #{PROCESSSEGMENTID}
		 	AND	PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
		 			
    </delete>
   
    <!-- lotEquipment Update  -->
    <update id="updateLotEquipemntTrackOutCancel" parameterType="map">
    	UPDATE PCM_LOTEQUIPMENT	SET		/* updateLotEquipemntTrackOutCancel */
    			PROCESSSTATE = #{P_PROCESSSTATE} 
    		,	TRACKOUTTIME = #{P_TRACKOUTTIME}
    		,	TXNID = #{P_TXNID}
    		,	TXNUSER = #{P_TXNUSER}
    		,	LOTQTY = #{P_LOTQTY}
    		,	MODIFIEDTIME = SYSDATE
    		,	MODIFIER = #{P_MODIFIER}
    		,	TXNTIME = SYSDATE
    	WHERE 1=1
    		AND LOTID = #{LOTID}
		   AND PROCESSSEGMENTID           = #{PROCESSSEGMENTID}
		   AND WORKCOUNT	= #{WORKCOUNT}
    </update>
    
        <!-- lotEquipment Update  -->
    <update id="updateLotDurableCancelTrackOut" parameterType="map">
    	UPDATE PCM_LOTDURABLE	SET		/* updateLotDurableCancelTrackOut */
    			USEDQTY = #{USEDQTY}
    		,	WORKENDTIME = #{WORKENDTIME}
    		,	TXNID = #{P_TXNID}
    		,	MODIFIER = #{MODIFIER}
    		,	MODIFIEDTIME = SYSDATE	
    	WHERE 1=1
    		AND LOTID = #{LOTID}
		   AND PROCESSSEGMENTID           = #{PROCESSSEGMENTID}
		   AND WORKCOUNT	= #{WORKCOUNT}
    </update>
    
    
     <!-- lotEquipment Update  -->
    <update id="updateConsumableLotData" parameterType="map">
    	UPDATE MTM_CONSUMABLELOT	SET		/* updateConsumableLotData */
 				CONSUMABLELOTQTY = #{P_CONSUMABLELOTQTY}
    		,	TXNID = #{P_TXNID}
    		,	TXNUSER = #{P_TXNUSER}
    		,	MODIFIEDTIME = SYSDATE
    		,	MODIFIER = #{P_MODIFIER}
    		,	TXNTIME = SYSDATE
    	WHERE 1=1
    		AND	CONSUMABLELOTID = #{CONSUMABLELOTID}
    		AND	WAREHOUSEID = #{WAREHOUSEID}
    </update>
    
    
     <!-- lotWTime Update  -->
    <update id="updateLotWTimeData" parameterType="map">
    	UPDATE PCM_LOTWTIME	SET		/* updateLotWTimeData */
    			WTIME = #{P_WTIME} 
    		,	TXNID = #{P_TXNID}
    		,	TXNUSER = #{P_TXNUSER}
    		,	MODIFIEDTIME = SYSDATE
    		,	MODIFIER = #{P_MODIFIER}
    		,	TXNTIME = SYSDATE
    	WHERE 1=1
    		AND LOTID = #{LOTID}
    		AND PLANTID = #{PLANTID}
    		AND PRODUCTDEFID = #{PRODUCTDEFID}
    		AND	PRODUCTDEFVERSION = #{PRODUCTDEFVERSION}
    		AND TOPPROCESSDEFID = #{TOPPROCESSDEFID}
    		AND TOPPROCESSDEFVERSION = #{TOPPROCESSDEFVERSION}
    		AND TOPPROCESSPATHID = #{TOPPROCESSPATHID}
    		AND TOPPROCESSSEGMENTID = #{TOPPROCESSSEGMENTID}
    		AND TOPPROCESSSEGMENTVERSION = #{TOPPROCESSSEGMENTVERSION}
    		AND TOPPROCESSSTATE = #{TOPPROCESSSTATE}
		   
    </update>

    
       <!-- lotEquipment Update  -->
    <update id="updateLotEquipmentDataTrackInCancel" parameterType="map">
    	UPDATE PCM_LOTEQUIPMENT	SET		/* updateLotEquipmentDataTrackInCancel */
    			PROCESSSTATE = #{P_PROCESSSTATE} 
    		,	TRACKINTIME = #{P_TRACKINTIME}
    		,	RECIPEID = #{P_RECIPEID}
    		,	TXNID = #{P_TXNID}
    	WHERE 1=1
    		AND LOTID = #{LOTID}
    		AND PROCESSSTATE            = #{PROCESSSTATE}
		   AND PROCESSSEGMENTID           = #{PROCESSSEGMENTID}
		   AND PROCESSSEGMENTVERSION      = #{PROCESSSEGMENTVERSION}
		   AND WORKCOUNT	= #{WORKCOUNT}
    </update>
    
           <!-- LOTUPDATE Update - TRACKINCANCEL  -->
    <update id="updateLotDataTrackInCancel" parameterType="map">
    	UPDATE PCM_LOT	SET		/* updateLotDataTrackInCancel */
    			TRACKINUSER = #{TRACKINUSER} 
    		,	TRACKINTIME = #{TRACKINTIME}
    		,	RECEIVEUSER = #{RECEIVEUSER}
    		,	RECEIVETIME = #{RECEIVETIME}
    		,	PROCESSSTATE = #{PROCESSSTATE}
    		,	MODIFIEDTIME = SYSDATE
    		,	MODIFIER = #{MODIFIER}
    		,	LASTTXNUSER = #{LASTTXNUSER}
    		,	LASTTXNID = #{LASTTXNID}
    		,	LASTTXNHISTKEY = #{LASTTXNHISTKEY}
    	WHERE 1=1
    		AND LOTID = #{LOTID}
    </update>
    
               <!-- LOTUPDATE Update - TRACKOUTCANCEL  -->
    <update id="updateLotDataTrackOutCancel" parameterType="map">
    	UPDATE PCM_LOT	SET		/* updateLotDataTrackOutCancel */
    			TRACKOUTUSER = #{P_TRACKOUTUSER} 
    		,	TRACKOUTTIME = #{P_TRACKOUTTIME}
    		,	PROCESSSTATE = #{P_PROCESSSTATE}
    		,	MODIFIEDTIME = SYSDATE
    		,	MODIFIER = #{P_TXNUSER}
    		,	LASTTXNUSER = #{P_TXNUSER}
    		,	LASTTXNID = #{P_TXNID}
    	WHERE 1=1
    		AND LOTID = #{LOTID}
    </update>
    
    <update id="updateLotDataCancelSendLot" parameterType="map">
    	UPDATE PCM_LOT	SET		/* updateLotDataCancelSendLot */
	    		FACTORYID = #{FACTORYID} 
	    	,	AREAID = #{AREAID}
	    	,	PROCESSPATHSTACK = #{PROCESSPATHSTACK} 
	    	,	PROCESSSTATE = #{PROCESSSTATE}
	    	,	USERSEQUENCE = #{USERSEQUENCE} 
	    	,	PROCESSSEGMENTID= #{PROCESSSEGMENTID} 
	    	,	PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION} 
	    	,	SENDTIME = #{SENDTIME} 
	    	,	SENDUSER = #{SENDUSER} 
	    	,	TRACKOUTTIME = #{TRACKOUTTIME}
	    	,	TRACKOUTUSER = #{TRACKOUTUSER}
	    	,	TRACKINTIME = #{TRACKINTIME}
	    	,	TRACKINUSER = #{TRACKINUSER}
	    	,	RESOURCEID = #{RESOURCEID} 
	    	,	WORKCOUNT = #{WORKCOUNT} 
    		,	LOTSTATE = #{LOTSTATE} 
    		,	PLANTID = #{PLANTID}
    		,	LOCATIONID = #{LOCATIONID}
    		,	MODIFIER = #{MODIFIER}
    		,	LASTTXNHISTKEY = #{TXNHISTKEY}
    		,	LASTTXNID = #{TXNID}
    		,	LASTTXNUSER = #{TXNUSER}
    		,	LASTTXNCOMMENT =#{TXNID}
    		,	MODIFIEDTIME = SYSDATE
    		,	LASTTXNTIME = SYSDATE
    	WHERE 1=1
    		AND LOTID = #{LOTID}
    </update>
    
    
        <!-- lotdata  update - ReceiveCancelLot-->
    <update id="updateReceiveCancelLot" parameterType="map">
    	UPDATE PCM_LOT	SET		/* updateReceiveCancelLot */
    			RECEIVEUSER = #{RECEIVEUSER}
    		,	RECEIVETIME = #{RECEIVETIME}
    		,	LASTTXNID = #{LASTTXNID}
    		,	LASTTXNHISTKEY =#{LASTTXNHISTKEY}
    		,	LASTTXNUSER = #{LASTTXNUSER}
    		,	LASTTXNGROUPHISTKEY = #{LASTTXNGROUPHISTKEY}
    		,	LASTTXNTIME = SYSDATE
    		,	PROCESSSTATE	= #{PROCESSSTATE}
    		,	MODIFIEDTIME = SYSDATE
    		,	MODIFIER = #{MODIFIER}
    	WHERE 1=1
    		AND LOTID = #{LOTID}
    </update>

    
    <!-- durableLot update  -->
    <update id="updateDurableLotDataCancelTrackOut" parameterType="map">
    	UPDATE TOM_DURABLELOT	SET		/* updateDurableLotDataCancelTrackOut */
    			USEDCOUNT = 	 #{P_USECOUNT}
    		,	TOTALUSEDCOUNT = #{P_TOTALUSEDCOUNT}
    		,	LASTTXNID = #{P_LASTTXNID}
    		,	LASTTXNHISTKEY = #{TXNHISTKEY}
    		,	LASTTXNUSER = #{CREATOR}
    		,	MODIFIEDTIME = SYSDATE
    		,	MODIFIER = #{CREATOR}
    		,	LASTTXNTIME = SYSDATE
    	WHERE 1=1
    		AND DURABLELOTID = #{DURABLELOTID}
    </update>
    
     <!-- lotEquipment 삭제 -->
    <update id="updateDurableLotData" parameterType="map">
    	UPDATE TOM_DURABLELOT	SET		/* updateReceiveCancelLot */
    			DURABLESTATE = 	 #{DURABLESTATE}
    		,	LASTTXNID = #{LASTTXNID}
    	WHERE 1=1
    		AND DURABLELOTID = #{DURABLELOTID}
    </update>
    
    
            <!-- LotWorkResult Update -->
    <update id="updateLotWorkResultCancel" parameterType="map">
    	UPDATE	PCM_LOTWORKRESULT	SET		/* updateLotWorkResultCancel */
    		<choose>
					<when test="TRANSITIONID == 'CancelReceiveLot'">
    						RECEIVETIME = #{RECEIVETIME}
    					,	RECEIVEUSER = #{RECEIVEUSER}
    					,	RECEIVELEADTIME = #{RECEIVELEADTIME}	
    					,	RECEIVEPCSQTY = #{RECEIVEPCSQTY}	
    					,	RECEIVEPANELQTY = #{RECEIVEPANELQTY}	
    					,	RECEIVEARRAYQTY = #{RECEIVEARRAYQTY}		
					</when>
					<when test="TRANSITIONID == 'CancelTrackIn'">
					    	WORKSTARTTIME = #{WORKSTARTTIME}
    					,	WORKSTARTUSER = #{WORKSTARTUSER}
    					,	WORKSTARTLEADTIME = #{WORKSTARTLEADTIME}	
    					,	WORKSTARTPCSQTY = #{WORKSTARTPCSQTY}	
    					,	WORKSTARTPANELQTY = #{WORKSTARTPANELQTY}	
    					,	WORKSTARTARRAYQTY = #{WORKSTARTARRAYQTY}
					</when>
					<when test="TRANSITIONID == 'CancelTrackOut'">
					   		WORKENDTIME = #{WORKENDTIME}
    					,	WORKENDUSER = #{WORKENDUSER}
    					,	WORKENDLEADTIME = #{WORKENDLEADTIME}	
    					,	WORKENDPCSQTY = #{WORKENDPCSQTY}	
    					,	WORKENDPANELQTY = #{WORKENDPANELQTY}	
    					,	WORKENDARRAYQTY = #{WORKENDARRAYQTY}
					</when>
					<when test="TRANSITIONID == 'CancelSendLot'">
							SENDTIME = #{SENDTIME}
    					,	SENDUSER = #{SENDUSER}
    					,	SENDLEADTIME = #{SENDLEADTIME}	
    					,	SENDPCSQTY = #{SENDPCSQTY}	
    					,	SENDPANELQTY = #{SENDPANELQTY}	
    					,	SENDARRAYQTY = #{SENDARRAYQTY}
					</when>
    		</choose>
    		,	MODIFIEDTIME = SYSDATE
    		,	MODIFIER = #{LASTTXNUSER}
    	WHERE	1=1
    	AND		LOTID = #{LOTID}
    	AND 	TXNHISTKEY = #{P_TXNHISTKEY}
    </update>
    
    <update id="updateQCAOIBBTWorkCompleteDataCancelTrackOut" parameterType="map">
    	UPDATE PCM_QCAOIBBTWORKCOMPLETE	SET		/* updateQCAOIBBTWorkCompleteDataCancelTrackOut */
    			REPAIRRESULTQTY = #{P_REPAIRRESULTQTY}
    		,	LASTTXNID = #{P_LASTTXNID}
    		,	LASTTXNHISTKEY = #{TXNHISTKEY}
    		,	MODIFIEDTIME = SYSDATE
    		,	MODIFIER = #{P_USER}
    	WHERE 1=1
    		AND LOTID = #{LOTID}
    </update>
    
   <!-- processDefinition  조회 -->
    <select id="selectProcessDefinitionData" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectProcessDefinitionData */
				*
			FROM 	BAS_PROCESSDEFINITION 
			WHERE 	1=1
			AND 	PROCESSDEFID = #{PROCESSDEFID}
			AND 	PROCESSDEFVERSION = #{PROCESSDEFVERSION}
    </select>
    
       <!-- processPathList  조회 -->
    <select id="selectProcessPathList" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectProcessPathList */
				*
			FROM 	BAS_PROCESSPATH 
			WHERE 	1=1
			AND 	PROCESSDEFID = #{PROCESSDEFID}
			AND 	PROCESSDEFVERSION = #{PROCESSDEFVERSION}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		VALIDSTATE='Valid'
    </select>
           <!-- processPathList  조회 -->
    <select id="GetLotWorkResultCount" parameterType="map" resultType="hashmap">
				SELECT		/* GetLotWorkResultCount */
						CASE WHEN COUNT(*) = 0 THEN 0
							 ELSE MAX(WORKCOUNT) + 1
						END						AS RESULTCNT
				FROM	PCM_LOTWORKRESULT		LWR
				WHERE	1 = 1
				AND		LWR.LOTID = #{LOTID}
				AND		LWR.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
				AND		COALESCE(LWR.RESULTTYPE, '') != 'SKIP'
    </select>
    
       <!-- processPathDataList  조회 -->
    <select id="selectProcessPathDataList" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectProcessPathDataList */
				*
			FROM 	BAS_PROCESSPATH 
			WHERE 	1=1
			AND 	PROCESSPATHID = #{PROCESSPATHID}
			AND		VALIDSTATE='Valid'
    </select>
    
           <!-- selectLotWorkResultOrderByWorkCount  조회 -->
    <select id="selectLotWorkResultOrderByWorkCount" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectLotWorkResultOrderByWorkCount */
				*
			FROM 	PCM_LOTWORKRESULT 
			WHERE 	1=1
			AND 	LOTID = #{LOTID}
			AND 	PLANTID = #{PLANTID}
			AND 	ENTERPRISEID = #{ENTERPRISEID}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
			ORDER BY WORKCOUNT	DESC
			
    </select>
    
    
    <!-- LotHistory  조회 -->
    <select id="selectLotHistoryData" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectLotHistoryData */
				*
			FROM 	PCM_LOTHISTORY 
			WHERE 	1=1
			AND 	LOTID = #{P_LOTID}
			AND 	TXNHISTKEY = #{P_TXNHISTKEY}
    </select>
    
    <!-- LotHistory  조회 -->
    <select id="selectStateTransitionList" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectStateTransitionList */
				*
			FROM 	BAS_STATETRANSITION 
			WHERE 	1=1
			AND 	STATEMODELID = #{STATEMODELID}
			AND 	TRANSITIONID = #{TRANSITIONID}
			AND		FROMSTATEID = #{FROMSTATEID}
    </select>
    
        <!-- ResourceData  조회 -->
    <select id="selectResourceData" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectResourceData */
				*
			FROM 	BAS_RESOURCE 
			WHERE 	1=1
			AND 	RESOURCEID = #{RESOURCEID}
			AND 	ENTERPRISEID = #{ENTERPRISEID}
			AND		PLANTID = #{PLANTID}
    </select>
    
            <!-- ProcessSegmentData  조회 -->
    <select id="selectProcessSegmentData" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectProcessSegmentData */
				*
			FROM 	BAS_PROCESSSEGMENT 
			WHERE 	1=1
			AND 	PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND 	PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
    </select>
    
            <!-- StepTypeList  조회 -->
    <select id="selectStepTypeList" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectStepTypeList */
				LOOKUP_CODE
			FROM 	CMD_LOOKUP_VALUES 
			WHERE 	1=1
			AND 	LOOKUP_TYPE = #{LOOKUP_TYPE}
			AND	ENABLED_FLAG = 'Y'
			ORDER BY DISPLAYSEQUENCE
    </select>
    
                <!-- GetLotWorkResultByTrackIn  조회 -->
    <select id="GetLotWorkResultByTrackIn" parameterType="map" resultType="hashmap">
    			SELECT		/* GetLotWorkResultByTrackIn */
						*
				FROM	PCM_LOTWORKRESULT	WR
				WHERE	1 = 1
				AND		WR.LOTID = #{LOTID}
				AND		WR.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
				AND		WR.WORKCOUNT = #{WORKCOUNT}
    </select>
    
                    <!-- selectLotWorkResultData  조회 -->
    <select id="selectLotWorkResultData" parameterType="map" resultType="hashmap">
    			SELECT		/* selectLotWorkResultData */
						*
				FROM	PCM_LOTWORKRESULT	WR
				WHERE	1 = 1
				AND		WR.LOTID = #{P_LOTID}
				AND		WR.TXNHISTKEY = #{P_TXNHISTKEY}
    </select>
    
    <select id="GetMinBomSequence" parameterType="map" resultType="hashmap">
    			SELECT
						L.LOTID
					,	MIN(BOM."sequence")		AS SEQUENCEBOM
				FROM	PCM_LOT					L
				INNER JOIN BAS_BILLOFMATERIAL	BOM	ON	L.ENTERPRISEID = BOM.ENTERPRISEID
													AND	L.PLANTID = BOM.PLANTID
													AND	L.PRODUCTDEFID = BOM.PRODUCTDEFID
													AND	L.PRODUCTDEFVERSION = BOM.PRODUCTDEFVERSION
													AND	L.PROCESSDEFID = BOM.PROCESSDEFID
													AND	L.PROCESSDEFVERSION = BOM.PROCESSDEFVERSION
													AND	L.PROCESSSEGMENTID = BOM.PROCESSSEGMENTID
													AND	L.PROCESSSEGMENTVERSION = BOM.PROCESSSEGMENTVERSION
													AND	BOM.MATERIALTYPE = #{MATERIALTYPE}
				WHERE	1 = 1
				AND		L.ENTERPRISEID = #{ENTERPRISEID}
				AND		L.PLANTID = #{PLANTID}
				AND		L.LOTID = #{LOTID}
				GROUP BY L.LOTID
    </select>
    
    <select id="GetDeleteConsumeMaterialLotList" parameterType="map" resultType="hashmap">
    			SELECT
						L.LOTID
					,	CML.MATERIALLOTID
					,	CML.PROCESSSEGMENTID
				FROM	PCM_LOT							L
				INNER JOIN BAS_BILLOFMATERIAL			BOM	ON	L.ENTERPRISEID = BOM.ENTERPRISEID
															AND	L.PLANTID = BOM.PLANTID
															AND	L.PRODUCTDEFID = BOM.PRODUCTDEFID
															AND	L.PRODUCTDEFVERSION = BOM.PRODUCTDEFVERSION
															AND	L.PROCESSDEFID = BOM.PROCESSDEFID
															AND	L.PROCESSDEFVERSION = BOM.PROCESSDEFVERSION
															AND	L.PROCESSSEGMENTID = BOM.PROCESSSEGMENTID
															AND	L.PROCESSSEGMENTVERSION = BOM.PROCESSSEGMENTVERSION
															AND	BOM.MATERIALTYPE = #{MATERIALTYPE}
				INNER JOIN BAS_CONSUMABLEDEFINITION		CD	ON	BOM.ENTERPRISEID = CD.ENTERPRISEID
															AND	BOM.PLANTID = CD.PLANTID
															AND	BOM.MATERIALDEFID = CD.CONSUMABLEDEFID
															AND	BOM.MATERIALDEFVERSION = CD.CONSUMABLEDEFVERSION
				INNER JOIN PCM_CONSUMEMATERIALLOT_TEMP	CML	ON	L.LOTID = CML.LOTID
															AND	L.PROCESSSEGMENTID = CML.PROCESSSEGMENTID
															AND	L.ENTERPRISEID = CML.ENTERPRISEID
															AND	L.PLANTID = CML.PLANTID
															AND	L.AREAID = CML.AREAID
															AND	BOM.MATERIALDEFID = CML.MATERIALDEFID
															AND	CML.MATERIALTYPE = #{MATERIALTYPE}
				WHERE	1 = 1
				AND		L.ENTERPRISEID = #{ENTERPRISEID}
				AND		L.PLANTID = #{PLANTID}
				AND		L.LOTID = #{LOTID}
				AND		NOT (BOM."sequence" = #{SEQUENCE}
				AND			 CD.CONSUMABLECLASSID = #{CONSUMABLECLASSID})
    </select>
     
    
    
    <!-- LotComment   등록 -->
      <insert id="insertLotCommentData" parameterType="map" >
		INSERT INTO PCM_LOTCOMMENT (   		/* insertLotCommentData */
									   LOTID
		                             , TXNHISTKEY
		                             , ENTERPRISEID
		                             , PLANTID
		                             , AREAID
		                             , PRODUCTDEFID
		                             , PRODUCTDEFVERSION
		                             , PROCESSDEFID
		                             , PROCESSDEFVERSION
		                             , PROCESSPATHID
		                             , USERSEQUENCE
		                             , PROCESSSEGMENTID
		                             , PROCESSSEGMENTVERSION
		                             , WORKCOUNT
		                             , PROCESSSTATE
		                             , TRANSITIONID
		                             , COMMENTS
		                             , TXNGROUPHISTKEY
		                             , CREATOR
		                             , CREATEDTIME
		                           ) VALUES ( 
		                           			   #{LOTID}
		                                     , #{TXNHISTKEY}
		                                     , #{ENTERPRISEID}
		                                     , #{PLANTID}
		                                     , #{AREAID}
		                                     , #{PRODUCTDEFID}
		                                     , #{PRODUCTDEFVERSION}
		                                     , #{PROCESSDEFID}
		                                     , #{PROCESSDEFVERSION}
		                                     , #{PROCESSPATHID}
		                                     , #{USERSEQUENCE}
		                                     , #{PROCESSSEGMENTID}
		                                     , #{PROCESSSEGMENTVERSION}
		                                     , #{WORKCOUNT}
		                                     , #{PROCESSSTATE}
		                                     , #{TRANSITIONID}
		                                     , #{COMMENTS}
		                                     , #{TXNGROUPHISTKEY}
		                                     , #{CREATOR}
		                                     , SYSDATE
		                                    )                              
     </insert>
     
		<!-- ConsumeMaterialLotData   등록 -->
      <insert id="insertConsumeMaterialLotData" parameterType="map" >
		INSERT INTO MTM_CONSUMEMATERIALLOT (   		/* insertConsumeMaterialLotData */
									MATERIALLOTID
								,	LOTID
								,	MATERIALTYPE
								,	TXNHISTKEY
								,	ENTERPRISEID
								,	PLANTID
								,	AREAID
								,	CONSUMEDQTY
								,	EQUIPMENTID
								,	LOCATIONID
								,	PRODUCTDEFID
								,	PRODUCTDEFVERSION
								,	PROCESSDEFID
								,	PROCESSDEFVERSION
								,	PROCESSPATHID
								,	USERSEQUENCE
								,	PROCESSSEGMENTID
								,	PROCESSSEGMENTVERSION
								,	WORKCOUNT
								,	CONSUMABLEDEFID
								,	CONSUMABLEDEFVERSION
								,	CREATOR
								,	CREATEDTIME
								,	TXNGROUPHISTKEY
								,	TXNUSER
								,	TXNTIME
		                           ) 
		                  VALUES ( 
		                           	#{MATERIALLOTID}
								,	#{LOTID}
								,	#{MATERIALTYPE}
								,	#{TXNHISTKEY}
								,	#{ENTERPRISEID}
								,	#{PLANTID}
								,	#{AREAID}
								,	#{CONSUMEDQTY}
								,	#{EQUIPMENTID}
								,	#{LOCATIONID}
								,	#{PRODUCTDEFID}
								,	#{PRODUCTDEFVERSION}
								,	#{PROCESSDEFID}
								,	#{PROCESSDEFVERSION}
								,	#{PROCESSPATHID}
								,	#{USERSEQUENCE}
								,	#{PROCESSSEGMENTID}
								,	#{PROCESSSEGMENTVERSION}
								,	#{WORKCOUNT}
								,	#{CONSUMABLEDEFID}
								,	#{CONSUMABLEDEFVERSION}
								,	#{CREATOR}
								,	SYSDATE
								,	#{TXNGROUPHISTKEY}
								,	#{TXNUSER}
								,	SYSDATE
		                                    )                              
     </insert>

		<!-- ConsumableTransaction   등록 -->
      <insert id="insertConsumableTransactionData" parameterType="map" >
		INSERT INTO MTM_CONSUMABLETRANSACTION (   		/* insertConsumableTransactionData */
									ENTERPRISEID
								,	PLANTID
								,	"sequence"
								,	CONSUMABLEDEFID
								,	CONSUMABLEDEFVERSION
								,	CONSUMABLESERIALNO
								,	TXNDATE
								,	TRANSACTIONTYPE
								,	TRANSACTIONCODE
								,	TRANSACTIONREASONCODE
								,	TXNADDEDCODE
								,	AREAID
								,	RELATIONAREAID
								,	INBOUNDQTY
								,	OUTBOUNDQTY
								,	RELKEYNO
								,	RELSEQUENCE
								,	DESCRIPTION
								,	CREATOR
								,	CREATEDTIME
								,	LASTTXNHISTKEY
								,	LASTTXNID
								,	LASTTXNUSER
								,	LASTTXNTIME
								,	LASTTXNCOMMENT
								,	VALIDSTATE
								,	COSTCENTERCODE
								,	RELCONSUMABLELOTID
								,	WAREHOUSEID
								,	RELATIONWAREHOUSEID
		                           ) 
		                  VALUES ( 
		                       	 	#{ENTERPRISEID}
								,	#{PLANTID}
								,	#{sequence}
								,	#{CONSUMABLEDEFID}
								,	#{CONSUMABLEDEFVERSION}
								,	#{CONSUMABLESERIALNO}
								,	SYSDATE
								,	#{TRANSACTIONTYPE}
								,	#{TRANSACTIONCODE}
								,	#{TRANSACTIONREASONCODE}
								,	#{TXNADDEDCODE}
								,	#{AREAID}
								,	#{RELATIONAREAID}
								,	#{INBOUNDQTY}
								,	#{OUTBOUNDQTY}
								,	#{RELKEYNO#}
								,	#{RELSEQUENCE}
								,	#{DESCRIPTION}
								,	#{CREATOR}
								,	SYSDATE
								,	#{TXNHISTKEY}
								,	#{LASTTXNID}
								,	#{CREATOR}
								,	SYSDATE
								,	#{LASTTXNCOMMENT}
								,	#{VALIDSTATE}
								,	#{COSTCENTERCODE}
								,	#{RELCONSUMABLELOTID}
								,	#{WAREHOUSEID}
								,	#{RELATIONWAREHOUSEID}
		                                    )                              
     </insert>
	
		<!-- ConsumableTransaction   등록 -->
      <insert id="insertconsumableTxnHeaderData" parameterType="map" >
		INSERT INTO MTM_CONSUMABLETXNHEADER (   		/* insertconsumableTxnHeaderData */
								ENTERPRISEID
							,	PLANTID
							,	TRANSACTIONNO
							,	TRANSACTIONDATE
							,	TRANSACTIONTYPE
							,	USERID
							,	DEPARTMENT
							,	DESCRIPTION
							,	CREATOR
							,	CREATEDTIME
							,	LASTTXNHISTKEY
							,	LASTTXNID
							,	LASTTXNUSER
							,	LASTTXNTIME
							,	LASTTXNCOMMENT
							,	VALIDSTATE
		                           ) 
		                  VALUES ( 
	                       	 	#{ENTERPRISEID}
							,	#{PLANTID}
							,	#{TRANSACTIONNO}
							,	SYSDATE
							,	#{TRANSACTIONTYPE}
							,	#{CREATOR}
							,	#{DEPARTMENT}
							,	#{DESCRIPTION}
							,	#{CREATOR}
							,	SYSDATE
							,   #{TXNHISTKEY}
							,	'PCM02000'
							,	#{CREATOR}
							,	SYSDATE
							,	#{LASTTXNCOMMENT}
							,	#{VALIDSTATE}
		                                    )                              
     </insert>
     
		<!-- insertConsumableTxnLineData   등록 -->
      <insert id="insertConsumableTxnLineData" parameterType="map" >
		INSERT INTO MTM_CONSUMABLETXNLINE (   		/* insertConsumableTxnLineData */
									ENTERPRISEID
								,	PLANTID
								,	TRANSACTIONNO
								,	TRANSACTIONSEQUENCE
								,	CONSUMABLEDEFID
								,	CONSUMABLEDEFVERSION
								,	CONSUMABLELOTID
								,	FROMAREAID
								,	TOAREAID
								,	TRANSACTIONCODE
								,	TRANSACTIONREASONCODE
								,	TXNADDEDCODE
								,	RELKEYNO
								,	UNIT
								,	QTY
								,	REQUESTNO
								,	REQUESTSEQUENCE
								,	EXPIREDDATE
								,	VENDORLOTID
								,	SOURCETRNNO
								,	DESCRIPTION
								,	CREATOR
								,	CREATEDTIME
								,	MODIFIER
								,	MODIFIEDTIME
								,	LASTTXNHISTKEY
								,	LASTTXNID
								,	LASTTXNUSER
								,	LASTTXNTIME
								,	LASTTXNCOMMENT
								,	VALIDSTATE
		                           ) 
		                  VALUES ( 
		                    		#{ENTERPRISEID}
								,	#{PLANTID}
								,	#{TRANSACTIONNO}
								,	#{TRANSACTIONSEQUENCE}
								,	#{CONSUMABLEDEFID}
								,	#{CONSUMABLEDEFVERSION}
								,	#{CONSUMABLELOTID}
								,	#{FROMAREAID}
								,	#{TOAREAID}
								,	#{TRANSACTIONCODE}
								,	#{TRANSACTIONREASONCODE}
								,	#{TXNADDEDCODE}
								,	#{RELKEYNO}
								,	#{UNIT}
								,	#{QTY}
								,	#{REQUESTNO}
								,	#{REQUESTSEQUENCE}
								,	#{EXPIREDDATE}
								,	#{VENDORLOTID}
								,	#{SOURCETRNNO}
								,	#{DESCRIPTION}
								,	#{CREATOR}
								,	SYSDATE
								,	#{MODIFIER}
								,	SYSDATE
								,	#{TXNHISTKEY}
								,	#{TXNID}
								,	#{TXNUSER}
								,	SYSDATE
								,	#{LASTTXNCOMMENT}
								,	#{VALIDSTATE}
		                                    )                              
     </insert>


	 <!-- LotComment   등록 -->
      <insert id="insertLotCancelWorkResultData" parameterType="map" >
		INSERT INTO PCM_LOTCANCELWORKRESULT (   	/* insertLotCancelWorkResultData */
					TXNHISTKEY
				,	LOTID
				,	ENTERPRISEID
				,	PLANTID
				,	FACTORYID
				,	AREAID
				,	PROCESSDEFID
				,	PROCESSDEFVERSION
				,	PREVPROCESSDEFID
				,	PREVPROCESSDEFVERSION
				,	PROCESSSEGMENTID
				,	PREVPROCESSSEGMENTID
				,	WORKCOUNT
				,	LOTSTATE
				,	PROCESSSTATE
				,	PREVLOTSTATE
				,	PREVPROCESSSTATE
				,	UNIT
				,	PCSQTY
				,	PANELQTY
				,	CANCELCOMMENTS
				,	DESCRIPTION
				,	CREATOR
				,	CREATEDTIME
				,	TXNGROUPHISTKEY
				,	TXNUSER
				,	TXNTIME		                           
			) 
				VALUES (  
					#{TXNHISTKEY}
				,	#{LOTID}
				,	#{ENTERPRISEID}
				,	#{PLANTID}
				,	#{FACTORYID}
				,	#{AREAID}
				,	#{PROCESSDEFID}
				,	#{PROCESSDEFVERSION}
				,	#{PREVPROCESSDEFID}
				,	#{PREVPROCESSDEFVERSION}
				,	#{PROCESSSEGMENTID}
				,	#{PREVPROCESSSEGMENTID}
				,	#{WORKCOUNT}
				,	#{LOTSTATE}
				,	#{PROCESSSTATE}
				,	#{PREVLOTSTATE}
				,	#{PREVPROCESSSTATE}
				,	#{UNIT}
				,	#{PCSQTY}
				,	#{PANELQTY}
				,	#{CANCELCOMMENT}
				,	#{DESCRIPTION}
				,	#{TXNUSER}
				,	SYSDATE
				,	#{TXNGROUPHISTKEY}
				,	#{TXNUSER}
				,	SYSDATE	
		                )                              
     </insert>
	
	<!-- ConsumeMaterialLotTemp   등록 -->
      <insert id="insertConsumeMaterialLotTemp" parameterType="map" >
		INSERT INTO PCM_CONSUMEMATERIALLOT_TEMP (   	/* insertConsumeMaterialLotTemp */
				LOTID
			,	MATERIALLOTID
			,	PROCESSSEGMENTID
			,	ENTERPRISEID
			,	PLANTID
			,	MATERIALTYPE
			,	AREAID
			,	EQUIPMENTID
			,	MATERIALDEFID
			,	MATERIALDEFVERSION
			,	CONSUMEDQTY
			,	"SEQUENCE"
			,	CREATOR
			,	CREATEDTIME
			,	TXNGROUPHISTKEY
			,	TXNUSER
			,	TXNTIME				                           
			) 
		VALUES (  
				#{LOTID}
			,	#{MATERIALLOTID}
			,	#{PROCESSSEGMENTID}
			,	#{ENTERPRISEID}
			,	#{PLANTID}
			,	#{MATERIALTYPE}
			,	#{AREAID}
			,	#{EQUIPMENTID}
			,	#{MATERIALDEFID}
			,	#{MATERIALDEFVERSION}
			,	#{CONSUMEDQTY}
			,	#{SEQUENCE}
			,	#{CREATOR}
			,	SYSDATE
			,	#{TXNGROUPHISTKEY}
			,	#{TXNUSER}
			,	SYSDATE				          
		)                              
     </insert>
     
         <!-- lotEquipment 조회 -->
    <select id="GetNotExistsLotEquipment" parameterType="map" resultType="hashmap">
    			--
				-- Id : GetNotExistsLotEquipment
				-- Version : 10001
				SELECT
						LE.LOTID
					,	LE.TXNHISTKEY
					,	LE.EQUIPMENTID
					,	LE.PROCESSSEGMENTID
					,	LE.PROCESSSEGMENTVERSION
				FROM	PCM_LOTEQUIPMENT	LE
				WHERE	1 = 1
				AND		LE.LOTID = #{LOTID}
				AND		LE.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
				AND		LE.PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
				AND		NOT EXISTS
						(
							SELECT	1
							FROM	UFN_SELECTSTRINGTOSPLIT(#{EQUIPMENTID}, ',')	MAP
							WHERE	LE.EQUIPMENTID = MAP.VALUE
						)
				AND		LE.WORKCOUNT = #{WORKCOUNT}
    </select>
    
    <!-- lotEquipment 조회 -->
    <select id="selectLotEquipmentDataFinal" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectLotEquipmentDataFinal */
					LOTID
					,TXNHISTKEY
					,EQUIPMENTID
					,PROCESSSTATE
					,PROCESSSEGMENTID
					,PROCESSSEGMENTVERSION
					,WORKCOUNT
					,RECEIVETIME
					,TRACKINTIME
					,TRACKOUTTIME
					,LOTQTY
					,DESCRIPTION
					,CREATOR
					,CREATEDTIME
					,MODIFIER
					,MODIFIEDTIME
					,TXNGROUPHISTKEY
					,TXNID
					,TXNUSER
					,TXNTIME
					,TXNREASONCODECLASS
					,TXNREASONCODE
					,TXNCOMMENT
					,RECIPEID
					,RECIPEVERSION
					,RECIPETYPE
			FROM 	PCM_LOTEQUIPMENT 
			WHERE 	1=1
			AND 		LOTID = #{LOTID}
			AND		EQUIPMENTID = #{EQUIPMENTID}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}			
			AND		WORKCOUNT	= #{WORKCOUNT}
    </select>

    <!-- lotEquipment 조회 -->
    <select id="selectLotEquipmentDataMulti" parameterType="map" resultType="hashmap">
    		SELECT 		/* selectLotEquipmentDataMulti */
				*	
			FROM 	PCM_LOTEQUIPMENT 
			WHERE 	1=1
			AND 	LOTID = #{LOTID}
			AND		PROCESSSEGMENTID = #{PROCESSSEGMENTID}
			AND		PROCESSSEGMENTVERSION = #{PROCESSSEGMENTVERSION}
			AND		WORKCOUNT = #{WORKCOUNT}
    </select>
</mapper>
