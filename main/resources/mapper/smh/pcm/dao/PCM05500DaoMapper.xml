<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="smh.pcm.dao.PCM05500Dao">

	
	<select id="selectWipAgingList" parameterType="map" resultType="hashmap">
	/* "selectWipAgingList" 10001 */
	--id : selectWipAgingList
	<choose>
		<when test='TYPE == "PRODUCT"'>
			SELECT	XX.PLANTID
				,	XX.CUSTOMERNAME
		        ,   XX.LOTTYPE
		        ,   XX.ISHOLD
		        ,   XX.PRODUCTDEFID
		        ,   XX.PRODUCTDEFNAME
		        ,   XX.PROCESSSEGMENTNAME
		        --1개월미만
		        ,   COALESCE(SUM(LESS1MONTH_QTY), 0)         AS LESS1MONTH_QTY
		        ,   COALESCE(SUM(LESS1MONTH_PNLQTY), 0)      AS LESS1MONTH_PNLQTY
		        ,   COALESCE(SUM(LESS1MONTH_PRICE), 0)       AS LESS1MONTH_PRICE
		        ,   COALESCE(SUM(LESS1MONTH_MM), 0)          AS LESS1MONTH_MM
		        --1~3개월미만
		        ,   COALESCE(SUM(LESS1TO3MONTH_QTY), 0)      AS LESS1TO3MONTH_QTY
		        ,   COALESCE(SUM(LESS1TO3MONTH_PNLQTY), 0)   AS LESS1TO3MONTH_PNLQTY
		        ,   COALESCE(SUM(LESS1TO3MONTH_PRICE), 0)    AS LESS1TO3MONTH_PRICE
		        ,   COALESCE(SUM(LESS1TO3MONTH_MM), 0)       AS LESS1TO3MONTH_MM
		        --3~6개월미만
		        ,   COALESCE(SUM(LESS3TO6MONTH_QTY), 0)      AS LESS3TO6MONTH_QTY
		        ,   COALESCE(SUM(LESS3TO6MONTH_PNLQTY), 0)   AS LESS3TO6MONTH_PNLQTY
		        ,   COALESCE(SUM(LESS3TO6MONTH_PRICE), 0)    AS LESS3TO6MONTH_PRICE
		        ,   COALESCE(SUM(LESS3TO6MONTH_MM), 0)       AS LESS3TO6MONTH_MM
		        --6개월이상
		        ,  	COALESCE(SUM(MORE6MONTH_QTY), 0)         AS MORE6MONTH_QTY
		        ,   COALESCE(SUM(MORE6MONTH_PNLQTY), 0)      AS MORE6MONTH_PNLQTY
		        ,   COALESCE(SUM(MORE6MONTH_PRICE), 0)       AS MORE6MONTH_PRICE
		        ,   COALESCE(SUM(MORE6MONTH_MM), 0)          AS MORE6MONTH_MM
		        --합계
		        ,	COALESCE(SUM(LESS1MONTH_QTY), 0) + COALESCE(SUM(LESS1TO3MONTH_QTY), 0) + COALESCE(SUM(LESS3TO6MONTH_QTY), 0) + COALESCE(SUM(MORE6MONTH_QTY), 0)				AS SUM_QTY
		        ,	COALESCE(SUM(LESS1MONTH_PNLQTY), 0) + COALESCE(SUM(LESS1TO3MONTH_PNLQTY), 0) + COALESCE(SUM(LESS3TO6MONTH_PNLQTY), 0) + COALESCE(SUM(MORE6MONTH_PNLQTY), 0) AS SUM_PNLQTY
		        ,	COALESCE(SUM(LESS1MONTH_PRICE), 0) + COALESCE(SUM(LESS1TO3MONTH_PRICE), 0) + COALESCE(SUM(LESS3TO6MONTH_PRICE), 0) + COALESCE(SUM(MORE6MONTH_PRICE), 0)		AS SUM_PRICE
		        ,	COALESCE(SUM(LESS1MONTH_MM), 0) + COALESCE(SUM(LESS1TO3MONTH_MM), 0) + COALESCE(SUM(LESS3TO6MONTH_MM), 0) + COALESCE(SUM(MORE6MONTH_MM), 0) 				AS SUM_MM
		    FROM    
		    (
		        SELECT  L.PLANTID
		        	,	PD.CUSTOMERID
		            ,   CM.CUSTOMERNAME
		            ,   L.LOTTYPE               AS LOTTYPEID
		            ,   D1.DICTIONARYNAME       AS LOTTYPE
		            ,   L.ISHOLD
		            ,   L.PRODUCTDEFID
		            ,   L.PRODUCTDEFVERSION
		            ,   PD.PRODUCTDEFNAME
		            ,   L.PROCESSSEGMENTID
		            ,   L.PROCESSSEGMENTVERSION
		            ,   D2.DICTIONARYNAME       AS PROCESSSEGMENTNAME
		            --MM
		            ,   CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '1' MONTH) AND L.LOTSTARTDATE <![CDATA[<=]]> CURRENT_TIMESTAMP                   	THEN L.QTY END LESS1MONTH_QTY
		            ,   CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '3' MONTH) AND L.LOTSTARTDATE <![CDATA[<=]]> CURRENT_DATE - (INTERVAL '1' MONTH)   THEN L.QTY END LESS1TO3MONTH_QTY
		            ,   CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '6' MONTH) AND L.LOTSTARTDATE <![CDATA[<=]]> CURRENT_DATE - (INTERVAL '3' MONTH)   THEN L.QTY END LESS3TO6MONTH_QTY
		            ,   CASE WHEN L.LOTSTARTDATE <![CDATA[<=]]> CURRENT_DATE - (INTERVAL '6' MONTH)                                                           	THEN L.QTY END MORE6MONTH_QTY
					--PNL
		            ,   CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '1' MONTH) AND L.LOTSTARTDATE <![CDATA[<=]]> CURRENT_TIMESTAMP                   	THEN CEIL(L.QTY / L.PANELPERQTY) END LESS1MONTH_PNLQTY
		            ,   CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '3' MONTH) AND L.LOTSTARTDATE <![CDATA[<=]]> CURRENT_DATE - (INTERVAL '1' MONTH)   THEN CEIL(L.QTY / L.PANELPERQTY) END LESS1TO3MONTH_PNLQTY
		            ,   CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '6' MONTH) AND L.LOTSTARTDATE <![CDATA[<=]]> CURRENT_DATE - (INTERVAL '3' MONTH)   THEN CEIL(L.QTY / L.PANELPERQTY) END LESS3TO6MONTH_PNLQTY
		            ,   CASE WHEN L.LOTSTARTDATE <![CDATA[<=]]> CURRENT_DATE - (INTERVAL '6' MONTH)                                                           	THEN CEIL(L.QTY / L.PANELPERQTY) END MORE6MONTH_PNLQTY
		            --MM
		            ,	NVL(PCM_EXCHANGE_FN(L.PLANTID , SYSDATE , UP.CURRENCY_CODE, 1 * (CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '1' MONTH) AND L.LOTSTARTDATE <![CDATA[<=]]> CURRENT_TIMESTAMP                   	THEN SA.UNITPRICE END)),0)	LESS1MONTH_PRICE
		            ,	NVL(PCM_EXCHANGE_FN(L.PLANTID , SYSDATE , UP.CURRENCY_CODE, 1 * (CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '3' MONTH) AND L.LOTSTARTDATE <![CDATA[<=]]> CURRENT_DATE - (INTERVAL '1' MONTH)   THEN SA.UNITPRICE END)),0)	LESS1TO3MONTH_PRICE
		            ,	NVL(PCM_EXCHANGE_FN(L.PLANTID , SYSDATE , UP.CURRENCY_CODE, 1 * (CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '6' MONTH) AND L.LOTSTARTDATE <![CDATA[<=]]> CURRENT_DATE - (INTERVAL '3' MONTH)   THEN SA.UNITPRICE END)),0)	LESS3TO6MONTH_PRICE
		            ,	NVL(PCM_EXCHANGE_FN(L.PLANTID , SYSDATE , UP.CURRENCY_CODE, 1 * (CASE WHEN L.LOTSTARTDATE <![CDATA[<=]]> CURRENT_DATE - (INTERVAL '6' MONTH)                                                           	THEN SA.UNITPRICE END)),0)	MORE6MONTH_PRICE            
		            --MM
		            ,   ROUND(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '1' MONTH) AND L.LOTSTARTDATE <![CDATA[<=]]> CURRENT_TIMESTAMP                   	THEN (L.QTY / CASE WHEN PD.PCSMM = 0 THEN NULL ELSE PD.PCSMM END) END, 2) LESS1MONTH_MM
		            ,   ROUND(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '3' MONTH) AND L.LOTSTARTDATE <![CDATA[<=]]> CURRENT_DATE - (INTERVAL '1' MONTH)   THEN (L.QTY / CASE WHEN PD.PCSMM = 0 THEN NULL ELSE PD.PCSMM END) END, 2)  LESS1TO3MONTH_MM
		            ,   ROUND(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '6' MONTH) AND L.LOTSTARTDATE <![CDATA[<=]]> CURRENT_DATE - (INTERVAL '3' MONTH)   THEN (L.QTY / CASE WHEN PD.PCSMM = 0 THEN NULL ELSE PD.PCSMM END) END, 2)  LESS3TO6MONTH_MM
		            ,   ROUND(CASE WHEN L.LOTSTARTDATE <![CDATA[<=]]> CURRENT_DATE - (INTERVAL '6' MONTH)                                                           	THEN (L.QTY / CASE WHEN PD.PCSMM = 0 THEN NULL ELSE PD.PCSMM END) END, 2)  MORE6MONTH_MM
		        FROM    PCM_LOT                  L
		        INNER JOIN BAS_PRODUCTDEFINITION PD  ON  L.PRODUCTDEFID = PD.PRODUCTDEFID
		                                            AND L.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
		        INNER JOIN BAS_PROCESSSEGMENT    PS  ON  L.PROCESSSEGMENTID = PS.PROCESSSEGMENTID
		                                            AND L.PROCESSSEGMENTVERSION = PS.PROCESSSEGMENTVERSION
		        LEFT JOIN BAS_SALEORDERAPPROVAL SA  ON  L.PRODUCTIONORDERID = SA.SALESORDERID
		                                            AND L.LINENO = SA.LINENO
		        LEFT JOIN BAS_UNITPRICEFORMES    UP ON UP.PRODUCTDEFID = L.PRODUCTDEFID 
												   	AND UP.PRODUCTDEFVERSION = L.PRODUCTDEFVERSION 
												   	AND SYSDATE  BETWEEN UP.APPLY_START_DATE 
									   				AND NVL(UP.APPLY_END_DATE,TO_TIMESTAMP('9999-12-31 23:59:59','yyyy-MM-dd HH24:MI:SS'))		
		        LEFT JOIN BAS_CUSTOMER           CM  ON  SA.CUSTOMERID = CM.CUSTOMERID
		        LEFT JOIN CMD_LOOKUP_VALUES      CD  ON  L.LOTTYPE = CD.LOOKUP_CODE
		                                            AND CD.LOOKUP_TYPE = 'ProductionType'
		        LEFT JOIN CMD_DICTIONARY         D1  ON  CD.DICTIONARYID = D1.DICTIONARYID
		                                            AND D1.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
		        LEFT JOIN CMD_DICTIONARY         D2  ON  PS.PROCESSSEGMENTNAME = D2.DICTIONARYID
		                                            AND D2.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
		        WHERE   1 = 1
		        AND     L.LOTSTARTDATE IS NOT NULL
		        AND     L.LOTSTATE IN ('InProduction', 'InTransit')
		        AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				--SITE
		        <if test="PLANTID != null and PLANTID != ''">
		        	AND     L.PLANTID = #{PLANTID}
		        </if>
		        --고객
		        <if test="COMPANYCLIENT != null and COMPANYCLIENT != ''">
		        	AND	EXISTS
					(
						SELECT	1
						FROM	UFN_SELECTSTRINGTOSPLIT(#{CUSTOMERID}, ',')	T
						WHERE	SA.CUSTOMERID = T.VALUE
					)
		        </if>
				--양산구분
		        <if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE != ''">
		        	AND     L.LOTTYPE = #{PRODUCTIONTYPE}
		        </if>
		   		--품목
		        <if test="PRODUCTDEFID != null and PRODUCTDEFID != ''">
		        	AND EXISTS
		            (
		                SELECT  1
		                FROM    UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')      LMP
		                WHERE   L.PRODUCTDEFID = LMP.VALUE		               
		            )
		        </if>
		        --품목Rev
		        <if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION != ''">
		        	AND EXISTS
		            (
		                SELECT  1
		                FROM    UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')      LMP
		                WHERE   L.PRODUCTDEFVERSION = LMP.VALUE		               
		            )
		        </if>
		        --품목명
		        <if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME != ''">
		        	AND EXISTS
		            (
		                SELECT  1
		                FROM    UFN_SELECTSTRINGTOSPLIT('%' || #{PRODUCTDEFNAME} || '%', ',')      LMP
		                WHERE   PD.PRODUCTDEFNAME LIKE LMP.VALUE
		            )
		        </if>
				--제품구분	
		        <if test="PRODUCTDIVISION != null and PRODUCTDIVISION != ''">
		        	AND     PD.PRODUCTDEFTYPE = #{PRODUCTDIVISION}
		        </if>
				-- 담당공장
		        <if test="OWNERFACTORYID != null and OWNERFACTORYID != ''">
		        	AND     PD.OWNERFACTORYID = #{OWNERFACTORYID}
		        </if>
		    )XX
		    GROUP BY	 
		    		XX.PLANTID
		    	,	XX.CUSTOMERNAME
		        ,   XX.LOTTYPE
		        ,   XX.ISHOLD
		        ,   XX.PRODUCTDEFID
		        ,   XX.PRODUCTDEFNAME
		        ,   XX.PROCESSSEGMENTNAME
		    ORDER BY XX.PRODUCTDEFID ASC
		</when>
		<otherwise>
			--LOT별
			SELECT  L.PRODUCTDEFID
				,	L.PRODUCTDEFVERSION
			    ,   PD.PRODUCTDEFNAME
			    -- ,   D3.DICTIONARYNAME		AS PRODUCTDEFTYPE
			    ,   CM.CUSTOMERNAME
			    ,   L.LOTID
			    ,   D2.DICTIONARYNAME       AS AREANAME
			    ,   D1.DICTIONARYNAME       AS PROCESSSEGMENTNAME
			    ,   TO_CHAR(L.STARTEDDATE, 'YYYY-MM-DD HH24:MI:SS')			AS PROCESSRECEIPTDATE
			    ,   TO_CHAR(L.LOTSTARTDATE, 'YYYY-MM-DD HH24:MI:SS')		AS LOTSTARTDATE
			    ,   L.ISHOLD
			    ,	CASE WHEN COALESCE(MPD.ASSY, '') = '' THEN 'N' ELSE 'Y' END ISSMT
			    --수량
			    ,   COALESCE(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '1' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_TIMESTAMP                 THEN SUM(L.QTY) END, 0) AS LESS1MONTH_QTY
			    ,   COALESCE(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '3' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '1' MONTH) THEN SUM(L.QTY) END, 0) AS LESS1TO3MONTH_QTY
			    ,   COALESCE(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '6' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '3' MONTH) THEN SUM(L.QTY) END, 0) AS LESS3TO6MONTH_QTY
			    ,   COALESCE(CASE WHEN L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '6' MONTH)                                                         THEN SUM(L.QTY) END, 0) AS MORE6MONTH_QTY
				--PNL
				,   COALESCE(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '1' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_TIMESTAMP                   THEN SUM(CEIL(L.QTY / L.PANELPERQTY)) END, 0) LESS1MONTH_PNLQTY
				,   COALESCE(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '3' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '1' MONTH)   THEN SUM(CEIL(L.QTY / L.PANELPERQTY)) END, 0) LESS1TO3MONTH_PNLQTY
				,   COALESCE(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '6' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '3' MONTH)   THEN SUM(CEIL(L.QTY / L.PANELPERQTY)) END, 0) LESS3TO6MONTH_PNLQTY
				,   COALESCE(CASE WHEN L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '6' MONTH)                                                           THEN SUM(CEIL(L.QTY / L.PANELPERQTY)) END, 0) MORE6MONTH_PNLQTY
			    --MM
			    ,   COALESCE(ROUND(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '1' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_TIMESTAMP                 THEN SUM(L.QTY / CASE WHEN PD.PCSMM = 0 THEN NULL ELSE PD.PCSMM END) END, 2), 0)  AS LESS1MONTH_MM
			    ,   COALESCE(ROUND(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '3' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '1' MONTH) THEN SUM(L.QTY / CASE WHEN PD.PCSMM = 0 THEN NULL ELSE PD.PCSMM END) END, 2), 0)  AS LESS1TO3MONTH_MM
			    ,   COALESCE(ROUND(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '6' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '3' MONTH) THEN SUM(L.QTY / CASE WHEN PD.PCSMM = 0 THEN NULL ELSE PD.PCSMM END) END, 2), 0)  AS LESS3TO6MONTH_MM
			    ,   COALESCE(ROUND(CASE WHEN L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '6' MONTH)                                                         THEN SUM(L.QTY / CASE WHEN PD.PCSMM = 0 THEN NULL ELSE PD.PCSMM END) END, 2), 0)  AS MORE6MONTH_MM 
			    --BARE금액
			    ,   COALESCE(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '1' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_TIMESTAMP                 THEN SUM(SA.UNITPRICE * L.QTY) END, 0) AS LESS1MONTH_BAREPRICE
			    ,   COALESCE(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '3' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '1' MONTH) THEN SUM(SA.UNITPRICE * L.QTY) END, 0) AS LESS1TO3MONTH_BAREPRICE
			    ,   COALESCE(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '6' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '3' MONTH) THEN SUM(SA.UNITPRICE * L.QTY) END, 0) AS LESS3TO6MONTH_BAREPRICE
			    ,   COALESCE(CASE WHEN L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '6' MONTH)                                                         THEN SUM(SA.UNITPRICE * L.QTY) END, 0) AS MORE6MONTH_BAREPRICE  
			    --SMT금액
			    ,   COALESCE(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '1' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_TIMESTAMP                 THEN SUM(COALESCE(SA.ASSYPRICE, 0) + COALESCE(SA.ETCPRICE, 0)) END, 0) AS LESS1MONTH_SMTPRICE
			    ,   COALESCE(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '3' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '1' MONTH) THEN SUM(COALESCE(SA.ASSYPRICE, 0) + COALESCE(SA.ETCPRICE, 0)) END, 0) AS LESS1TO3MONTH_SMTPRICE
			    ,   COALESCE(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '6' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '3' MONTH) THEN SUM(COALESCE(SA.ASSYPRICE, 0) + COALESCE(SA.ETCPRICE, 0)) END, 0) AS LESS3TO6MONTH_SMTPRICE
			    ,   COALESCE(CASE WHEN L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '6' MONTH)                                                         THEN SUM(COALESCE(SA.ASSYPRICE, 0) + COALESCE(SA.ETCPRICE, 0)) END, 0) AS MORE6MONTH_SMTPRICE
			    --합계금액
			    ,   COALESCE(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '1' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_TIMESTAMP                 THEN SUM((SA.UNITPRICE * L.QTY) + COALESCE(SA.ASSYPRICE, 0) + COALESCE(SA.ETCPRICE, 0)) END, 0) AS LESS1MONTH_SUMMARYPRICE
			    ,   COALESCE(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '3' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '1' MONTH) THEN SUM((SA.UNITPRICE * L.QTY) + COALESCE(SA.ASSYPRICE, 0) + COALESCE(SA.ETCPRICE, 0)) END, 0) AS LESS1TO3MONTH_SUMMARYPRICE
			    ,   COALESCE(CASE WHEN L.LOTSTARTDATE >  CURRENT_DATE - (INTERVAL '6' MONTH) AND L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '3' MONTH) THEN SUM((SA.UNITPRICE * L.QTY) + COALESCE(SA.ASSYPRICE, 0) + COALESCE(SA.ETCPRICE, 0)) END, 0) AS LESS3TO6MONTH_SUMMARYPRICE
			    ,   COALESCE(CASE WHEN L.LOTSTARTDATE  <![CDATA[<=]]>  CURRENT_DATE - (INTERVAL '6' MONTH)                                                         THEN SUM((SA.UNITPRICE * L.QTY) + COALESCE(SA.ASSYPRICE, 0) + COALESCE(SA.ETCPRICE, 0)) END, 0) AS MORE6MONTH_SUMMARYPRICE
			    --총계
			    ,   COALESCE(L.QTY, 0) AS   QTY                 
			    ,	COALESCE(CEIL(L.QTY / MAX(L.PANELPERQTY)), 0) AS PNLQTY
			    ,   COALESCE(ROUND((L.QTY / CASE WHEN PD.PCSMM = 0 THEN NULL ELSE PD.PCSMM END), 2), 0) AS MM
			    ,   COALESCE((SA.UNITPRICE * L.QTY), 0)            AS BAREPRICE
			    ,   (COALESCE(SA.ASSYPRICE, 0) + COALESCE(SA.ETCPRICE, 0))    						AS SMTPRICE
			    ,   COALESCE((SA.UNITPRICE * L.QTY + COALESCE(SA.ASSYPRICE, 0) + COALESCE(SA.ETCPRICE, 0)), 0)   AS SUMMARYPRICE
			FROM PCM_LOT                     L
			INNER JOIN BAS_PRODUCTDEFINITION PD  ON  L.PRODUCTDEFID = PD.PRODUCTDEFID
			                                    AND L.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
			INNER JOIN BAS_PROCESSSEGMENT    PS  ON  L.PROCESSSEGMENTID = PS.PROCESSSEGMENTID
			                                    AND L.PROCESSSEGMENTVERSION = PS.PROCESSSEGMENTVERSION
			LEFT JOIN CMD_DICTIONARY         D1  ON  PS.PROCESSSEGMENTNAME = D1.DICTIONARYID
			                                    AND D1.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			LEFT JOIN BAS_SALEORDERAPPROVAL SA  ON  L.PRODUCTIONORDERID = SA.SALESORDERID
			                                    AND L.LINENO = SA.LINENO
			                                 --   AND L.ORIGINALPLANTID = SA.PLANTID
			LEFT JOIN BAS_CUSTOMER           CM  ON  SA.CUSTOMERID = CM.CUSTOMERID
			LEFT JOIN BAS_AREA               AR  ON  L.AREAID = AR.AREAID
			LEFT JOIN CMD_DICTIONARY         D2  ON  AR.AREANAME = D2.DICTIONARYID
			                                    AND D2.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			LEFT JOIN CMD_LOOKUP_VALUES		CD	ON	PD.PRODUCTDEFTYPE = CD.LOOKUP_CODE
												AND CD.LOOKUP_TYPE = 'ProductDefType'
			LEFT JOIN CMD_DICTIONARY			D3	ON	CD.DICTIONARYID = D3.DICTIONARYID
												AND D3.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			LEFT JOIN BAS_PRODUCTITEMSPEC 	MPD	ON  L.PRODUCTDEFID = MPD.ITEMID
		                     					AND L.PRODUCTDEFVERSION = MPD.ITEMVERSION
			WHERE   1 = 1
			AND     L.LOTSTARTDATE IS NOT NULL
			AND     L.LOTSTATE IN ('InProduction', 'InTransit')
			AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
			--SITE
			<if test="PLANTID != null and PLANTID != ''">
	        	AND     L.PLANTID = #{PLANTID}
	        </if>
			--고객
	        <if test="COMPANYCLIENT != null and COMPANYCLIENT != ''">
	        	AND	EXISTS
				(
					SELECT	1
					FROM	UFN_SELECTSTRINGTOSPLIT(#{CUSTOMERID}, ',')	T
					WHERE	SA.CUSTOMERID = T.VALUE
				)
	        </if>
			--양산구분
	        <if test="PRODUCTIONTYPE != null and PRODUCTIONTYPE != ''">
	        	AND     L.LOTTYPE = #{PRODUCTIONTYPE}
	        </if>
			--품목
	        <if test="PRODUCTDEFID != null and PRODUCTDEFID != ''">
	        	AND EXISTS
	            (
	                SELECT  1
	                FROM    UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFID}, ',')      LMP
	                WHERE   L.PRODUCTDEFID = LMP.VALUE		               
	            )
	        </if>
	        --품목Rev
	        <if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION != ''">
	        	AND EXISTS
	            (
	                SELECT  1
	                FROM    UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFVERSION}, ',')      LMP
	                WHERE   L.PRODUCTDEFVERSION = LMP.VALUE		               
	            )
	        </if>
	        --품목명
	        <if test="PRODUCTDEFNAME != null and PRODUCTDEFNAME != ''">
	        	AND EXISTS
	            (
	                SELECT  1
	                FROM    UFN_SELECTSTRINGTOSPLIT('%' || #{PRODUCTDEFNAME} || '%', ',')      LMP
	                WHERE   PD.PRODUCTDEFNAME LIKE LMP.VALUE
	            )
	        </if>		
			--제품구분
	        <if test="PRODUCTDIVISION != null and PRODUCTDIVISION != ''">
	        	AND     PD.PRODUCTDEFTYPE = #{PRODUCTDIVISION}
	        </if>
			-- 담당공장
	        <if test="OWNERFACTORYID != null and OWNERFACTORYID != ''">
	        	AND     PD.OWNERFACTORYID = #{OWNERFACTORYID}
	        </if>
			GROUP BY    L.PRODUCTDEFID
			    ,       PD.PRODUCTDEFNAME
			    ,       D3.DICTIONARYNAME	--제품타입
			    ,       CM.CUSTOMERNAME
			    ,       L.LOTID
			    ,       D2.DICTIONARYNAME	--작업장명
			    ,       D1.DICTIONARYNAME	--공정명
			    ,       L.STARTEDDATE
			    ,       L.LOTSTARTDATE
			    ,       L.ISHOLD
			    ,       SA.UNITPRICE
			    ,       SA.ASSYPRICE
			    ,       SA.ETCPRICE
			    ,       PD.PCSMM
			    ,		MPD.ASSY
			    ,		L.PRODUCTDEFVERSION
			    ,		L.QTY
			    ,		L.CREATEDTIME
			ORDER BY L.CREATEDTIME, L.PRODUCTDEFID, L.LOTID ASC
		</otherwise>
	</choose>		
	</select>
	
</mapper>