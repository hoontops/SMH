<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="smh.qam.dao.QAM00300Dao">
<!-- 검사원관리 정보-->

    <!-- 검사원 관리 등록 -->
    <insert id="insertQamQcinspector" parameterType="map">
    /* smh.qam.dao.QAM00300Dao.insertQamQcinspector  */
    INSERT INTO QAM_QCINSPECTOR( 
        INSPECTORID  
        ,ENTERPRISEID  
        ,PLANTID  
        ,EMPNO  
        ,INSPECTORNAME  
        ,AREAID  
        ,INSPECTIONCLASSID  
        ,CERTDATE  
        ,NEXTCERTDATE  
        ,ENTERDATE  
        ,RETIREDATE  
        ,PREVCAREERYEAR  
        ,PREVCAREERMONTH  
        ,SCORE  
        ,GRADE  
        ,ISCERTFINISH  
        ,EVALUATIONTYPE  
        ,INSPECTORNO  
        ,DESCRIPTION  
        ,CREATOR  
        ,CREATEDTIME  
        ,LASTTXNHISTKEY  
        ,LASTTXNID  
        ,LASTTXNUSER  
        ,LASTTXNTIME  
        ,LASTTXNCOMMENT  
        ,VALIDSTATE        ) 
    VALUES( 
        #{INSPECTORID}  
        ,#{ENTERPRISEID}  
        ,#{PLANTID}  
        ,#{EMPNO}  
        ,#{INSPECTORNAME}  
        ,#{AREAID}  
        ,#{INSPECTIONCLASSID}  
        ,#{CERTDATE}  
        ,#{NEXTCERTDATE}  
        ,#{ENTERDATE}  
        ,#{RETIREDATE}  
        ,#{PREVCAREERYEAR}  
        ,#{PREVCAREERMONTH}  
        ,#{SCORE}  
        ,#{GRADE}  
        ,#{ISCERTFINISH}  
        ,#{EVALUATIONTYPE}  
        ,#{INSPECTORNO}  
        ,#{DESCRIPTION}  
        ,#{CREATOR}  
        ,SYSDATE  
        ,#{LASTTXNHISTKEY}  
        ,#{LASTTXNID}  
        ,#{LASTTXNUSER}  
        ,SYSDATE  
        ,#{LASTTXNCOMMENT}  
        ,#{VALIDSTATE}    )
    </insert>

    <!-- 검사원 관리 변경 -->
    <update id="updateQamQcinspector" parameterType="map" >
    /* smh.qam.dao.QAM00300Dao.updateQamQcinspector  */
    UPDATE QAM_QCINSPECTOR 
    SET 
        ENTERPRISEID = #{ENTERPRISEID}     
        ,PLANTID = #{PLANTID}     
        ,EMPNO = #{EMPNO}     
        ,INSPECTORNAME = #{INSPECTORNAME}     
        ,AREAID = #{AREAID}     
        ,INSPECTIONCLASSID = #{INSPECTIONCLASSID}     
        ,CERTDATE = #{CERTDATE}     
        ,NEXTCERTDATE = #{NEXTCERTDATE}     
        ,ENTERDATE = #{ENTERDATE}     
        ,RETIREDATE = #{RETIREDATE}     
        ,PREVCAREERYEAR = #{PREVCAREERYEAR}     
        ,PREVCAREERMONTH = #{PREVCAREERMONTH}     
        ,SCORE = #{SCORE}     
        ,GRADE = #{GRADE}     
        ,ISCERTFINISH = #{ISCERTFINISH}     
        ,EVALUATIONTYPE = #{EVALUATIONTYPE}     
        ,INSPECTORNO = #{INSPECTORNO}     
        ,DESCRIPTION = #{DESCRIPTION}             
        ,MODIFIER = #{MODIFIER}     
        ,MODIFIEDTIME = SYSDATE     
        ,LASTTXNHISTKEY = #{LASTTXNHISTKEY}     
        ,LASTTXNID = #{LASTTXNID}     
        ,LASTTXNUSER = #{LASTTXNUSER}     
        ,LASTTXNTIME = SYSDATE     
        ,LASTTXNCOMMENT = #{LASTTXNCOMMENT}     
        ,VALIDSTATE = #{VALIDSTATE}
    WHERE INSPECTORID = #{INSPECTORID}
    </update>

    <!-- 검사원 관리 삭제 -->
    <update id="deleteQamQcinspector" parameterType="map" > 
    /* smh.qam.dao.QAM00300Dao.deleteQamQcinspector  */
    DELETE FROM QAM_QCINSPECTOR 
    WHERE INSPECTORID = #{INSPECTORID}
    </update>

    <!-- 검사원 관리 조회 AS-IS : GetInspection ver. 10001-->
    <select id="selectQamQcinspectorList" parameterType="map" resultType="hashmap">
    /* smh.qam.dao.QAM00300Dao.selectQamQcinspectorList  */
	<![CDATA[
	SELECT 
		I.INSPECTIONCLASSID
		,I.ENTERPRISEID
		,CDD.DICTIONARYNAME AS CAPACITYTYPE
		,I.AREAID
		,AD.DICTIONARYNAME 												AS AREANAME 	
		,I.EMPNO
		,I.INSPECTORID 	
		,I.INSPECTORNO								
		,I.INSPECTORNAME
		,CASE WHEN IG.GRADE IS NULL 
				 THEN 'None'
				 ELSE IG.GRADE END 											AS GRADE
		,TO_CHAR(I.ENTERDATE, 'YYYY-MM-DD') AS ENTERDATE
		,TO_CHAR(I.RETIREDATE, 'YYYY-MM-DD') AS RETIREDATE
		,'' 																AS CAREER
		,I.ISCERTFINISH
		,I.ENTERPRISEID
		,I.PLANTID
		,I.PREVCAREERYEAR
		,I.PREVCAREERMONTH 
		,I.SCORE
		,I.EVALUATIONTYPE
		,CD.DICTIONARYNAME												AS EVALUATIONTYPENAME
		,I.VALIDSTATE
		,TO_CHAR(I.CERTDATE, 'YYYY-MM-DD') AS CERTDATE
		,TO_CHAR(I.NEXTCERTDATE, 'YYYY-MM-DD') AS NEXTCERTDATE
	FROM 	QAM_QCINSPECTOR													I
	LEFT OUTER JOIN QAM_QCINSPECTORGRADE 									IG	ON  I.INSPECTIONCLASSID = IG.INSPECTIONCLASSID
																				AND I.ENTERPRISEID = IG.ENTERPRISEID
																				AND I.PLANTID = IG.PLANTID
																           		--AND I.SCORE >= IG.LOWERSCORE
																           		--AND I.SCORE <= CASE WHEN NVL(IG.UPPERSCORE,0) = 0 THEN IG.LOWERSCORE ELSE IG.UPPERSCORE END
																           		AND I.SCORE>= CASE WHEN NVL(IG.LOWERSCORE,0) = 0 THEN I.SCORE ELSE IG.LOWERSCORE END
																           		AND I.SCORE <= CASE WHEN NVL(IG.UPPERSCORE,0) = 0 THEN I.SCORE ELSE IG.UPPERSCORE END
																           		AND IG.VALIDSTATE = 'Valid'
	LEFT OUTER JOIN BAS_INSPECTIONCLASS 										IC 	ON 	IC.INSPECTIONCLASSID = I.INSPECTIONCLASSID
    LEFT OUTER JOIN CMD_LOOKUP_VALUES                         SCD ON  SCD.LOOKUP_CODE = I.INSPECTIONCLASSID
                                      AND SCD.LOOKUP_TYPE IN ('OperationType', 'InspectionClassType')
    LEFT OUTER JOIN CMD_DICTIONARY                     CDD ON  CDD.DICTIONARYID = SCD.DICTIONARYID
                                      AND CDD.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
    LEFT OUTER JOIN BAS_AREA 												A	ON	A.AREAID = I.AREAID
	LEFT OUTER JOIN CMD_LOOKUP_VALUES 												C 	ON 	C.LOOKUP_CODE = I.EVALUATIONTYPE
																				AND C.LOOKUP_TYPE = 'EvaluationType'
	LEFT OUTER JOIN CMD_DICTIONARY 											AD  ON 	AD.DICTIONARYID = A.AREANAME
																				AND AD.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
	LEFT OUTER JOIN CMD_DICTIONARY 											CD  ON 	CD.DICTIONARYID = C.DICTIONARYID
																				AND CD.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
	WHERE 	1 = 1
	]]>
    <if test='ISUSEDATE == "Y"'> 
        AND 	(I.CERTDATE BETWEEN TO_DATE(#{EVALUATIONDATE_PERIODFR}, 'YYYY-MM-DD') AND TO_DATE(#{EVALUATIONDATE_PERIODTO}, 'YYYY-MM-DD') 
						OR I.NEXTCERTDATE BETWEEN TO_DATE(#{NEXTEVALUATIONDATE_PERIODFR}, 'YYYY-MM-DD') AND TO_DATE(#{NEXTEVALUATIONDATE_PERIODTO}, 'YYYY-MM-DD'))
    </if>
    <if test="PLANTID != null and PLANTID !='' and !'*'.equals(PLANTID)"> 
        AND A.PLANTID = #{PLANTID}
    </if>
    <if test="WORKTYPE != null and WORKTYPE !='' and !'*'.equals(WORKTYPE)"> 
    	<if test="'Resider'.equals(WORKTYPE)"> 
    		AND		I.RETIREDATE IS NULL		
    	</if>
    	<if test="!'Resider'.equals(WORKTYPE)"> 
    		AND		I.RETIREDATE IS NOT NULL
    	</if>
    </if>
    <if test="CAPACITYTYPE != null and CAPACITYTYPE !='' and !'*'.equals(CAPACITYTYPE)"> 
        AND 	I.INSPECTIONCLASSID = #{CAPACITYTYPE}
    </if>
    <if test="EVALUATIONTYPE != null and EVALUATIONTYPE !='' and !'*'.equals(EVALUATIONTYPE)"> 
        AND 	I.EVALUATIONTYPE = #{EVALUATIONTYPE}
    </if>
    <if test="AREAID != null and AREAID !='' and !'*'.equals(AREAID)"> 
        AND 	I.AREAID = #{AREAID}
    </if>
    <if test="INSPECTIONGRADE != null and INSPECTIONGRADE !='' and !'*'.equals(INSPECTIONGRADE)"> 
        AND 	IG.GRADE = #{INSPECTIONGRADE}
    </if>
    <if test="EMPLOYEENUM != null and EMPLOYEENUM !='' "> 
        AND 	I.EMPNO LIKE '%' || #{EMPLOYEENUM} || '%'
    </if>
    <if test="ISEVALUATIONCOMPLETE != null and ISEVALUATIONCOMPLETE !='' and !'*'.equals(ISEVALUATIONCOMPLETE)"> 
        AND 	I.ISCERTFINISH = #{ISEVALUATIONCOMPLETE}
    </if>
    <if test="WORKERNAME != null and WORKERNAME !='' and !'*'.equals(WORKERNAME)"> 
       	AND 	I.INSPECTORNAME LIKE '%' || #{WORKERNAME} || '%'
    </if>
    <if test="VALIDSTATE != null and VALIDSTATE !='' "> 
        AND I.VALIDSTATE = #{VALIDSTATE}
    </if>
    ORDER BY I.CREATEDTIME DESC
    </select>

    <!--검사원 등록팝업의 이력을 조회 AS-IS : GetInspectorHistory ver. 10001 -->
    <select id="selectQamQcinspectorhistoryList" parameterType="map" resultType="hashmap">
	/* smh.qam.dao.QAM00300Dao.selectQamQcinspectorhistoryList  */
    SELECT  A.INSPECTIONCLASSID
				,C.DICTIONARYNAME 							AS 	INSPECTIONCLASSNAME
				,TO_CHAR(A.CERTDATE, 'YYYY-MM-DD') AS CERTDATE
				,A.SCORE
				,A.ISCERTFINISH
				,A.INSPECTORID
				,A.TXNHISTKEY
				,TO_CHAR(A.TXNTIME, 'YYYY-MM-DD HH24:MI:SS') AS TXNTIME
			FROM 	QAM_QCINSPECTORHISTORY						A
			LEFT OUTER JOIN BAS_INSPECTIONCLASS 					B 	ON  B.INSPECTIONCLASSID = A.INSPECTIONCLASSID
			LEFT OUTER JOIN CMD_DICTIONARY 						C 	ON 	C.DICTIONARYID = B.INSPECTIONCLASSNAME
																	AND C.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			WHERE 	1 = 1
			<!-- AND 	(TXNID = 'Create' OR TXNID = 'Modify') -->
			AND 	INSPECTORID = #{INSPECTORID}
			ORDER BY
					TXNTIME
    </select>
    
     <!--검사원 관리의 점수에 따른 등급조회 AS-IS : GetInspectionScore ver. 10001 -->
    <select id="selectInspectionScore" parameterType="map" resultType="hashmap">
	/* smh.qam.dao.QAM00300Dao.selectInspectionScore  */
	SELECT  GRADE
	FROM 	QAM_QCINSPECTORGRADE
	WHERE 	1 = 1
	AND 	ENTERPRISEID = #{ENTERPRISEID}
	AND 	PLANTID = #{PLANTID}
	AND 	INSPECTIONCLASSID = #{INSPECTIONCLASSID}
	<if test="SCORE != null and SCORE !='' "> 
		<![CDATA[
		AND ((LOWERSCORE IS NULL AND UPPERSCORE >= #{SCORE}) 
				OR (UPPERSCORE IS NULL AND LOWERSCORE <= #{SCORE}) 
				OR (LOWERSCORE <= #{SCORE} AND UPPERSCORE >= #{SCORE})) 	
		]]>
	</if>						
	</select>
	
	<!--검사원 등록 시 이미 등록된 검사원명, 사원번호인지 조회 AS-IS : GetExistInspector ver. 10001 -->
    <select id="selectExistInspector" parameterType="map" resultType="hashmap">
	/* smh.qam.dao.QAM00300Dao.selectExistInspector  */
	SELECT	
			INSPECTORID
	FROM 	QAM_QCINSPECTOR
	WHERE 	1 = 1
	AND PLANTID = #{PLANTID}     
	AND EMPNO = #{EMPNO}     
	AND INSPECTORNAME = #{INSPECTORNAME}     
	</select>
	
</mapper>
