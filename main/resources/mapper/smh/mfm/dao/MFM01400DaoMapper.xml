<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="smh.mfm.dao.MFM01400Dao">


    <!--
		설		명	: 주요 공정 실적 현황판 - D-1 까지 구함 (조회 조건)
		생	성	자	: 김진현
		생	성	일	: 2021-04-26 
		수  정   이  력	:
	-->
	<select id="selectWorkDoneQtySearchList" parameterType="map" resultType="hashmap">
				/*selectWorkDoneQtySearchList - 주요 공정 실적 현황판 - D-1 까지 구함(조회 조건) */
				
				select TO_CHAR((TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-(+LEVEL-1)), 'YYYY-MM-DD') AS COLUMNS
					 , level
					 
					
					 , 'NVL("''' ||
                    TO_CHAR((TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-(+LEVEL-1)), 'YYYY-MM-DD') 
                    || '''_SUM_INPUTPNLQTY", 0) AS D_'|| (LEVEL-1) ||'_SUM_INPUTPNLQTY'  AS COLUMNS_SUM_INPUTPNLQTY
                    
                    , ', NVL("''' ||
                    TO_CHAR((TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-(+LEVEL-1)), 'YYYY-MM-DD') 
                    || '''_SUM_INPUTMMQTY", 0) AS D_'|| (LEVEL-1) ||'_SUM_INPUTMMQTY'  AS COLUMNS_SUM_INPUTMMQTY
                    
                    , ', NVL("''' ||
                    TO_CHAR((TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-(+LEVEL-1)), 'YYYY-MM-DD') 
                    || '''_SUM_WIPPANELQTY", 0) AS D_'|| (LEVEL-1) ||'_SUM_WIPPANELQTY'  AS COLUMNS_SUM_WIPPANELQTY
                    
                    , ', NVL("''' ||
                    TO_CHAR((TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-(+LEVEL-1)), 'YYYY-MM-DD') 
                    || '''_SUM_WIPMMQTY", 0) AS D_'|| (LEVEL-1) ||'_SUM_WIPMMQTY'  AS COLUMNS_SUM_WIPMMQTY
                    
                    
                    ---------------------------------------------------------------------------------------
                    -- [추가 - 금액 부분] (21.07.30) - 
                    , ', NVL("''' ||
                    TO_CHAR((TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-(+LEVEL-1)), 'YYYY-MM-DD') 
                    || '''_SUM_PRICE", 0) AS D_'|| (LEVEL-1) ||'_SUM_PRICE'  AS COLUMNS_SUM_PRICE
					 
					 
				  from dual
				  connect by level <![CDATA[<=]]> (TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD') - (TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-1))+2		-- 21.05.17 3일치 확인해야됨
	</select>
	
	
	<!--
		설		명	: 주요 공정 실적 현황판 - D-7 까지 구함 (조회 조건)
		생	성	자	: 김진현
		생	성	일	: 2021-05-21 
		수  정   이  력	:
	-->
	<select id="selectWorkDoneQtySearchSevenList" parameterType="map" resultType="hashmap">
				/*selectWorkDoneQtySearchSevenList - 주요 공정 실적 현황판 - D-1 까지 구함(조회 조건) */
				
				select TO_CHAR((TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-(+LEVEL-1)), 'YYYY-MM-DD') AS COLUMNS
					 , level
					 
					
					 , 'NVL("''' ||
                    TO_CHAR((TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-(+LEVEL-1)), 'YYYY-MM-DD') 
                    || '''_SUM_INPUTPNLQTY", 0) AS D_'|| (LEVEL-1) ||'_SUM_INPUTPNLQTY'  AS COLUMNS_SUM_INPUTPNLQTY
                    
                    , ', NVL("''' ||
                    TO_CHAR((TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-(+LEVEL-1)), 'YYYY-MM-DD') 
                    || '''_SUM_INPUTMMQTY", 0) AS D_'|| (LEVEL-1) ||'_SUM_INPUTMMQTY'  AS COLUMNS_SUM_INPUTMMQTY
                    
                    , ', NVL("''' ||
                    TO_CHAR((TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-(+LEVEL-1)), 'YYYY-MM-DD') 
                    || '''_SUM_WIPPANELQTY", 0) AS D_'|| (LEVEL-1) ||'_SUM_WIPPANELQTY'  AS COLUMNS_SUM_WIPPANELQTY
                    
                    , ', NVL("''' ||
                    TO_CHAR((TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-(+LEVEL-1)), 'YYYY-MM-DD') 
                    || '''_SUM_WIPMMQTY", 0) AS D_'|| (LEVEL-1) ||'_SUM_WIPMMQTY'  AS COLUMNS_SUM_WIPMMQTY
					 
					 
					 
					 
					---------------------------------------------------------------------------------------
                    -- [추가 - 금액 부분] (21.07.30) - 
                    , ', NVL("''' ||
                    TO_CHAR((TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-(+LEVEL-1)), 'YYYY-MM-DD') 
                    || '''_SUM_PRICE", 0) AS D_'|| (LEVEL-1) ||'_SUM_PRICE'  AS COLUMNS_SUM_PRICE
					 
				  from dual
				  connect by level <![CDATA[<=]]> (TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD') - (TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-1))+6		-- (7일전까지 보여 줘야됨)
	</select>
	
	
	<!--
		설		명	: 주요 공정 실적 현황판 - 메인 헤더 정보 조회
		생	성	자	: 김진현
		생	성	일	: 2021-05-17 
		수  정   이  력	:
	-->
	<select id="selectHeadTitleList" parameterType="map" resultType="hashmap">
				/*selectHeadTitleList - 주요 공정 실적 현황판 - D-1 까지 구함(조회 조건) */
				WITH D_DAY AS (
					SELECT TO_CHAR((TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-(+LEVEL-1)), 'DD') AS COLUMNS
						   ,  LEVEL AS LEV
						   ,  'DAY' AS CODE
					  FROM DUAL
					  CONNECT BY LEVEL <![CDATA[<=]]> (TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD') - (TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-1))+2		-- 21.05.17 3일치 확인해야됨
				  )
				     SELECT D.COLUMNS||DC.DICTIONARYNAME   AS TITLE
					  FROM CMD_DICTIONARY DC
					  INNER JOIN D_DAY  D
					  ON DC.DICTIONARYID  		= D.CODE
					WHERE DC.LANGUAGETYPE 	= #{SESSION_LANGUAGETYPE}        -- 다국어 코드--'ko-KR'
					ORDER BY LEV
	</select>
	
	
	<!--
		설		명	: 주요 공정 실적 현황판 - 메인 헤더 정보 조회(7일)
		생	성	자	: 김진현
		생	성	일	: 2021-05-21 
		수  정   이  력	:
	-->
	<select id="selectHeadTitleSevenList" parameterType="map" resultType="hashmap">
				/*selectHeadTitleSevenList - 주요 공정 실적 현황판 - D-1 까지 구함(조회 조건) */
				WITH D_DAY AS (
					SELECT TO_CHAR((TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-(+LEVEL-1)), 'DD') AS COLUMNS
						   ,  LEVEL AS LEV
						   ,  'DAY' AS CODE
					  FROM DUAL
					  CONNECT BY LEVEL <![CDATA[<=]]> (TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD') - (TO_DATE(SUBSTR(#{P_DATE},1,8), 'YYYYMMDD')-1))+6		-- 일주일
				  )
				     SELECT D.COLUMNS||DC.DICTIONARYNAME   AS TITLE
					  FROM CMD_DICTIONARY DC
					  INNER JOIN D_DAY  D
					  ON DC.DICTIONARYID  		= D.CODE
					WHERE DC.LANGUAGETYPE 	= #{SESSION_LANGUAGETYPE}        -- 다국어 코드--'ko-KR'
					ORDER BY LEV
	</select>
	
	<!--
		설		명	: 주요 공정 실적 현황판 - 메인 Left, Rigth 조회
		생	성	자	: 김진현
		생	성	일	: 2021-05-12 
		수  정   이  력	:  (21.06.16) - 작업실적 조회 쿼리 변경으로 수정 (실적,재공 적용) 
								(21.07.14) - 미투입 현황 추가
	-->
	<select id="selectWorkDoneMainAllList" parameterType="map" resultType="hashmap">
/*selectWorkDoneMainAllList - 주요 공정 실적 현황판 - 메인 Left, Rigth 조회 */
	
	
	
		 /*################################[21.07.30 단가(금액) 추가]#################################################*/
		/*  공정관리 > 투입관리 > 단가 Table 쿼리 참조*/
		-- (21.07.29) - 금액 계산을 위해 단가 Table 추가 
		WITH  T_PRICE AS (
        SELECT    PRD.PLANTID 	
                        , PRD.PRODUCTDEFID 
                        , PRD.PRODUCTDEFVERSION 				
                        , UPR.CURRENCY_CODE     -- 단위
                        , PRD.UNIT       	AS UOM      -- 
                        , NVL(EXC.EXCHANGE_RATE,1) 					AS EXCHANGE_RATE
                        , UPR.UNITPRICE * NVL(EXC.EXCHANGE_RATE,1) 	AS SALEPRICE                -- 판가 해당 값과 pcs 수량 곱해서 계산
                  FROM BAS_ITEMMASTER IM
                  INNER JOIN BAS_PRODUCTDEFINITION PRD 		ON  PRD.PRODUCTDEFID = ITEMID
                                                            AND PRD.PRODUCTDEFVERSION = ITEMVERSION
                  INNER JOIN BAS_UNITPRICEFORMES UPR 		-- [단가]
                                                            ON  IM.ENTERPRISEID = UPR.ENTERPRISEID
                                                            AND IM.ITEMID = UPR.PRODUCTDEFID
                                                            AND IM.ITEMVERSION = UPR.PRODUCTDEFVERSION
                  LEFT JOIN BAS_EXCHANGE EXC				-- [환율]
                                                            ON  UPR.CURRENCY_CODE = EXC.CURRENCY_CODE
                                                            AND EXC.PERIOD_NAME = TO_CHAR(SYSDATE ,'YYYY-MM')
                 /*
                  LEFT OUTER JOIN BAS_CUSTOMER      CUST    ON  PRD.ENTERPRISEID = CUST.ENTERPRISEID 
                                                            AND PRD.PLANTID = CUST.PLANTID
                                                            AND PRD.CUSTOMERID =  CUST.CUSTOMERID  
                                                            */
                  LEFT OUTER JOIN BAS_PRODUCTITEMSPEC PIS   ON  IM.ENTERPRISEID = PIS.ENTERPRISEID
                                                            AND IM.ITEMID = PIS.ITEMID
                                                            AND IM.ITEMVERSION = PIS.ITEMVERSION
                  /*
                  LEFT OUTER JOIN CMD_USERS         MUSER   ON  UPR.ENTERPRISEID = MUSER.ENTERPRISEID
                                                            AND UPR.MODIFIER =  MUSER.USER_ID           
                                                            */
                WHERE 1=1
                  AND PRD.PLANTID = #{PLANTID}
        
        
        
        )
        ----------------------------------------------------------------------------------------------------------------------[단가 ↑]
        /*################################[21.07.14 미투입 현황 추가]#################################################*/
		/* "SelectNotInputList" 10001 -> 공정관리 > 투입관리 > 미투입현황 - 미투입List 조회 쿼리 참조*/
		--id : selectNotInputList
        , PRODUCT_SO_LIST AS
		(
			SELECT
					SO.SALESORDERID PRODUCTIONORDERID               -- 수주번호
				,	SO.LINENO                                       -- 수주배분 라인번호
				,	SO.ENTERPRISEID
				,	SO.PLANTID
				,	SO.PRODUCTDEFID			                            AS ORGPRODUCTDEFID              -- 제품 정의 ID
				,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION         -- 변경코드VERSION OR 제품 정의 VERSION
						 ELSE SO.CHANGECODEVERSION
						 END ORGPRODUCTDEFVERSION
				,	SO.PRODUCTDEFID                                     AS PRODUCTDEFID                 -- 제품 정의 ID
				,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION
						 ELSE SO.CHANGECODEVERSION
						 END  PRODUCTDEFVERSION
				,	SO.CUSTOMERID                                                                       -- 고객사 ID
		--		,	SO.UNITPRICE * COALESCE(ME.EXCHANGEVALUE,1.0) SALESPRICE
				,	NVL(PCM_EXCHANGE_FN(SO.PLANTID , SYSDATE , UP.CURRENCY_CODE, 1 * UP.UNITPRICE),0) AS SALESPRICE         -- 통화 코드 /  단가
				,	SO.ORDERQTY - COALESCE(PO.SURPLUSWIP,0) - COALESCE(PO.SURPLUSSTOCK,0) PLANQTY                           -- 수주량 - 잉여재공 - 잉여재고
				,	PD.LAYER
				,	PD.PCSPNL                                   -- PCS/PNL
				,	PD.PCSMM                                    -- PCS/mm
				--,	0						AS "SEQUENCE"
				,	SO.ORDERQTY	                                -- 수주량
			FROM	BAS_SALEORDERAPPROVAL		SO
			LEFT JOIN MFM_PRODUCTIONORDER PO ON  SO.SALESORDERID = PO.PRODUCTIONORDERID
											AND SO.LINENO = PO.LINENO
											AND SO.ENTERPRISEID = PO.ENTERPRISEID
											AND SO.PLANTID = PO.PLANTID
			INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	SO.PRODUCTDEFID = PD.PRODUCTDEFID
												AND	((COALESCE(SO.CHANGECODEVERSION,' ') = ' ' AND SO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION) OR (COALESCE(SO.CHANGECODEVERSION,' ') <![CDATA[<>]]>' ' AND SO.CHANGECODEVERSION = PD.PRODUCTDEFVERSION))
			LEFT JOIN BAS_UNITPRICEFORMES    UP ON UP.PRODUCTDEFID = PO.PRODUCTDEFID 
											   AND UP.PRODUCTDEFVERSION = PO.PRODUCTDEFVERSION 
											   AND SYSDATE  BETWEEN APPLY_START_DATE 
												AND NVL(UP.APPLY_END_DATE,TO_TIMESTAMP('9999-12-31 23:59:59','yyyy-MM-dd HH24:MI:SS'))																									
			WHERE	1 = 1
			AND		COALESCE(PO.ISSPLIT, ' ') != 'Y'
			UNION ALL
			SELECT
					SO.SALESORDERID PRODUCTIONORDERID
					,	SO.LINENO
					,	SO.ENTERPRISEID
					,	SO.PLANTID
					,	COALESCE(PO.PRODUCTDEFID,SO.PRODUCTDEFID)			AS ORGPRODUCTDEFID
					,	COALESCE(PO.PRODUCTDEFVERSION,SO.PRODUCTDEFVERSION)	AS ORGPRODUCTDEFVERSION
					,	BOM.MATERIALDEFID		AS PRODUCTDEFID
					,	BOM.MATERIALDEFVERSION	AS PRODUCTDEFVERSION
					,	SO.CUSTOMERID
		--			,	SO.UNITPRICE * COALESCE(ME.EXCHANGEVALUE,1.0) SALESPRICE
					,	NVL(PCM_EXCHANGE_FN(SO.PLANTID , SYSDATE , UP.CURRENCY_CODE, 1 * UP.UNITPRICE),0) AS SALESPRICE
					,	SO.ORDERQTY - COALESCE(PO.SURPLUSWIP,0) - COALESCE(PO.SURPLUSSTOCK,0) PLANQTY
					,	PD.LAYER
					,	PD.PCSPNL
					,	PD.PCSMM
					--,	BOM.SEQUENCE
					,	SO.ORDERQTY					
			FROM	BAS_SALEORDERAPPROVAL		SO
			LEFT JOIN MFM_PRODUCTIONORDER PO ON  SO.SALESORDERID = PO.PRODUCTIONORDERID
											AND SO.LINENO = PO.LINENO
											AND SO.ENTERPRISEID = PO.ENTERPRISEID
											AND SO.PLANTID = PO.PLANTID
			INNER JOIN BAS_PRODUCTDEFINITION	PDD	ON	SO.PRODUCTDEFID = PDD.PRODUCTDEFID
												AND SO.PRODUCTDEFVERSION = PDD.PRODUCTDEFVERSION
			INNER JOIN BAS_BILLOFMATERIAL	BOM	ON	PO.PRODUCTDEFID = BOM.PRODUCTDEFID
												AND	PO.PRODUCTDEFVERSION = BOM.PRODUCTDEFVERSION
												AND	PDD.PROCESSDEFID = BOM.PROCESSDEFID
												AND PDD.PROCESSDEFVERSION = BOM.PROCESSDEFVERSION
												AND	BOM.MATERIALTYPE = 'Product'
			INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
												AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
			LEFT JOIN BAS_UNITPRICEFORMES    UP ON UP.PRODUCTDEFID = PO.PRODUCTDEFID 
											   AND UP.PRODUCTDEFVERSION = PO.PRODUCTDEFVERSION 
											   AND SYSDATE  BETWEEN APPLY_START_DATE 
												AND NVL(UP.APPLY_END_DATE,TO_TIMESTAMP('9999-12-31 23:59:59','yyyy-MM-dd HH24:MI:SS'))																
			WHERE	1 = 1
			AND		COALESCE(PO.ISSPLIT, '') != 'Y' -- 수주배분 라인번호의 LOT생성 완료.
		)
		
		, QTY AS
		(
			SELECT
					T.PRODUCTIONORDERID
				,	T.LINENO
				,	T.ENTERPRISEID
				,	T.PLANTID
				,	T.PRODUCTDEFID
				,	T.PRODUCTDEFVERSION
				,	MAX(T.PLANQTY)						AS PLANQTY
				,	ROUND(MAX(T.PLANQTY / T.PCSPNL))	AS PLANPANELQTY
				,	COALESCE(SUM(T.CREATEDQTY), 0)		AS CREATEDQTY
				,	COALESCE(SUM(T.CREATEDPANELQTY), 0)	AS CREATEDPANELQTY
			FROM
			(
				SELECT
						PO.PRODUCTIONORDERID
					,	PO.LINENO
					,	PO.ENTERPRISEID
					,	PO.PLANTID
					,	PO.PRODUCTDEFID
					,	PO.PRODUCTDEFVERSION
					,	PO.PLANQTY
					,	PO.PCSPNL
					,	TO_NUMBER(CASE WHEN PD.PRODUCTDEFTYPE = 'Product' THEN L.CREATEDQTY
							 ELSE L.CREATEDQTY / L.PANELPERQTY * PO.PCSPNL
						END)			AS CREATEDQTY
					,	L.CREATEDQTY / L.PANELPERQTY	AS CREATEDPANELQTY
				FROM	PRODUCT_SO_LIST			PO
				LEFT OUTER JOIN PCM_LOT			L	ON	PO.PRODUCTIONORDERID = L.PRODUCTIONORDERID
													AND	PO.LINENO = L.LINENO
													AND	PO.PRODUCTDEFID = L.PRODUCTDEFID
													AND	PO.PRODUCTDEFVERSION = L.PRODUCTDEFVERSION
													AND	L.ROOTLOTID = L.PARENTLOTID
													AND	L.LOTCREATEDTYPE = 'Normal'
													AND	L.LOTSTATE != 'Created'
													AND L.ISOEM = 'N'
				INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
													AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
				WHERE	1 = 1
			)	T
			GROUP BY T.PRODUCTIONORDERID
					,T.LINENO
					,T.ENTERPRISEID
					,T.PLANTID
					,T.PRODUCTDEFID
					,T.PRODUCTDEFVERSION
		)
		
		,  T_NOTINPUTSTATUS  AS (
			SELECT
					PO.PRODUCTDEFID
				,	PO.PRODUCTDEFVERSION
				,	PD.PRODUCTDEFNAME
				,	COALESCE(PDN.DICTIONARYNAME, PDC.MEANING)									AS PRODUCTIONTYPE
				,	POL.CUSTOMERID
				,	C.CUSTOMERNAME
				,	COALESCE(PTN.DICTIONARYNAME, PT.MEANING)									AS PRODUCTDEFTYPE
				,	POL.LAYER
				,	POL.PCSPNL
				,	POL.PCSMM
				,	SUM(PO.PLANQTY - PO.CREATEDQTY)												AS QTY
				,	SUM(PO.PLANPANELQTY - PO.CREATEDPANELQTY)									AS PANELQTY
				,	ROUND(SUM(((PO.PLANQTY - PO.CREATEDQTY) / POL.PCSMM)), 2) 					AS M2
				--,	SUM((PO.PLANQTY - PO.CREATEDQTY) * POL.SALESPRICE / 100000000)				AS SALESPRICE
				--,	ROUND(TO_NUMBER(SUM((PO.PLANQTY - PO.CREATEDQTY) * POL.SALESPRICE / 100000000)),1)				AS SALESPRICE
				
				-- [금액 수정](21.07.30)
                ,	ROUND(TO_NUMBER(SUM((PO.PLANQTY - PO.CREATEDQTY) * POL.SALESPRICE )),1)				AS SALESPRICE
				
				,	COALESCE(RSN.DICTIONARYNAME, RS.MEANING)									AS RTRSHT
				,	COALESCE(PSN.DICTIONARYNAME, PS.PROCESSSEGMENTNAME)							AS PROCESSSEGMENTNAME
				,	SUM(COALESCE(POL.ORDERQTY, 0)) - SUM(COALESCE(PO.CREATEDQTY, 0))				AS LEFTQTY --잔량
			FROM	QTY						PO
			INNER JOIN PRODUCT_SO_LIST		POL	ON	PO.PRODUCTIONORDERID = POL.PRODUCTIONORDERID
												AND	PO.LINENO = POL.LINENO
												AND	PO.ENTERPRISEID = POL.ENTERPRISEID
												AND	PO.PLANTID = POL.PLANTID
												AND	PO.PRODUCTDEFID = POL.PRODUCTDEFID
												AND	PO.PRODUCTDEFVERSION = POL.PRODUCTDEFVERSION
			INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
													AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
			LEFT OUTER JOIN BAS_CUSTOMER		C	ON	POL.CUSTOMERID = C.CUSTOMERID
			INNER JOIN CMD_LOOKUP_VALUES	PT	ON	PD.PRODUCTDEFTYPE = PT.LOOKUP_CODE
												AND	PT.LOOKUP_TYPE = 'ProductDefType'
			LEFT OUTER JOIN CMD_DICTIONARY	PTN	ON	PT.DICTIONARYID = PTN.DICTIONARYID
												AND	PTN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			INNER JOIN CMD_LOOKUP_VALUES	RS	ON	PD.RTRSHT = RS.LOOKUP_CODE
												AND	RS.LOOKUP_TYPE = 'RTRSHT'
			LEFT OUTER JOIN CMD_DICTIONARY	RSN	ON	RS.DICTIONARYID = RSN.DICTIONARYID
												AND	RSN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			INNER JOIN BAS_PROCESSPATH		PP	ON	PD.PROCESSDEFID = PP.PROCESSDEFID
												AND	PD.PROCESSDEFVERSION = PP.PROCESSDEFVERSION
												--AND	PP.PATHSEQUENCE = 1
												AND	PP.PATHTYPE IN ('Start', 'StartEnd')
			INNER JOIN BAS_PROCESSSEGMENT	PS	ON	PP.PROCESSSEGMENTID = PS.PROCESSSEGMENTID
												AND	PP.PROCESSSEGMENTVERSION = PS.PROCESSSEGMENTVERSION
			LEFT OUTER JOIN CMD_DICTIONARY	PSN	ON	PS.PROCESSSEGMENTNAME = PSN.DICTIONARYID
												AND	PSN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			LEFT OUTER JOIN CMD_LOOKUP_VALUES	PDC	ON	PDC.LOOKUP_CODE = PD.PRODUCTIONTYPE
												AND	PDC.LOOKUP_TYPE = 'ProductionType'
			LEFT OUTER JOIN CMD_DICTIONARY	PDN	ON	PDC.MEANING = PDN.DICTIONARYID
												AND	PDN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			WHERE	1 = 1
				AND		PO.PLANQTY <![CDATA[>]]> PO.CREATEDQTY
				AND     PD.PRODUCTDEFTYPE 	= 'Product'
				AND 	PO.PLANTID 			=  #{PLANTID}
                AND 	PD.PRODUCTIONTYPE 	= 'Production'  -- 양산값
			 
			GROUP BY PO.PRODUCTDEFID
					,PO.PRODUCTDEFVERSION
					,POL.ORGPRODUCTDEFVERSION
					,PD.PRODUCTDEFNAME
					,PD.PRODUCTIONTYPE
					,POL.CUSTOMERID
					,C.CUSTOMERNAME
					,PT.MEANING
					,PTN.DICTIONARYNAME
					,POL.LAYER
					,POL.PCSPNL
					,POL.PCSMM
					,RS.MEANING
					,RSN.DICTIONARYNAME
					,PS.PROCESSSEGMENTNAME
					,PSN.DICTIONARYNAME
					,PDN.DICTIONARYNAME						
					,POL.ORGPRODUCTDEFID
					--,POL.SEQUENCE
					,PDC.MEANING
			ORDER BY POL.ORGPRODUCTDEFID
					,POL.ORGPRODUCTDEFVERSION
		)
		
	
	
	/*################################[21.07.14 미투입 현황 추가]#################################################*/
	
	,	WORKDONEQTY AS(
    
	/*######################################[21.07.14 미투입 현황 추가]###########################################*/
		 --- 메인 안에 같이 넣는다.  미투입 스냅샷처럼 필요 
         SELECT dc.DICTIONARYNAME                                      	WORKDONESEGMENTCLASSNAME
             , 0                                                      	DISPLAYSEQFirst
             , z.WORKDONESEGMENTCLASSID
             , INPUTDAY                                           		INPUTDAY  
             , NULL INPUTPNLQTY
             , NULL INPUTMMQTY
             -- 미투입현황은 재공만 있다.
             , WIPPANELQTY                                             	WIPPANELQTY		
             , WIPMMQTY                                                	WIPMMQTY
             ----------------------------------------------
             -- [금액추가](21.07.30)
             , PRICE 															AS PRICE
             ----------------------------------------------
             
          FROM CMD_DICTIONARY             dc
          LEFT OUTER JOIN
          ( 
			SELECT   -- [현재공 - 미투입] (21.07.14) 
					 (  CASE WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
									  THEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD')		-- (00:00 ~ 08:29) (당일 08:30 이전인데 필터 날자가 당일인 경우) -> 현재공미투입을 이전날짜로 표시
									  -- (21.07.14) 추가 및 이전일 0:00 ~ 08:29분도 이전 날짜가 현재공 미투입으로 나오도록
									  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
									  THEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD')		-- (00:00 ~ 08:29) (당일 08:30 이전인데 필터 날자가 이전날짜인 경우) -> 현재공미투입을 이전날짜로 표시
									  ELSE  TO_CHAR(SYSDATE, 'YYYY-MM-DD') 			-- 나머지 현재공미투입은 현시점날짜로 설정
									  END
						)		AS INPUTDAY   
					 , SUM(PANELQTY)                 	    AS WIPPANELQTY
					 , SUM(M2)                     	        AS WIPMMQTY
					 , 'MENU_PG-SG-0100'                    AS WORKDONESEGMENTCLASSID   -- 미투입 현황
					 
					 --------------------------------------------------------
                     --[금액 추가]		(21.07.30)
                     , SUM(SALESPRICE) 						AS PRICE
                     --------------------------------------------------------
					 
				FROM   T_NOTINPUTSTATUS	
			
			UNION ALL	
			
			-- 이전 데이터 (기초와 같음 당일 생성된 미투입list를 스냅샷으로 관리 -> (ex)07/14 08:30분에 생성된 데이터 07/13일 미투입 내용입니다.)
			SELECT  TXNTIME                             	AS  	INPUTDAY
				 , SUM(PANELQTY)                 	    AS 	WIPPANELQTY
				 , SUM(M2)                     	        	AS 	WIPMMQTY
				 , 'MENU_PG-SG-0100'                    AS 	WORKDONESEGMENTCLASSID   -- 미투입 현황
				 ----------------------------------------------
                 -- [금액추가] (21.07.30)
                 , SUM(SALESPRICE) 						AS 	PRICE
                 ----------------------------------------------
			  FROM (
					
					SELECT      
						 -- [기초 미투입 부분 수정] (21.07.14)
						(  CASE 
								-- (당일 08:30 이전인 상태에서 당일날짜로 조회시)
								  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
								  THEN  
										CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(NI.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
											 THEN  NULL  -- (당일 08:30 이전인 경우 이전날짜) 이전날짜의 경우가 현재공을 봐야됨
											 ELSE  TO_CHAR(TO_DATE(NI.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
											 END
											 
								  -- (당일 08:30 이전인 상태에서 이전날짜로 조회시 )
								  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
								  THEN  
										CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(NI.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
											 THEN  NULL	-- 해당의 경우 (00:00 ~ 08:29 까지의 데이터) 당일일 경우 재공쪽을 본다.
											 ELSE  TO_CHAR(TO_DATE(NI.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
											 END	
											 
								  ELSE  
										-- 그 날짜 그대로 (각 기말 데이터) (21.07.14)
										CASE WHEN  TO_CHAR(SYSDATE, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(NI.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
											 THEN  NULL
											 ELSE  TO_CHAR(TO_DATE(NI.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
											 END
								  END
								  
							) AS TXNTIME
							
						,   NI.PRODUCTDEFID
						,   NI.PRODUCTDEFVERSION
						,   NI.ORGPRODUCTDEFVERSION
						,   NI.PRODUCTIONTYPE    
						,	COALESCE(PDN.DICTIONARYNAME, PDC.MEANING)									AS PRODUCTIONTYPE_NM    
						,   NI.CUSTOMERID    
						,	C.CUSTOMERNAME    
						,   NI.PRODUCTDEFTYPE    
						,	COALESCE(PTN.DICTIONARYNAME, PT.MEANING)									AS PRODUCTDEFTYPE_NM    
						,   NI.LAYER
						,   NI.PROCESSSEGMENTID    
						--,	COALESCE(PSN.DICTIONARYNAME, PS.PROCESSSEGMENTNAME)							AS PROCESSSEGMENTNAME    
						,   NI.PCSPNL
						,   NI.PCSMM
						,   NI.QTY
						,   NI.PANELQTY
						,   NI.M2
						,   NI.SALESPRICE
						,   NI.RTRSHT    
						,	COALESCE(RSN.DICTIONARYNAME, RS.MEANING)									AS RTRSHT_NM    
						,   NI.LEFTQTY
					  from MFM_NOTINPUTSTATUS NI
					  LEFT OUTER JOIN BAS_CUSTOMER		C	ON	NI.CUSTOMERID = C.CUSTOMERID
								INNER JOIN CMD_LOOKUP_VALUES	PT	ON	NI.PRODUCTDEFTYPE = PT.LOOKUP_CODE
																	AND	PT.LOOKUP_TYPE = 'ProductDefType'
								LEFT OUTER JOIN CMD_DICTIONARY	PTN	ON	PT.DICTIONARYID = PTN.DICTIONARYID
																	AND	PTN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
								
								INNER JOIN CMD_LOOKUP_VALUES	RS	ON	NI.RTRSHT = RS.LOOKUP_CODE
																	AND	RS.LOOKUP_TYPE = 'RTRSHT'
								LEFT OUTER JOIN CMD_DICTIONARY	RSN	ON	RS.DICTIONARYID = RSN.DICTIONARYID
																	AND	RSN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
								/*                                    
								INNER JOIN BAS_PROCESSSEGMENT	PS	ON	NI.PROCESSSEGMENTID = PS.PROCESSSEGMENTID
																	--AND	PP.PROCESSSEGMENTVERSION = PS.PROCESSSEGMENTVERSION   --해당 값도 담아야 된다.
								LEFT OUTER JOIN CMD_DICTIONARY	PSN	ON	PS.PROCESSSEGMENTNAME = PSN.DICTIONARYID
																	AND	PSN.LANGUAGETYPE = 'ko-KR'
								*/ 
								LEFT OUTER JOIN CMD_LOOKUP_VALUES	PDC	ON	PDC.LOOKUP_CODE = NI.PRODUCTIONTYPE
																	AND	PDC.LOOKUP_TYPE = 'ProductionType'
								LEFT OUTER JOIN CMD_DICTIONARY	PDN	ON	PDC.MEANING = PDN.DICTIONARYID
																	AND	PDN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
						 WHERE 1 = 1
							AND NI.TXNTIME      <![CDATA[>=]]>   TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))-2, 'YYYY-MM-DD')                           
							AND NI.TXNTIME      <![CDATA[<]]>     TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8),     'YYYY-MM-DD') + (INTERVAL '1' DAY), 'YYYY-MM-DD')
				  ) PR
				  GROUP BY TXNTIME
			)Z
             ON dc.DICTIONARYID  		= z.WORKDONESEGMENTCLASSID
          WHERE dc.LANGUAGETYPE  		= #{SESSION_LANGUAGETYPE}        -- 다국어 코드--'ko-KR'
            AND dc.DICTIONARYID  		= 'MENU_PG-SG-0100' 
	/*######################################[21.07.14 미투입 현황 추가]###########################################*/
	
	UNION
	/********************************************************************************************************
    대공정이 투입현황이면 
       - 실적은 공정관리>>투입관리>>투입실적조회 >> 투입실적탭에서 실적(PNL, MM) 데이터 가져올것
       - 재공은 빈칸
    select id="selectInputResultByInputDay" parameterType="map" resultType="hashmap"
    SelectInputResultByInputDay 10001 
    ********************************************************************************************************/
    SELECT dc.DICTIONARYNAME                                      WORKDONESEGMENTCLASSNAME
         , 1                                                      DISPLAYSEQFirst
         , z.WORKDONESEGMENTCLASSID
         , INPUTDAY                                           INPUTDAY  
         , INPUTPNLQTY
         , INPUTMMQTY
         -- (21.06.18) 투입현황은 재공이 없다.
         , NULL                                                 WIPPANELQTY		
         , NULL                                                 WIPMMQTY
         
         ----------------------------------------------
         -- [금액추가] (21.07.30)
         , PRICE
         ----------------------------------------------
         
      FROM CMD_DICTIONARY             dc
      LEFT OUTER JOIN
          (
            SELECT INPUTDAY
                 , SUM(InputQty)                    	AS INPUTPCSQTY
                 , SUM(pnlinputqty)                 	AS INPUTPNLQTY
                 , SUM(inputmm)                     	AS INPUTMMQTY
                 , 'INPUTSTATUS'                    	AS WORKDONESEGMENTCLASSID
                 
                 ----------------------------------------------
                 -- [금액추가]  (21.07.30)
                 , SUM(INPUTPRICE) 					AS PRICE
                 ----------------------------------------------
                 
            FROM
            (
            --MHYi JOIN 대공정 테이블////////////////////////////////////////////////////////
                SELECT INPUTDAY
                     , INPUTQTY
                     , PNLINPUTQTY
                     , INPUTMM
                     ---------------------------------------
                     , INPUTPRICE  -- 금액 (21.07.30)
                     ---------------------------------------
                FROM
                (
                    --UNION STARTING ===================================
                    SELECT  TO_CHAR (DD.DDAY, 'YYYY-MM-DD') 			AS INPUTDAY
                         ,  L.LOTINPUTQTY                                   		AS INPUTQTY
                         ,  L.LOTINPUTQTY / L.PANELPERQTY                  	AS PNLINPUTQTY
                         ,  ROUND(L.LOTINPUTQTY / PD.PCSMM,2)           AS INPUTMM
                         
                         ------------------------------------------------------------------------------------(21.07.30)
                         ,  NVL(PCM_EXCHANGE_FN(L.PLANTID , SYSDATE , UP.CURRENCY_CODE, L.LOTINPUTQTY * UP.UNITPRICE),0) 		AS INPUTPRICE --1차는 계획 환율만 
                         ------------------------------------------------------------------------------------
                         
                    FROM MFM_PRODUCTIONORDER         PO
                    INNER JOIN PCM_LOT                L    ON PO.PRODUCTDEFID      	= L.PRODUCTDEFID
                                                          AND PO.PRODUCTDEFVERSION 		= L.PRODUCTDEFVERSION
                                                          AND PO.PRODUCTIONORDERID 		= L.PRODUCTIONORDERID
                                                          AND PO.LINENO            				= L.LINENO
                    INNER JOIN CMD_DAY DD                  ON L.LOTSTARTDATE BETWEEN DD.PROD_START_DT AND DD.PROD_END_DT
                                                          AND L.PLANTID            				= DD.PLANTID
                    INNER JOIN BAS_PRODUCTDEFINITION PD    ON L.PRODUCTDEFID  	= PD.PRODUCTDEFID
                                                          AND L.PRODUCTDEFVERSION  		= PD.PRODUCTDEFVERSION
					
					------------------------------------------------------------------------------------
                    -- [금액 추가] (21.07.30)
                    LEFT JOIN BAS_UNITPRICEFORMES    UP ON UP.PRODUCTDEFID = PO.PRODUCTDEFID 
                                                        AND UP.PRODUCTDEFVERSION = PO.PRODUCTDEFVERSION 
                                                        --AND DD.DDAY  BETWEEN APPLY_START_DATE
                                                        AND SYSDATE  BETWEEN APPLY_START_DATE 
                                                        AND NVL(APPLY_END_DATE,TO_TIMESTAMP('9999-12-31 23:59:59','yyyy-MM-dd HH24:MI:SS'))	
                    ------------------------------------------------------------------------------------                                                          
                                                          
                    WHERE 1=1
                    AND L.LOTSTATE                   		<![CDATA[<>]]> 'Created'
                    AND NVL(L.ISDEFECTED ,'N')       		<![CDATA[<>]]> 'Y'
                    AND NVL(L.ISREPRESENTROLLLOT,'') 	<![CDATA[<>]]> 'N'
                    AND L.LOTID                       			= L.PARENTLOTID
                    AND NVL(PD.RTRSHT,'')             		= 'RTR'
                    AND NVL(L.ISOEM,'N')              		= 'N'
                    AND L.LOTSTARTDATE 	        BETWEEN TO_TIMESTAMP( TO_CHAR(TO_DATE(SUBSTR(#{P_DATE}, 1, 8))-2,'YYYY MM DD') || ' 08:30:00','YYYY-MM-DD HH24:MI:SS')
                                                  
                                                    -- (21.06.23) +1 일 추가함 화면에(ex) 16일이면 16 08:30 ~ 17 08:30 까지의 데이터가 필요함
                                                    AND TO_TIMESTAMP(TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYY-MM-DD') + (INTERVAL '1' DAY), 'YYYY-MM-DD') || ' 08:29:59','YYYY-MM-DD HH24:MI:SS')
                                                    
                                                    
                                                    
                    AND L.LOTINPUTQTY                		IS NOT NULL
                    AND L.PLANTID = #{PLANTID}
                    
                    <if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !='' and !(P_PRODCLASSTYPE eq '*'.toString()) ">
                        AND		PD.PRODUCTIONTYPE 		= #{P_PRODCLASSTYPE}
                    </if>
                    <if test="P_PRODDIVISION != null and P_PRODDIVISION !='' and !(P_PRODDIVISION eq '*'.toString()) ">
                        AND		PD.PRODUCTDEFTYPE 		= #{P_PRODDIVISION}
                    </if>
                    
                    

                UNION ALL

                    SELECT TO_CHAR(DD.DDAY ,'YYYY-MM-DD')                   	AS INPUTDAY
                         , L.LOTINPUTQTY                                    				AS INPUTQTY
                         , L.LOTINPUTQTY / L.PANELPERQTY                    		AS PNLINPUTQTY
                         , ROUND(L.LOTINPUTQTY / PD.PCSMM,2)                		AS INPUTMM
                         
                         ------------------------------------------------------------------------------------
                         ,  NVL(PCM_EXCHANGE_FN(L.PLANTID , SYSDATE , UP.CURRENCY_CODE, L.LOTINPUTQTY * UP.UNITPRICE),0) AS INPUTPRICE --1차는 계획 환율만 
                         ------------------------------------------------------------------------------------
                         
                    FROM MFM_PRODUCTIONORDER         PO
                    INNER JOIN PCM_LOT               L     ON  PO.PRODUCTDEFID      = L.PRODUCTDEFID
                                                          AND PO.PRODUCTDEFVERSION  		= L.PRODUCTDEFVERSION
                                                          AND PO.PRODUCTIONORDERID  		= L.PRODUCTIONORDERID
                                                          AND PO.LINENO             				= L.LINENO
                    INNER JOIN CMD_DAY               DD    ON  L.LOTSTARTDATE BETWEEN DD.PROD_START_DT AND DD.PROD_END_DT
                                                          AND L.PLANTID             				= DD.PLANTID
                    INNER JOIN BAS_PRODUCTDEFINITION PD    ON  L.PRODUCTDEFID 	= PD.PRODUCTDEFID
                                                          AND L.PRODUCTDEFVERSION   		= PD.PRODUCTDEFVERSION
                    ------------------------------------------------------------------------------------
                    -- [금액 추가] (21.07.30)
                    LEFT JOIN BAS_UNITPRICEFORMES    UP ON UP.PRODUCTDEFID 		= PO.PRODUCTDEFID 
                                                        AND UP.PRODUCTDEFVERSION 			= PO.PRODUCTDEFVERSION 
                                                        --AND DD.DDAY  BETWEEN APPLY_START_DATE
                                                        AND SYSDATE  BETWEEN APPLY_START_DATE 
                                                        AND NVL(APPLY_END_DATE,TO_TIMESTAMP('9999-12-31 23:59:59','yyyy-MM-dd HH24:MI:SS'))
                    ------------------------------------------------------------------------------------
                    
                    WHERE 1=1
                    AND L.LOTSTATE                      			<![CDATA[<>]]> 'Created'
                    AND NVL(L.ISDEFECTED ,'N')          		<![CDATA[<>]]> 'Y'
                    AND NVL(L.ISREPRESENTROLLLOT,'')    	<![CDATA[<>]]> 'Y'
                    AND L.LOTID                                	= L.PARENTLOTID
                    AND NVL(PD.RTRSHT,'')               		<![CDATA[<>]]> 'RTR'
                    AND L.ISOEM                                   	= 'N'

                                                               
                    AND L.LOTSTARTDATE                         BETWEEN TO_TIMESTAMP( TO_CHAR(TO_DATE(SUBSTR(#{P_DATE}, 1, 8))-2,'YYYY MM DD') || ' 08:30:00','YYYY-MM-DD HH24:MI:SS')                                        
                                                                   --AND TO_TIMESTAMP( SUBSTR(P_DATE,1,8) || ' 08:29:59','YYYY-MM-DD HH24:MI:SS')
                                                                    -- (21.06.23) +1 일 추가함 화면에(ex) 16일이면 16 08:30 ~ 17 08:30 까지의 데이터가 필요함
           											 				AND TO_TIMESTAMP(TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYY-MM-DD') + (INTERVAL '1' DAY), 'YYYY-MM-DD') || ' 08:29:59','YYYY-MM-DD HH24:MI:SS')
                    AND L.LOTINPUTQTY                          IS NOT NULL
                    AND L.PLANTID                                 = #{PLANTID}
                    
                    <if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !='' and !(P_PRODCLASSTYPE eq '*'.toString()) ">
                        AND		PD.PRODUCTIONTYPE 			= #{P_PRODCLASSTYPE}
                    </if>
                    <if test="P_PRODDIVISION != null and P_PRODDIVISION !='' and !(P_PRODDIVISION eq '*'.toString()) ">
                        AND		PD.PRODUCTDEFTYPE 			= #{P_PRODDIVISION}
                    </if>
                    
                --UNION STARTING END===================================
                )X
            --/////////////////////////////////////////////////////////////////////////////
            )Y
            GROUP BY INPUTDAY
        )Z
         ON dc.DICTIONARYID  		= z.WORKDONESEGMENTCLASSID
      WHERE dc.LANGUAGETYPE  	= #{SESSION_LANGUAGETYPE}        -- 다국어 코드--'ko-KR'
        AND dc.DICTIONARYID  		= 'INPUTSTATUS'
    
    UNION
    /********************************************************************************************************
    --1. 이틀간 품목별 실적, 재공조회
    --   조회조건: 양산구분/제품구분/대공정그룹
    대공정이 투입현황이 아니면  공정관리 >> 생산실적 >> 작업실적조회에서 품목 탭의 데이터를 조회
        select id="selectWorkResultList" parameterType="map" resultType="hashmap" 
         SelectWorkResultList 10001 
            if test="TYPE =='BYPRODUCT'"
    ********************************************************************************************************/
                SELECT DC6.DICTIONARYNAME                       	WORKDONESEGMENTCLASSNAME
                     , 2                                        				DISPLAYSEQFirst
                     , wsc.WORKDONESEGMENTCLASSID
                     , WR.SENDDAY											AS INPUTDAY			-- (21.06.16) 변경
                     , SUM(COALESCE(SENDPANELQTY ,0))       		AS INPUTPNLQTY		-- (21.06.16) 변경
                     , SUM(COALESCE(SENDMMQTY ,0))          		AS INPUTMMQTY		-- (21.06.16) 변경
                     , SUM(COALESCE(WIPPANELQTY ,0))        		AS WIPPANELQTY
                     , SUM(COALESCE(WIPMMQTY ,0))           		AS WIPMMQTY
                     
                     ------------------------------------------------------------ (21.07.30)
                     , SUM(COALESCE(WR.PRICE ,0))           			AS PRICE    
                     ------------------------------------------------------------
                     
                  FROM MFM_WORKDONESEGMENTCLASS    		wsc
                  LEFT OUTER JOIN MFM_WORKDONESEGMENTREL wsr
                    ON wsc.WORKDONESEGMENTCLASSID          	= wsr.WORKDONETOPSEGMENTCLASSID
                  LEFT OUTER JOIN BAS_PROCESSSEGMENT  PS     
                  	ON WSR.PROCESSSEGMENTID             			= PS.PROCESSSEGMENTID
                  LEFT OUTER JOIN (
                        -- [실적]
                        SELECT LWR.PLANTID
                             , L.LOTTYPE
                             , LWR.PROCESSSEGMENTID
                             , LWR.PROCESSSEGMENTVERSION
                             , LWR.PRODUCTDEFID
                             , LWR.PRODUCTDEFVERSION
                             , PD.PRODUCTDEFNAME
                             --, LWR.LOTID						-- (21.06.16) LOT ID 주석처리
                             , LWR.AREAID
                             , COALESCE(PD.RTRSHT, 'SHT')   	AS RTRSHT
                             , 0                            			AS BASEPCSQTY
                             , 0                            			AS BASEPANELQTY
                             , 0                            			AS BASEMMQTY
                             , SUM(LWR.SENDPCSQTY)          	AS SENDPCSQTY
                             , SUM(LWR.SENDPANELQTY)        AS SENDPANELQTY
                             ,  SUM(NVL(ROUND((LWR.SENDPCSQTY / PD.PCSMM), 2) ,0))  AS SENDMMQTY
                             , COUNT(1)                     			AS SENDLOTCNT
                             , 0                           				AS WIPPCSQTY
                             , 0                            			AS WIPPANELQTY
                             , 0                            			AS WIPMMQTY
                             , 0                            			AS INPUTPCSQTY
                             , 0                            			AS INPUTPANELQTY
                             , 0                            			AS INPUTMMQTY
                             , CASE WHEN COALESCE(LWR.ISREWORK, 'N') = 'Y' OR COALESCE(LWR.WORKCOUNT, 0) <![CDATA[>]]> 0 THEN 'IsRework'
                                    WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                    WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                END                         AS WORKTYPE
                                
                             ,	L.USERSEQUENCE 										AS USERSEQUENCE                     	-- [21.06.16] 추가   
                             --, TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')         SENDDAY									-- [21.06.16] 주석 처리 변경
                             
                             -- (21.06.15) 전날 08:30 다음날 08:29:59 까지 가 전날값 
                             , (  CASE WHEN  	TO_CHAR(LWR.SENDTIME, 'HH24MISS')  <![CDATA[<]]>  '083000'       
                                      THEN 		TO_CHAR(LWR.SENDTIME - 1, 'YYYY-MM-DD')
                                      ELSE 		TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')
                                      END
                                ) AS SENDDAY
                                
                             ----------------------------------------------
                             -- [금액추가]
                             , 0 AS PRICE
                             ----------------------------------------------
                             
                        FROM    PCM_LOTWORKRESULT LWR
                        INNER JOIN  BAS_PRODUCTDEFINITION     PD  
                   		ON LWR.PRODUCTDEFID      		= PD.PRODUCTDEFID
                        AND LWR.PRODUCTDEFVERSION 	= PD.PRODUCTDEFVERSION
                        LEFT OUTER JOIN PCM_LOT              L    
                        ON LWR.LOTID             				= L.LOTID
    
                        WHERE 1=1
                            --AND LWR.RESULTTYPE  NOT IN ('SKIP')				-- [21.06.01] - 이건 AREA 조건임.. 품목조건은 밑에 내용...
                            AND COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
                            AND LWR.SENDTIME      <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))- 2, 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')                            
                            AND LWR.SENDTIME      <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYY-MM-DD') + (INTERVAL '1' DAY), 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')
                            AND LWR.SENDPCSQTY <![CDATA[>]]> 0
                            
                            <if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !='' and !(P_PRODCLASSTYPE eq '*'.toString()) ">
		                        AND		PD.PRODUCTIONTYPE = #{P_PRODCLASSTYPE}
		                    </if>
		                    <if test="P_PRODDIVISION != null and P_PRODDIVISION !='' and !(P_PRODDIVISION eq '*'.toString()) ">
		                        AND		PD.PRODUCTDEFTYPE = #{P_PRODDIVISION}
		                    </if>
		                    
		                    <if test="PLANTID != null and PLANTID !=''">
								AND LWR.PLANTID = #{PLANTID}			
							</if>
							
							-- [조건 추가 수정 필요함 21.06.16]
							AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
                            AND     COALESCE(L.ISHOLD, 'N') = 'N'           				--(21.06.14) 추가
                            --AND     L.LOTSTATE IN ('InProduction', 'InTransit')			--(21.06.16) 추가
                            AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')	-- (21.06.22) 수정
                            AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]>  'Return'	--(21.06.16) 추가
		                    
                        GROUP BY
                                LWR.PLANTID
                            ,   L.LOTTYPE
                            ,   LWR.PROCESSSEGMENTID
                            ,   LWR.PROCESSSEGMENTVERSION
                            ,   LWR.PRODUCTDEFID
                            ,   LWR.PRODUCTDEFVERSION
                            ,   PD.PRODUCTDEFNAME
                            ,   LWR.LOTID
                            ,   LWR.AREAID
                            ,   COALESCE(PD.RTRSHT, 'SHT')
                            ,   CASE WHEN COALESCE(LWR.ISREWORK, 'N') = 'Y' OR COALESCE(LWR.WORKCOUNT, 0)  <![CDATA[>]]> 0 THEN 'IsRework'
                                     WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                     WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                END
                                
                            --, TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')                            
                            ,	L.USERSEQUENCE
                            -- (21.06.15) 전날 08:30 다음날 08:29:59 까지 가 전날값 
                            , (  CASE WHEN  	TO_CHAR(LWR.SENDTIME, 'HH24MISS')  <![CDATA[<]]> '083000'       
                                      THEN 		TO_CHAR(LWR.SENDTIME - 1, 'YYYY-MM-DD')
                                      ELSE 		TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')
                                      END
                                )
                        
                        -- [21.06.16] 기초 추가
                        
                        UNION ALL
                         -- 기초
                                SELECT
                                        WS.PLANTID
                                    ,	WS.LOTTYPE
                                    ,	WS.PROCESSSEGMENTID
                                    ,	WS.PROCESSSEGMENTVERSION
                                    ,	WS.PRODUCTDEFID
                                    ,	WS.PRODUCTDEFVERSION
                                    ,	WS.PRODUCTDEFNAME
                                    --,	WS.LOTID
                                    ,	WS.AREAID
                                    ,	WS.RTRSHT
                                    ,	SUM(WS.QTY)		AS BASEPCSQTY
                                    ,	SUM(PANELQTY)	AS BASEPANELQTY
                                    , 	SUM(NVL(ROUND((WS.QTY / WS.PCSMM), 2),0))	AS BASEMMQTY
                                    ,	0				AS SENDPCSQTY
                                    ,	0				AS SENDPANELQTY
                                    , 	0				AS SENDMMQTY
                                    ,	0				AS SENDLOTCNT
                                    
--                                 ,	0				AS WIPPCSQTY
--                                 ,	0				AS WIPPANELQTY
--                                 , 	0				AS WIPMMQTY
                                    
                                    ,	SUM(WS.QTY)		AS WIPPCSQTY
                                    ,	SUM(PANELQTY)	AS WIPPANELQTY
                                    , 	SUM(NVL(ROUND((WS.QTY / WS.PCSMM), 2),0))	AS WIPMMQTY
                                    
                                    ,	0				AS INPUTPCSQTY
                                    ,	0				AS INPUTPANELQTY
                                    , 	0				AS INPUTMMQTY
                                    ,	''				AS WORKTYPE
                                    ,	WS.USERSEQUENCE AS USERSEQUENCE
                                    ,   TO_CHAR(TO_DATE(WS.TXNTIME),'YYYY-MM-DD')      AS SENDDAY
                                    
                                    ----------------------------------------------
                                    -- [금액추가] (21.07.30)
                                    ,   ROUND(
                                    		SUM(PRICE) 
                                    	,0)
                                    	AS PRICE
                                    ----------------------------------------------
                                     
                                FROM(
                                    SELECT 
                                           -- WS.TXNTIME
                                           
                                           	
                                            --	TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')+1, 'YYYY-MM-DD')  AS TXNTIME
                                            -- (21.06.17) -> 현재공과 기초 번갈아 가면서 나오도록 적용
                                           /*
                                             당일 08:30 이전이면 이전날 데이터가 있어도 기초로 나오지 않고 현재공을 보도록 
                                             당일 08:30 이후이면 당일, 이전날 데이터 생성됨 당일은 현재공, 이전날은 기초값 보도록 설정
                                             
                                             (21.07.07 수정) - 08:30 이전 (당일이면 현재공) 08:30 이후이면 해당일 08:30에 생성된 스냅샷자료 이전일 자료 -> 해당일의 기말자료 = 해당일의 재공이됨
                                           */
                                       -- [기초 부분 수정] (21.07.07)
										(  CASE 
												-- (당일 08:30 이전인 상태에서 당일날짜로 조회시)
												WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  NULL  -- (당일 08:30 이전인 경우 이전날짜) 이전날짜의 경우가 현재공을 봐야됨
															 ELSE  TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END
															 
												  -- (당일 08:30 이전인 상태에서 이전날짜로 조회시 )
												  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  NULL	-- 해당의 경우 (00:00 ~ 08:29 까지의 데이터) 당일일 경우 재공쪽을 본다.
															 ELSE  TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END	
															 
												  ELSE  
														-- 그 날짜 그대로 (각 기말 데이터) (21.07.07)
														CASE WHEN  TO_CHAR(SYSDATE, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  NULL
															 ELSE  TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 END
												  END
											) AS TXNTIME
                                            
                                        ,	WS.LOTTYPE
                                        ,	WS.PLANTID
                                        ,	WS.PRODUCTDEFID
                                        ,	WS.PRODUCTDEFVERSION
                                        ,	PD.PRODUCTDEFNAME
                                        ,	WS.PROCESSSEGMENTID
                                        ,	WS.PROCESSSEGMENTVERSION
                                        --,	L.LOTID
                                        ,	WS.AREAID
                                        ,	WS.QTY
                                        ,	WS.PANELQTY
                                        ,	COALESCE(PD.RTRSHT, 'SHT')	AS RTRSHT
                                        ,	PD.PCSMM
                                        ,	BP.USERSEQUENCE
                                        
                                        --------------------------------------------------------
                                        -- (21.08.05) 개별 반올림 후 더한다 [공정관리 > 재공관리 > 모델별 재공조회 에서 합계 금액 계산 처럼]
                                        --, ROUND(NVL(P.SALEPRICE,0) * NVL(WS.QTY,0),0) AS PRICE       -- [금액추가](21.07.30)
                                        
                                        
                                        , --ROUND(
                                        NVL(PCM_EXCHANGE_FN(WS.PLANTID , 
                                            (  CASE 
												-- (당일 08:30 이전인 상태에서 당일날짜로 조회시)
												WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  SYSDATE  -- (당일 08:30 이전인 경우 이전날짜) 이전날짜의 경우가 현재공을 봐야됨
															 ELSE  TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END															 
												  -- (당일 08:30 이전인 상태에서 이전날짜로 조회시 )
												  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  SYSDATE	-- 해당의 경우 (00:00 ~ 08:29 까지의 데이터) 당일일 경우 재공쪽을 본다.
															 ELSE  TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END																 
												  ELSE  
														-- 그 날짜 그대로 (각 기말 데이터) (21.07.07)
														CASE WHEN  TO_CHAR(SYSDATE, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  SYSDATE
															 ELSE  TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')
															 END
												  END
											)
                                        , UP.CURRENCY_CODE, NVL(WS.QTY,0) * UP.UNITPRICE),0)
                                        --,0)	
                                        PRICE
                                        
                                        --------------------------------------------------------
                                         
                                    FROM PCM_WIPSUMMARYPERDAILY		WS
                                    INNER JOIN BAS_PRODUCTDEFINITION		PD	
                                    ON	WS.PRODUCTDEFID 				= PD.PRODUCTDEFID
                                    AND	WS.PRODUCTDEFVERSION 		= PD.PRODUCTDEFVERSION
                                    INNER JOIN BAS_PROCESSPATH				BP 	
                                    ON BP.PROCESSDEFID  					= WS.PRODUCTDEFID 
                                    AND	BP.PROCESSDEFVERSION 			= WS.PRODUCTDEFVERSION
                                    AND	BP.PROCESSSEGMENTID 			= WS.PROCESSSEGMENTID
                                    
                                    --------------------------------------------------------
                                    /*
                                    -- [금액 부분 추가]
                                    LEFT JOIN T_PRICE P
                                     ON    WS.PRODUCTDEFID      			= P.PRODUCTDEFID
                                     AND   WS.PRODUCTDEFVERSION 		= P.PRODUCTDEFVERSION
                                    */
                                    --------------------------------------------------------
                                    
                                    LEFT OUTER JOIN BAS_UNITPRICEFORMES UP   ON WS.PRODUCTDEFID         = UP.PRODUCTDEFID 
                                              AND WS.PRODUCTDEFVERSION    = UP.PRODUCTDEFVERSION 
                                              AND SYSDATE BETWEEN UP.APPLY_START_DATE AND NVL(UP.APPLY_END_DATE, TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'))  
                                    
                                    WHERE 1=1
                                    
                                   	-- (21.06.15) PCM_WIPSUMMARYPERDAILY (EX) 14일 기말 = 15일 기초 -> 기말의 데이터들이 들어가 있다. (기초값은 이전날의 기말과 같음)
                                  	-- (21.07.07) 조건 변경 
									AND WS.TXNTIME      <![CDATA[>=]]>   TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))-2, 'YYYY-MM-DD')                           
									AND WS.TXNTIME      <![CDATA[<]]>     TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8),     'YYYY-MM-DD') + (INTERVAL '1' DAY), 'YYYY-MM-DD')
                                   
                                   <if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !=''">
										AND WS.LOTTYPE 					= #{PRODUCTIONTYPE}			
								   </if>
								   -- site
								   <if test="PLANTID != null and PLANTID !=''">
										AND WS.PLANTID 					= #{PLANTID}		
								   </if>
								   -- 제품구분
								   <if test="P_PRODDIVISION != null and P_PRODDIVISION !=''">
										AND	PD.PRODUCTDEFTYPE 		= #{PRODUCTDIVISION}
								   </if>          
                                        
                                                            
                                )	WS
                                GROUP BY 	
                                        WS.TXNTIME
                                    ,	WS.LOTTYPE
                                    ,	WS.PLANTID
                                    ,	WS.PROCESSSEGMENTID
                                    ,	WS.PROCESSSEGMENTVERSION
                                    ,	WS.PRODUCTDEFID
                                    ,	WS.PRODUCTDEFVERSION
                                    ,	WS.PRODUCTDEFNAME
                                    ,	WS.AREAID
                                    ,	WS.RTRSHT
                                    ,	WS.USERSEQUENCE
                                    --, 	TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')+1, 'YYYY-MM-DD')
                                    ,   TO_CHAR(TO_DATE(WS.TXNTIME),'YYYY-MM-DD')  -- (21.06.17) 수정 -> 그룹 재 지정
                                
                        
                            
                        UNION ALL
                        -- 재공
                        SELECT L.PLANTID
                             , L.LOTTYPE
                             , L.PROCESSSEGMENTID
                             , L.PROCESSSEGMENTVERSION
                             , L.PRODUCTDEFID
                             , L.PRODUCTDEFVERSION
                             , PD.PRODUCTDEFNAME
                             --, L.LOTID
                             , L.AREAID
                             , COALESCE(PD.RTRSHT, 'SHT')                   AS RTRSHT
                             , 0                                            AS BASEPCSQTY
                             , 0                                            AS BASEPANELQTY
                             , 0                                            AS BASEMMQTY
                             , 0                                            AS SENDPCSQTY
                             , 0                                            AS SENDPANELQTY
                             , 0                                            AS SENDMMQTY
                             , 0                                            AS SENDLOTCNT
                             , SUM(L.PCSQTY)                                AS WIPQTY
                             , SUM(L.PANELQTY)                              AS WIPPANELQTY
                             , SUM(NVL(ROUND((L.PCSQTY / PD.PCSMM), 2) ,0)) AS WIPMMQTY
                             , 0                                            AS INPUTPCSQTY
                             , 0                                            AS INPUTPANELQTY
                             , 0                                            AS INPUTMMQTY
                             , CASE WHEN COALESCE(L.ISREWORK, 'N') = 'Y' OR COALESCE(L.WORKCOUNT, 0) <![CDATA[>]]> 0 THEN 'IsRework'
                                    WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                    WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                END                                   AS WORKTYPE
                             --, TO_CHAR(L.SENDTIME, 'YYYY-MM-DD')         SENDDAY							--  인계시간(21.05.17 김진현 주석)
                             --, TO_CHAR(NVL(L.SENDTIME, SYSDATE), 'YYYY-MM-DD')		AS SENDDAY	--  (21.06.02) NULL 값인 경우 현재 일시로 설정
                             
                             ,	L.USERSEQUENCE 				AS USERSEQUENCE
                             
                             -- [현재공] (21.07.07) - 수정 
							, (  CASE WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
									  THEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD')		-- (00:00 ~ 08:29) (당일 08:30 이전인데 필터 날자가 당일인 경우) -> 현재공을 이전날짜로 표시
									  -- (21.07.07) 추가 및 이전일 0:00 ~ 08:29분도 이전 날짜가 현재공으로 나오도록
									  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
									  THEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD')		-- (00:00 ~ 08:29) (당일 08:30 이전인데 필터 날자가 이전날짜인 경우) -> 현재공을 이전날짜로 표시
									  ELSE  TO_CHAR(SYSDATE, 'YYYY-MM-DD') 			-- 나머지 현재공은 현시점날짜로 설정
									  END
								) AS SENDDAY
                             
                             --------------------------------------------------------
                             -- (21.08.05) 개별 반올림 후 더한다 [공정관리 > 재공관리 > 모델별 재공조회 에서 합계 금액 계산 처럼]
                             --, ROUND(SUM(NVL(P.SALEPRICE,0) * NVL(L.PCSQTY,0)),0) AS PRICE       -- [금액추가]
                             
                             -- (21.08.05) 수량이 같을때 기초 = 재공 하기 위해서 sum 후 반올림 적용 (재공 기초 다른 이유 -> 재공의 경우 lot 단위로 반올림 후 합계 -> 품목단위 / 기초의 경우 품목코드단위로 값이 존재함 )
                             -- 동일하게 함수 호출 [공정관리 > 재공관리 > 모델별 재공조회] 다른건 sum 후 반올림 실행 (당일재공 = 기초값 수량 변동 없는 경우 같아보이게 처리 위함)
                            , ROUND(
                              SUM(
                                NVL(PCM_EXCHANGE_FN(L.PLANTID , 
                                (  CASE WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                                  THEN  SYSDATE-1                                                  
                                                  -- (21.07.07) 추가 및 이전일 0:00 ~ 08:29분도 이전 날짜가 현재공으로 나오도록
                                                  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                                  THEN  SYSDATE-1		-- (00:00 ~ 08:29) (당일 08:30 이전인데 필터 날자가 이전날짜인 경우) -> 현재공을 이전날짜로 표시                                                  
                                                  ELSE  SYSDATE 
                                                  END
                                            )
                                
                                , UP.CURRENCY_CODE, NVL(L.PCSQTY,0) * UP.UNITPRICE),0)
                                )
                                ,0)
                            PRICE
                             
                             
                             --------------------------------------------------------
                             
                        FROM PCM_LOT                    L
                        INNER JOIN BAS_PRODUCTDEFINITION    PD  
                        ON L.PRODUCTDEFID      			= PD.PRODUCTDEFID
                        AND L.PRODUCTDEFVERSION 		= PD.PRODUCTDEFVERSION
                        
                        --------------------------------------------------------
                        /*
                         -- [금액 부분 추가]
                         LEFT JOIN T_PRICE P
                          ON    L.PRODUCTDEFID      		= P.PRODUCTDEFID
                          AND   L.PRODUCTDEFVERSION 	= P.PRODUCTDEFVERSION
                          */
                         --------------------------------------------------------
                         
                         -- (21.08.05) 동일하게 함수 호출 해서 금액 구함
                         LEFT OUTER JOIN BAS_UNITPRICEFORMES UP   ON L.PRODUCTDEFID         = UP.PRODUCTDEFID 
                                              AND L.PRODUCTDEFVERSION    = UP.PRODUCTDEFVERSION 
                                              AND SYSDATE BETWEEN UP.APPLY_START_DATE AND NVL(UP.APPLY_END_DATE, TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'))
                         
                        
                        WHERE   1 = 1
                        AND     L.LOTSTATE          IN ('InProduction', 'InTransit')
                        --AND     L.ISDEFECTED         = 'N'
                        --AND     L.ISREPRESENTROLLLOT = 'N'
                        
                        --AND     L.LOTSTATE IN ('InProduction', 'InTransit')
                        --AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')	-- (21.06.22) 수정   -> (21.06.23) Finished 다시 제거 
						AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
						AND     COALESCE(L.ISHOLD, 'N') = 'N'
						AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'				--(21.06.17) 추가
                        
                        <if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !='' and !(P_PRODCLASSTYPE eq '*'.toString()) ">
		                     AND		PD.PRODUCTIONTYPE = #{P_PRODCLASSTYPE}
	                    </if>
	                    <if test="P_PRODDIVISION != null and P_PRODDIVISION !='' and !(P_PRODDIVISION eq '*'.toString()) ">
	                        AND		PD.PRODUCTDEFTYPE = #{P_PRODDIVISION}
	                    </if>
	                    <if test="PLANTID != null and PLANTID !=''">
							AND 		L.PLANTID = #{PLANTID}			
						</if>
                        
                        GROUP BY L.PLANTID
                            ,    L.LOTTYPE
                            ,    L.PROCESSSEGMENTID
                            ,    L.PROCESSSEGMENTVERSION
                            ,    L.PRODUCTDEFID
                            ,    L.PRODUCTDEFVERSION
                            ,    PD.PRODUCTDEFNAME
                            --,    L.LOTID
                            ,    L.AREAID
                            ,   COALESCE(PD.RTRSHT, 'SHT')
                            ,   CASE WHEN COALESCE(L.ISREWORK, 'N') = 'Y' OR COALESCE(L.WORKCOUNT, 0) <![CDATA[>]]> 0 THEN 'IsRework'
                                     WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                     WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                 END
                            --,   TO_CHAR(L.SENDTIME, 'YYYY-MM-DD')
                            --,  TO_CHAR(NVL(L.SENDTIME, SYSDATE), 'YYYY-MM-DD')		--(21.06.02) NULL 값인 경우 현재 일시로 설정
                            ,	L.USERSEQUENCE
                            --(21.06.15) 0830이전이면서 조회 날짜가 현시점의 날짜와 같은 경우 이전 날자로 설정, 그 외 SYSDATE로 설정
                            ,(  CASE WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                      THEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') 
                                      ELSE  TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
                                      END
                                )
                            
                    ) WR                                            ON WR.PROCESSSEGMENTID             = PS.PROCESSSEGMENTID
                -- (21.06.16) INNER -> LEFT    
                LEFT JOIN FN_AREA(#{MODIFIER}) A                   ON WR.AREAID                       = A.AREAID
                LEFT  OUTER JOIN CMD_DICTIONARY             dc6     ON dc6.DICTIONARYID                = wsc.WORKDONESEGMENTCLASSNAME
                                                                   AND dc6.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                LEFT OUTER JOIN CMD_DICTIONARY              DC1     ON PS.PROCESSSEGMENTNAME           = DC1.DICTIONARYID
                                                                   AND DC1.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                LEFT OUTER JOIN CMD_DICTIONARY              DC2     ON A.AREANAME                      = DC2.DICTIONARYID
                                                                   AND DC2.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                LEFT JOIN CMD_LOOKUP_VALUES                 CDL     ON WR.LOTTYPE                      = CDL.LOOKUP_CODE
                                                                   AND CDL.LOOKUP_TYPE                 = 'ProductionType'
                LEFT JOIN CMD_DICTIONARY                    DC5     ON  CDL.DICTIONARYID               = DC5.DICTIONARYID
                                                                   AND DC5.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                WHERE 1 = 1
                  AND wsc.WORKDONESEGMENTCLASSTYPE    = 'TopWorkDoneSegmentClass'												-- 주요 공정 실적 현황판 대공정 (21.05.17 대공정 그룹)
                GROUP BY
                    WR.SENDDAY
                ,   DC6.DICTIONARYNAME
                ,   wsc.WORKDONESEGMENTCLASSID
  
)
-- 대공정 + 투입현황 -> 3일치 로 조회 (김진현 21.05.17)

	SELECT WORKDONESEGMENTCLASSID
           ,  WORKDONESEGMENTCLASSNAME
           ,  DISPLAYSEQFIRST
           ,  SEQDISPLAY
           ,  ISLEFTORRIGHTDISPLAY			-- 좌 / 우 컬럼
           ,  ${COLUMNS_SELECT}				-- 3일치 생성될 컬럼
           	  
	 FROM ( 
		        --기존 쿼리
		        SELECT s.WORKDONESEGMENTCLASSID           WORKDONESEGMENTCLASSID
		             , s.DDAY                             INPUTDAY
		             , s.WORKDONESEGMENTCLASSNAME         WORKDONESEGMENTCLASSNAME
		             --, wd.DISPLAYSEQFirst
		             , CASE WHEN s.WORKDONESEGMENTCLASSID = 'INPUTSTATUS'
                           THEN  NVL(wd.DISPLAYSEQFirst,1)
						   
						   --######################################################
                           -- (21.07.14) 미투입 추가
                           WHEN s.WORKDONESEGMENTCLASSID = 'MENU_PG-SG-0100'
                           THEN  NVL(wd.DISPLAYSEQFirst,0)
                           --######################################################
						   
                           ELSE  	NVL(wd.DISPLAYSEQFirst,2)
                           END
                           AS DISPLAYSEQFirst               -- [21.05.17 김진현 조건 추가]  투입현황의 경우 NULL 값 있을 시 하나로 통합. 1 설정
		             --, wd.INPUTDAY  
		             , wd.INPUTPNLQTY
		             , wd.INPUTMMQTY
		             , wd.WIPPANELQTY
		             , wd.WIPMMQTY
		             , s.SEQDISPLAY
		             , s.ISLEFTORRIGHTDISPLAY               -- [21.05.17 김진현 조건 추가] (화면에서 좌우 구분 사용)
		             
		             ---------------------------------------
                     , (wd.PRICE / 1000000)       AS PRICE        -- 금액 추가 (21.07.30)    (메인만 100만단위)
                     
                     --, (wd.PRICE)       AS PRICE        -- 금액 추가 (21.07.30)    (메인만 100만단위)
                     ---------------------------------------
		             
		          FROM WORKDONEQTY wd
		         RIGHT OUTER JOIN (
		                            SELECT wsc.WORKDONESEGMENTCLASSID  
		                                 , TO_CHAR(d.DDAY, 'YYYY-MM-DD')                  DDAY
		                                 , wsc.ISLEFTORRIGHTDISPLAY  
		                                 , wsc.WORKDONESEGMENTCLASSNAME
		                                 , wsc.SEQDISPLAY
		                              FROM CMD_DAY                d     
		                             CROSS JOIN(
		                                        
												 
												 --######################################################
												 -- (21.07.14) 미투입 추가
												 SELECT dc.DICTIONARYID                 WORKDONESEGMENTCLASSID  
														, 'LEFT'                          ISLEFTORRIGHTDISPLAY
														, dc.DICTIONARYNAME               WORKDONESEGMENTCLASSNAME
														, 0                               SEQDISPLAY     
													 FROM CMD_DICTIONARY dc
													WHERE DICTIONARYID      = 'MENU_PG-SG-0100'											-- [미투입현황 다국어 21.05.17 김진현]
													  AND dc.LANGUAGETYPE   = #{SESSION_LANGUAGETYPE}
												 UNION
												 
 												 SELECT dc.DICTIONARYID                 	WORKDONESEGMENTCLASSID  
		                                                , 'LEFT'                          	ISLEFTORRIGHTDISPLAY
		                                                , dc.DICTIONARYNAME               	WORKDONESEGMENTCLASSNAME
		                                                , 0.5                             	SEQDISPLAY     							-- (21.07.14) 0 -> 0.5로 수정
		                                             FROM CMD_DICTIONARY dc
		                                            WHERE DICTIONARYID      = 'INPUTSTATUS'											-- [투입현황 다국어 21.05.17 김진현]
		                                              AND dc.LANGUAGETYPE   = #{SESSION_LANGUAGETYPE}
		                                         UNION
		                                         SELECT wsc.WORKDONESEGMENTCLASSID
		                                              , wsc.ISLEFTORRIGHTDISPLAY															-- [좌/우] 21.05.17 김진현
		                                              , dc.DICTIONARYNAME               WORKDONESEGMENTCLASSNAME
		                                              , wsc.SEQDISPLAY     
		                                           FROM MFM_WORKDONESEGMENTCLASS  wsc
		                                           LEFT OUTER JOIN CMD_DICTIONARY dc 
		                                                   ON dc.DICTIONARYID      = wsc.WORKDONESEGMENTCLASSNAME
		                                          WHERE WORKDONESEGMENTCLASSTYPE   = 'TopWorkDoneSegmentClass' 		-- [대공정 그룹 - 주요 공정 실적 현황 21.05.17 김진현]
		                                            AND wsc.VALIDSTATE             = 'Valid'
		                                          AND dc.LANGUAGETYPE              = #{SESSION_LANGUAGETYPE}              	--'ko-KR' 
		                                       ) wsc
		                             WHERE d.SDAY BETWEEN  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))-2, 'YYYYMMDD') AND SUBSTR(#{P_DATE},1, 8)
		                           ) s
		                        ON s.WORKDONESEGMENTCLASSID = wd.WORKDONESEGMENTCLASSID
		                       AND s.DDAY                   = wd.INPUTDAY 
		          WHERE 1=1
		            --AND wd.displayseqfirst      IS NOT NULL              --값이 NULL이면 삭제
		            --AND s.ISLEFTORRIGHTDISPLAY  = 'LEFT'                 --왼쪽만 사용할 경우
		          ORDER BY wd.DISPLAYSEQFIRST
			)
		    PIVOT ( SUM(INPUTPNLQTY)   		AS SUM_INPUTPNLQTY
		           , SUM(INPUTMMQTY)  			AS SUM_INPUTMMQTY
		           , SUM(WIPPANELQTY)  			AS SUM_WIPPANELQTY
		           , SUM(WIPMMQTY)     			AS SUM_WIPMMQTY
		           ------------------------------------(21.07.30) 금액추가
                   , SUM(PRICE)             		AS SUM_PRICE
                   ------------------------------------
		           
		           FOR 	INPUTDAY   
		           IN(		${COLUMNS}	)
	                         	
			)
			
			ORDER BY  SEQDISPLAY			-- [21.05.17 정렬 추가]	
	</select>
	 

	<!--
		설		명	: 주요 공정 실적 현황판 - Detail Left조회
		생	성	자	: 김진현
		생	성	일	: 2021-05-18 
		수  정   이  력	:
	-->
	<select id="selectWorkDoneDetailLeftList" parameterType="map" resultType="hashmap">
/*selectWorkDoneDetailLeftList - 주요 공정 실적 현황판 - Detail Left */



	/*################################[21.07.30 단가(금액) 추가]#################################################*/
		/*  공정관리 > 투입관리 > 단가 Table 쿼리 참조*/
		-- (21.07.29) - 금액 계산을 위해 단가 Table 추가 
		WITH  T_PRICE AS (
        SELECT    PRD.PLANTID 	
                        , PRD.PRODUCTDEFID 
                        , PRD.PRODUCTDEFVERSION 				
                        , UPR.CURRENCY_CODE     -- 단위
                        , PRD.UNIT       	AS UOM      -- 
                        , NVL(EXC.EXCHANGE_RATE,1) 					AS EXCHANGE_RATE
                        , UPR.UNITPRICE * NVL(EXC.EXCHANGE_RATE,1) 	AS SALEPRICE                -- 판가 해당 값과 pcs 수량 곱해서 계산
                  FROM BAS_ITEMMASTER IM
                  INNER JOIN BAS_PRODUCTDEFINITION PRD 		ON  PRD.PRODUCTDEFID = ITEMID
                                                            AND PRD.PRODUCTDEFVERSION = ITEMVERSION
                  INNER JOIN BAS_UNITPRICEFORMES UPR 		-- [단가]
                                                            ON  IM.ENTERPRISEID = UPR.ENTERPRISEID
                                                            AND IM.ITEMID = UPR.PRODUCTDEFID
                                                            AND IM.ITEMVERSION = UPR.PRODUCTDEFVERSION
                  LEFT JOIN BAS_EXCHANGE EXC				-- [환율]
                                                            ON  UPR.CURRENCY_CODE = EXC.CURRENCY_CODE
                                                            AND EXC.PERIOD_NAME = TO_CHAR(SYSDATE ,'YYYY-MM')
                 /*
                  LEFT OUTER JOIN BAS_CUSTOMER      CUST    ON  PRD.ENTERPRISEID = CUST.ENTERPRISEID 
                                                            AND PRD.PLANTID = CUST.PLANTID
                                                            AND PRD.CUSTOMERID =  CUST.CUSTOMERID  
                                                            */
                  LEFT OUTER JOIN BAS_PRODUCTITEMSPEC PIS   ON  IM.ENTERPRISEID = PIS.ENTERPRISEID
                                                            AND IM.ITEMID = PIS.ITEMID
                                                            AND IM.ITEMVERSION = PIS.ITEMVERSION
                  /*
                  LEFT OUTER JOIN CMD_USERS         MUSER   ON  UPR.ENTERPRISEID = MUSER.ENTERPRISEID
                                                            AND UPR.MODIFIER =  MUSER.USER_ID           
                                                            */
                WHERE 1=1
                  AND PRD.PLANTID = #{PLANTID}
        )
        ----------------------------------------------------------------------------------------------------------------------[단가 ↑]

	, WORKDONEQTY AS(
    /********************************************************************************************************
    --1. 이틀간 품목별 실적, 재공조회
    --   조회조건: 양산구분/제품구분/대공정그룹
    대공정이 투입현황이 아니면  공정관리 >> 생산실적 >> 작업실적조회에서 품목 탭의 데이터를 조회
        select id="selectWorkResultList" parameterType="map" resultType="hashmap" 
         SelectWorkResultList 10001 
            if test="TYPE =='BYPRODUCT'"
    ********************************************************************************************************/
                SELECT DC6.DICTIONARYNAME                      WORKDONESEGMENTCLASSNAME   --대분류명
                     , 2                                        			DISPLAYSEQFirst
                     , WR.SENDDAY                                   
                     , SUM(COALESCE(SENDPANELQTY ,0))       	AS INPUTPNLQTY
                     , SUM(COALESCE(SENDMMQTY ,0))          	AS INPUTMMQTY
                     , SUM(COALESCE(WIPPANELQTY ,0))        	AS WIPPANELQTY
                     , SUM(COALESCE(WIPMMQTY ,0))           	AS WIPMMQTY
                     , WR.WORKDONETOPSEGMENTCLASSID
                     , WR.WORKDONEMIDDLESEGMENTCLASSID
                     , WR.PROCESSSEGMENTID
                     , PS.PROCESSSEGMENTNAME
                     , WR.ENTERPRISEID                    			ENTERPRISEID 
                     , WR.PLANTID                         				PLANTID
                     
                     ------------------------------------------------------------ (21.07.30)
                     , SUM(COALESCE(WR.PRICE ,0))           			AS PRICE    
                     ------------------------------------------------------------
                     
                  FROM MFM_WORKDONESEGMENTCLASS    	wsc
                  LEFT OUTER JOIN MFM_WORKDONESEGMENTREL wsr  
                  ON wsc.WORKDONESEGMENTCLASSID       	= wsr.WORKDONETOPSEGMENTCLASSID
                  LEFT OUTER JOIN BAS_PROCESSSEGMENT  PS      
                  ON WSR.PROCESSSEGMENTID             		= PS.PROCESSSEGMENTID
                  LEFT OUTER JOIN (
                        -- 실적
                        SELECT LWR.ENTERPRISEID
                             , LWR.PLANTID
                             , L.LOTTYPE
                             , LWR.PROCESSSEGMENTID
                             , LWR.PROCESSSEGMENTVERSION
                             , LWR.PRODUCTDEFID
                             , LWR.PRODUCTDEFVERSION
                             , PD.PRODUCTDEFNAME
                             --, LWR.LOTID
                             , LWR.AREAID
                             , COALESCE(PD.RTRSHT, 'SHT')   AS RTRSHT
                             , 0                            AS BASEPCSQTY
                             , 0                            AS BASEPANELQTY
                             , 0                            AS BASEMMQTY
                             , SUM(LWR.SENDPCSQTY)          AS SENDPCSQTY
                             , SUM(LWR.SENDPANELQTY)        AS SENDPANELQTY
                             ,  SUM(NVL(ROUND((LWR.SENDPCSQTY / PD.PCSMM), 2) ,0))  AS SENDMMQTY
                             , COUNT(1)                     AS SENDLOTCNT
                             , 0                            AS WIPPCSQTY
                             , 0                            AS WIPPANELQTY
                             , 0                            AS WIPMMQTY
                             , 0                            AS INPUTPCSQTY
                             , 0                            AS INPUTPANELQTY
                             , 0                            AS INPUTMMQTY
                             , CASE WHEN COALESCE(LWR.ISREWORK, 'N') = 'Y' OR COALESCE(LWR.WORKCOUNT, 0)  <![CDATA[>]]>  0 THEN 'IsRework'
                                    WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                    WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                END                         AS WORKTYPE
                             --, TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')         SENDDAY
                             , wsr.WORKDONETOPSEGMENTCLASSID                              -- 대공정ID  
                             , wsr.WORKDONEMIDDLESEGMENTCLASSID                           -- 중공정ID  
                             
                             --(21.06.16) 추가 부분
                             ,	L.USERSEQUENCE 				AS USERSEQUENCE                     -- [21.06.16] 추가
                             -- (21.06.15) 전날 08:30 다음날 08:29:59 까지 가 전날값 
                             , (  CASE WHEN  	TO_CHAR(LWR.SENDTIME, 'HH24MISS')  <![CDATA[<]]>  '083000'       
                                      THEN 		TO_CHAR(LWR.SENDTIME - 1, 'YYYY-MM-DD')
                                      ELSE 		TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')
                                      END
                                ) AS SENDDAY
                                
                             ----------------------------------------------
                             -- [금액추가](21.07.30)
                             , 0 AS PRICE
                             ----------------------------------------------
                             
                        FROM    PCM_LOTWORKRESULT LWR
                        INNER JOIN BAS_PRODUCTDEFINITION     PD  
                        ON LWR.PRODUCTDEFID      				= PD.PRODUCTDEFID
						AND LWR.PRODUCTDEFVERSION 			= PD.PRODUCTDEFVERSION
                        -- 대공정, 중공정, 표준공정으로 그룹핑 조회 추가
                        INNER  JOIN MFM_WORKDONESEGMENTREL       wsr  
                        ON LWR.ENTERPRISEID                     	= wsr.ENTERPRISEID
                        AND LWR.PLANTID                          	= wsr.PLANTID 
                        AND LWR.PROCESSSEGMENTID             	= wsr.PROCESSSEGMENTID        
                        LEFT OUTER JOIN PCM_LOT             L         
                        ON LWR.LOTID                            		= L.LOTID
    
                        WHERE 1=1
                            --AND LWR.RESULTTYPE  NOT IN ('SKIP')
                            AND 		COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
                            -- [조건 추가 수정 필요함 21.06.16]
							AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
                            AND     COALESCE(L.ISHOLD, 'N') = 'N'           				--(21.06.14) 추가
                            --AND     L.LOTSTATE IN ('InProduction', 'InTransit')			--(21.06.16) 추가
                            AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')	-- (21.06.22) 수정
                            AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]>  'Return'	--(21.06.16) 추가
                            
                            
                            AND LWR.SENDTIME      <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))-2, 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')                            
                            AND LWR.SENDTIME      <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYY-MM-DD') + (INTERVAL '1' DAY), 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')
                            AND LWR.SENDPCSQTY   <![CDATA[>]]> 0
                            -- (21.06.16) 추가
                            <if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !='' and !(P_PRODCLASSTYPE eq '*'.toString()) ">
		                        AND		PD.PRODUCTIONTYPE = #{P_PRODCLASSTYPE}
		                    </if>
		                    <if test="P_PRODDIVISION != null and P_PRODDIVISION !='' and !(P_PRODDIVISION eq '*'.toString()) ">
		                        AND		PD.PRODUCTDEFTYPE = #{P_PRODDIVISION}
		                    </if>
		                    <if test="PLANTID != null and PLANTID !=''">
								AND LWR.PLANTID = #{PLANTID}			
							</if>
							
                        GROUP BY
                                LWR.ENTERPRISEID
                            ,   LWR.PLANTID
                            ,   L.LOTTYPE
                            ,   LWR.PROCESSSEGMENTID
                            ,   LWR.PROCESSSEGMENTVERSION
                            ,   LWR.PRODUCTDEFID
                            ,   LWR.PRODUCTDEFVERSION
                            ,   PD.PRODUCTDEFNAME
                            --,   LWR.LOTID
                            ,   LWR.AREAID
                            ,   COALESCE(PD.RTRSHT, 'SHT')
                            ,   CASE WHEN COALESCE(LWR.ISREWORK, 'N') = 'Y' OR COALESCE(LWR.WORKCOUNT, 0)  <![CDATA[>]]> 0 THEN 'IsRework'
                                     WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                     WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                END
                            --, TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')
                            ,	wsr.WORKDONETOPSEGMENTCLASSID
                            , 	wsr.WORKDONEMIDDLESEGMENTCLASSID                            
                            ,	L.USERSEQUENCE
                            -- (21.06.15) 전날 08:30 다음날 08:29:59 까지 가 전날값 
                            , (  CASE WHEN  	TO_CHAR(LWR.SENDTIME, 'HH24MISS')  <![CDATA[<]]> '083000'       
                                      THEN 		TO_CHAR(LWR.SENDTIME - 1, 'YYYY-MM-DD')
                                      ELSE 		TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')
                                      END
                                )
                            
                        -- [21.06.16] 기초 추가
                        UNION ALL
                         -- 기초
                                SELECT
                                        WS.ENTERPRISEID
                                    ,	WS.PLANTID
                                    ,	WS.LOTTYPE
                                    ,	WS.PROCESSSEGMENTID
                                    ,	WS.PROCESSSEGMENTVERSION
                                    ,	WS.PRODUCTDEFID
                                    ,	WS.PRODUCTDEFVERSION
                                    ,	WS.PRODUCTDEFNAME
                                    --,	WS.LOTID
                                    ,	WS.AREAID
                                    ,	WS.RTRSHT
                                    ,	SUM(WS.QTY)		AS BASEPCSQTY
                                    ,	SUM(PANELQTY)	AS BASEPANELQTY
                                    , 	SUM(NVL(ROUND((WS.QTY / WS.PCSMM), 2),0))	AS BASEMMQTY
                                    ,	0				AS SENDPCSQTY
                                    ,	0				AS SENDPANELQTY
                                    , 	0				AS SENDMMQTY
                                    ,	0				AS SENDLOTCNT
--                                 ,	0				AS WIPPCSQTY
--                                 ,	0				AS WIPPANELQTY
--                                 , 	0				AS WIPMMQTY
                                    ,	SUM(WS.QTY)		AS WIPPCSQTY
                                    ,	SUM(PANELQTY)	AS WIPPANELQTY
                                    , 	SUM(NVL(ROUND((WS.QTY / WS.PCSMM), 2),0))	AS WIPMMQTY
                                    ,	0				AS INPUTPCSQTY
                                    ,	0				AS INPUTPANELQTY
                                    , 	0				AS INPUTMMQTY
                                    ,	''				AS WORKTYPE
                                    
                                    ,   WS.WORKDONETOPSEGMENTCLASSID
                                    ,   WS.WORKDONEMIDDLESEGMENTCLASSID
                                    
                                    ,	WS.USERSEQUENCE 											AS USERSEQUENCE
                                    ,   TO_CHAR(TO_DATE(WS.TXNTIME),'YYYY-MM-DD')      	AS SENDDAY
                                    
                                    ----------------------------------------------
                                    -- [금액추가] (21.07.30)
                                    ,   ROUND(
                                    		SUM(PRICE) 
                                    	,0)
                                    	AS PRICE
                                    ----------------------------------------------
                                    
                                FROM(
                                    SELECT 
                                           -- WS.TXNTIME
                                            PD.ENTERPRISEID
                                        --,   TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')+1, 'YYYY-MM-DD')  AS TXNTIME
                                        -- (21.06.17) -> 현재공과 기초 번갈아 가면서 나오도록 적용
                                           /*
                                             당일 08:30 이전이면 이전날 데이터가 있어도 기초로 나오지 않고 현재공을 보도록 
                                             당일 08:30 이후이면 당일, 이전날 데이터 생성됨 당일은 현재공, 이전날은 기초값 보도록 설정
                                           */  
                                        -- [기초 부분 수정] (21.07.07)
										, (  CASE 
												-- (당일 08:30 이전인 상태에서 당일날짜로 조회시)
												WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  NULL  -- (당일 08:30 이전인 경우 이전날짜) 이전날짜의 경우가 현재공을 봐야됨
															 ELSE  TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END															 
												  -- (당일 08:30 이전인 상태에서 이전날짜로 조회시 )
												  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  NULL	-- 해당의 경우 (00:00 ~ 08:29 까지의 데이터) 당일일 경우 재공쪽을 본다.
															 ELSE  TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END																 
												  ELSE  
														-- 그 날짜 그대로 (각 기말 데이터) (21.07.07)
														CASE WHEN  TO_CHAR(SYSDATE, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  NULL
															 ELSE  TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 END
												  END
											) AS TXNTIME
                                        
                                        ,	WS.LOTTYPE
                                        ,	WS.PLANTID
                                        ,	WS.PRODUCTDEFID
                                        ,	WS.PRODUCTDEFVERSION
                                        ,	PD.PRODUCTDEFNAME
                                        ,	WS.PROCESSSEGMENTID
                                        ,	WS.PROCESSSEGMENTVERSION
                                        --,	L.LOTID
                                        ,	WS.AREAID
                                        ,	WS.QTY
                                        ,	WS.PANELQTY
                                        ,	COALESCE(PD.RTRSHT, 'SHT')	AS RTRSHT
                                        ,	PD.PCSMM
                                        ,	BP.USERSEQUENCE
                                        , 	wsr.WORKDONETOPSEGMENTCLASSID                        		--대공정ID
                                        , 	wsr.WORKDONEMIDDLESEGMENTCLASSID                     	--중공정ID
                                        
                                        --------------------------------------------------------
                                        -- (21.08.05) 개별 반올림 후 더한다 [공정관리 > 재공관리 > 모델별 재공조회 에서 합계 금액 계산 처럼]
                                        --, ROUND(NVL(P.SALEPRICE,0) * NVL(WS.QTY,0),0) AS PRICE       				-- [금액추가](21.07.30)
                                        
                                        , --ROUND(
	                                        NVL(PCM_EXCHANGE_FN(WS.PLANTID , 
	                                            (  CASE 
													-- (당일 08:30 이전인 상태에서 당일날짜로 조회시)
													WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
													  THEN  
															CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
																 THEN  SYSDATE  -- (당일 08:30 이전인 경우 이전날짜) 이전날짜의 경우가 현재공을 봐야됨
																 ELSE  TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
																 END															 
													  -- (당일 08:30 이전인 상태에서 이전날짜로 조회시 )
													  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
													  THEN  
															CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
																 THEN  SYSDATE	-- 해당의 경우 (00:00 ~ 08:29 까지의 데이터) 당일일 경우 재공쪽을 본다.
																 ELSE  TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
																 END																 
													  ELSE  
															-- 그 날짜 그대로 (각 기말 데이터) (21.07.07)
															CASE WHEN  TO_CHAR(SYSDATE, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
																 THEN  SYSDATE
																 ELSE  TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')
																 END
													  END
												)
	                                        , UP.CURRENCY_CODE, NVL(WS.QTY,0) * UP.UNITPRICE),0)
	                                        --,0)	
	                                        PRICE
                                        
                                        --------------------------------------------------------
                                         
                                    FROM PCM_WIPSUMMARYPERDAILY		WS
                                    INNER JOIN BAS_PRODUCTDEFINITION		PD	
                                    ON	WS.PRODUCTDEFID 				= PD.PRODUCTDEFID
                                    AND	WS.PRODUCTDEFVERSION 		= PD.PRODUCTDEFVERSION
                                    INNER JOIN BAS_PROCESSPATH				BP 	
                                    ON BP.PROCESSDEFID  					= WS.PRODUCTDEFID 
                                    AND	BP.PROCESSDEFVERSION 			= WS.PRODUCTDEFVERSION
                                    AND	BP.PROCESSSEGMENTID 			= WS.PROCESSSEGMENTID
                                    
                                     -- 대공정, 중공정, 표준공정으로 그룹핑 조회 추가
                                    INNER JOIN MFM_WORKDONESEGMENTREL   wsr       
                                    ON PD.ENTERPRISEID                 		= wsr.ENTERPRISEID
                                    AND WS.PLANTID                          = wsr.PLANTID 
                                    AND WS.PROCESSSEGMENTID           = wsr.PROCESSSEGMENTID
                                    
                                    --------------------------------------------------------
                                    -- [금액 부분 추가](21.07.30)
                                    /*
                                    LEFT JOIN T_PRICE P
                                     ON    WS.PRODUCTDEFID      			= P.PRODUCTDEFID
                                     AND   WS.PRODUCTDEFVERSION 		= P.PRODUCTDEFVERSION
                                     */
                                     
                                     LEFT OUTER JOIN BAS_UNITPRICEFORMES UP   ON WS.PRODUCTDEFID         = UP.PRODUCTDEFID 
                                              AND WS.PRODUCTDEFVERSION    = UP.PRODUCTDEFVERSION 
                                              AND SYSDATE BETWEEN UP.APPLY_START_DATE AND NVL(UP.APPLY_END_DATE, TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'))  
                                    
                                    --------------------------------------------------------
                                    
                                    WHERE 1=1
                                    
                                   -- (21.06.15) PCM_WIPSUMMARYPERDAILY (EX) 14일 기말 = 15일 기초 -> 기말의 데이터들이 들어가 있다. (기초값은 이전날의 기말과 같음)                                  
                                   -- (21.07.07) 조건 변경 
									AND WS.TXNTIME      <![CDATA[>=]]>   TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))-2, 'YYYY-MM-DD')                           
									AND WS.TXNTIME      <![CDATA[<]]>     TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8),     'YYYY-MM-DD') + (INTERVAL '1' DAY), 'YYYY-MM-DD')  
                                   
                                   <if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !=''">
										AND WS.LOTTYPE 					= #{P_PRODCLASSTYPE}			
								   </if>
								   -- site
								   <if test="PLANTID != null and PLANTID !=''">
										AND WS.PLANTID 					= #{PLANTID}		
								   </if>
								   -- 제품구분
								   <if test="P_PRODDIVISION != null and P_PRODDIVISION !=''">
										AND	PD.PRODUCTDEFTYPE 		= #{P_PRODDIVISION}
								   </if>          
                                        
                                                            
                                )	WS
                                GROUP BY 	
                                        WS.ENTERPRISEID
                                     ,  WS.TXNTIME
                                    ,	WS.LOTTYPE
                                    ,	WS.PLANTID
                                    ,	WS.PROCESSSEGMENTID
                                    ,	WS.PROCESSSEGMENTVERSION
                                    ,	WS.PRODUCTDEFID
                                    ,	WS.PRODUCTDEFVERSION
                                    ,	WS.PRODUCTDEFNAME
                                    ,	WS.AREAID
                                    ,	WS.RTRSHT
                                    ,	WS.USERSEQUENCE
                                    --, 	TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')+1, 'YYYY-MM-DD')
                                     ,   TO_CHAR(TO_DATE(WS.TXNTIME),'YYYY-MM-DD')  -- (21.06.17) 수정 -> 그룹 재 지정  
                                    ,   WS.WORKDONETOPSEGMENTCLASSID
                                    ,   WS.WORKDONEMIDDLESEGMENTCLASSID
                                            
                        UNION ALL
                        -- 재공
                        SELECT L.ENTERPRISEID
                             , L.PLANTID
                             , L.LOTTYPE
                             , L.PROCESSSEGMENTID
                             , L.PROCESSSEGMENTVERSION
                             , L.PRODUCTDEFID
                             , L.PRODUCTDEFVERSION
                             , PD.PRODUCTDEFNAME
                             --, L.LOTID
                             , L.AREAID
                             , COALESCE(PD.RTRSHT, 'SHT')         AS RTRSHT
                             , 0                                            AS BASEPCSQTY
                             , 0                                            AS BASEPANELQTY
                             , 0                                            AS BASEMMQTY
                             , 0                                            AS SENDPCSQTY
                             , 0                                            AS SENDPANELQTY
                             , 0                                            AS SENDMMQTY
                             , 0                                            AS SENDLOTCNT
                             , SUM(L.PCSQTY)                                AS WIPQTY
                             , SUM(L.PANELQTY)                              AS WIPPANELQTY
                             , SUM(NVL(ROUND((L.PCSQTY / PD.PCSMM), 2) ,0)) AS WIPMMQTY
                             , 0                                            AS INPUTPCSQTY
                             , 0                                            AS INPUTPANELQTY
                             , 0                                            AS INPUTMMQTY
                             , CASE WHEN COALESCE(L.ISREWORK, 'N') = 'Y' OR COALESCE(L.WORKCOUNT, 0) <![CDATA[>]]> 0 THEN 'IsRework'
                                    WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                    WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                END                                   AS WORKTYPE
                             --, TO_CHAR(L.SENDTIME, 'YYYY-MM-DD')         SENDDAY
                             , wsr.WORKDONETOPSEGMENTCLASSID                        	--대공정ID
                             , wsr.WORKDONEMIDDLESEGMENTCLASSID                     	--중공정ID     
                             
                             ,	L.USERSEQUENCE 				AS USERSEQUENCE
                             , (  CASE WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                              THEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') 
                                              
                                              -- (21.07.07) 추가 및 이전일 0:00 ~ 08:29분도 이전 날짜가 현재공으로 나오도록
											  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
											  THEN   TO_CHAR(SYSDATE-1, 'YYYY-MM-DD')		-- (00:00 ~ 08:29) (당일 08:30 이전인데 필터 날자가 이전날짜인 경우) -> 현재공을 이전날짜로 표시
											  
                                              ELSE  TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
                                              END
                                        ) AS SENDDAY
                             
                            --------------------------------------------------------
                            -- (21.08.05) 개별 반올림 후 더한다 [공정관리 > 재공관리 > 모델별 재공조회 에서 합계 금액 계산 처럼]
                            --, SUM(ROUND(NVL(P.SALEPRICE,0) * NVL(L.PCSQTY,0),0)) AS PRICE       -- [금액추가] (21.07.30)
                            
                            , ROUND(
                              SUM(
                                NVL(PCM_EXCHANGE_FN(L.PLANTID , 
                                (  CASE WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                                  THEN  SYSDATE-1                                                  
                                                  -- (21.07.07) 추가 및 이전일 0:00 ~ 08:29분도 이전 날짜가 현재공으로 나오도록
                                                  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                                  THEN  SYSDATE-1		-- (00:00 ~ 08:29) (당일 08:30 이전인데 필터 날자가 이전날짜인 경우) -> 현재공을 이전날짜로 표시                                                  
                                                  ELSE  SYSDATE 
                                                  END
                                            )
                                
                                , UP.CURRENCY_CODE, NVL(L.PCSQTY,0) * UP.UNITPRICE),0)
                                )
                                ,0)
                            PRICE
                            
                            --------------------------------------------------------
                                
                        FROM PCM_LOT                    L
                        INNER JOIN BAS_PRODUCTDEFINITION    PD  
                        ON L.PRODUCTDEFID      			= PD.PRODUCTDEFID
                        AND L.PRODUCTDEFVERSION 		= PD.PRODUCTDEFVERSION
                        -- 대공정, 중공정, 표준공정으로 그룹핑 조회 추가
                        INNER JOIN MFM_WORKDONESEGMENTREL   wsr       
                        ON L.ENTERPRISEID                    = wsr.ENTERPRISEID
                        AND L.PLANTID                        	= wsr.PLANTID 
                        AND L.PROCESSSEGMENTID         	= wsr.PROCESSSEGMENTID                                                                       
                        
                        --------------------------------------------------------
                         -- [금액 부분 추가](21.07.30)
                         /*
                         LEFT JOIN T_PRICE P
                          ON    L.PRODUCTDEFID      		= P.PRODUCTDEFID
                          AND   L.PRODUCTDEFVERSION 	= P.PRODUCTDEFVERSION
                         */
                         
                         -- (21.08.05) 동일하게 함수 호출 해서 금액 구함
                         LEFT OUTER JOIN BAS_UNITPRICEFORMES UP   ON L.PRODUCTDEFID         = UP.PRODUCTDEFID 
                                              AND L.PRODUCTDEFVERSION    = UP.PRODUCTDEFVERSION 
                                              AND SYSDATE BETWEEN UP.APPLY_START_DATE AND NVL(UP.APPLY_END_DATE, TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'))
                         
                          
                         --------------------------------------------------------
                        
                        
                        WHERE   1 = 1
                        AND     L.LOTSTATE 					IN ('InProduction', 'InTransit')
                        --AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')	-- (21.06.22) 수정    -> (21.06.23) Finished 다시 제거
						AND     COALESCE(L.ISDEFECTED, 'N') 	= 'N'
						AND     COALESCE(L.ISHOLD, 'N') 		= 'N'
						AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'				--(21.06.17) 추가
						
						<if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !='' and !(P_PRODCLASSTYPE eq '*'.toString()) ">
		                     AND		PD.PRODUCTIONTYPE = #{P_PRODCLASSTYPE}
	                    </if>
	                    <if test="P_PRODDIVISION != null and P_PRODDIVISION !='' and !(P_PRODDIVISION eq '*'.toString()) ">
	                        AND		PD.PRODUCTDEFTYPE = #{P_PRODDIVISION}
	                    </if>
	                    <if test="PLANTID != null and PLANTID !=''">
							AND 		L.PLANTID = #{PLANTID}			
						</if>
                        
                        
                        
                        GROUP BY L.PLANTID
                            ,    L.LOTTYPE
                            ,    L.PROCESSSEGMENTID
                            ,    L.PROCESSSEGMENTVERSION
                            ,    L.PRODUCTDEFID
                            ,    L.PRODUCTDEFVERSION
                            ,    PD.PRODUCTDEFNAME
                            --,    L.LOTID
                            ,    L.AREAID
                            ,   COALESCE(PD.RTRSHT, 'SHT')
                            ,   CASE WHEN COALESCE(L.ISREWORK, 'N') = 'Y' OR COALESCE(L.WORKCOUNT, 0) <![CDATA[>]]> 0 THEN 'IsRework'
                                     WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                     WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                 END
                            --,   TO_CHAR(L.SENDTIME, 'YYYY-MM-DD')
                            ,   wsr.WORKDONETOPSEGMENTCLASSID
                            ,   wsr.WORKDONEMIDDLESEGMENTCLASSID
                            ,   L.ENTERPRISEID
                            ,	L.USERSEQUENCE
                            --(21.06.15) 0830이전이면서 조회 날짜가 현시점의 날짜와 같은 경우 이전 날자로 설정, 그 외 SYSDATE로 설정
                            ,(  CASE WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                      THEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') 
                                      ELSE  TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
                                      END
                                )
                            
                            
                            
                    ) WR                                            ON WR.PROCESSSEGMENTID             = PS.PROCESSSEGMENTID
                -- (21.06.16) INNER -> LEFT 로 변경
                LEFT JOIN FN_AREA(#{MODIFIER}) A                   ON WR.AREAID                       = A.AREAID
                LEFT  OUTER JOIN CMD_DICTIONARY             dc6     ON dc6.DICTIONARYID                = wsc.WORKDONESEGMENTCLASSNAME   --대분류명
                                                                   AND dc6.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                LEFT OUTER JOIN CMD_DICTIONARY              DC1     ON PS.PROCESSSEGMENTNAME           = DC1.DICTIONARYID
                                                                   AND DC1.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}          -- 다국어 코드 --'ko-KR'
                LEFT OUTER JOIN CMD_DICTIONARY              DC2     ON A.AREANAME                      = DC2.DICTIONARYID
                                                                   AND DC2.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                LEFT JOIN CMD_LOOKUP_VALUES                 CDL     ON WR.LOTTYPE                      = CDL.LOOKUP_CODE
                                                                   AND CDL.LOOKUP_TYPE                 = 'ProductionType'
                LEFT JOIN CMD_DICTIONARY                    DC5     ON  CDL.DICTIONARYID               = DC5.DICTIONARYID
                                                                   AND DC5.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                WHERE 1 = 1
                  AND   wsc.WORKDONESEGMENTCLASSTYPE    = 'TopWorkDoneSegmentClass'
                  -- 해당 조건 추가
                  <if test="P_WORKDONESEGMENTCLASSID != null and P_WORKDONESEGMENTCLASSID !='' and !(P_WORKDONESEGMENTCLASSID eq '*'.toString()) ">
                  		AND   wsc.WORKDONESEGMENTCLASSID = #{P_WORKDONESEGMENTCLASSID}    -- 화면에서 선택된 대공정(21.05.18 김진현 추가)
                  </if>
                  AND		wsc.VALIDSTATE = 'Valid'				-- 유효한것만(21.05.18 김진현 추가)
                  
                GROUP BY
                  WR.SENDDAY
                , DC6.DICTIONARYNAME
                , WR.WORKDONETOPSEGMENTCLASSID
                , WR.WORKDONEMIDDLESEGMENTCLASSID
                , WR.PROCESSSEGMENTID
                , PS.PROCESSSEGMENTNAME
                , WR.ENTERPRISEID
                , WR.PLANTID
)
, MAIN_ATY AS ( 
    --기존 쿼리
    SELECT 
           wd.WORKDONESEGMENTCLASSNAME     	WORKDONTOPSEGMENTCLASSNAME                   	--대분류명    
         , dc1.DICTIONARYNAME              			WORKDONEMIDDLESEGMENTCLASSNAME             	--중분류명
         , dc2.DICTIONARYNAME              			PROCESSSEGMENTNAMEBYLANGUAGE                 	--공정명
         , wd.DISPLAYSEQFirst
         , wd.SENDDAY
         , wd.INPUTPNLQTY
         , wd.INPUTMMQTY
         , wd.WIPPANELQTY
         , wd.WIPMMQTY
         , wd.WORKDONETOPSEGMENTCLASSID
         , wd.WORKDONEMIDDLESEGMENTCLASSID
         , wd.PROCESSSEGMENTID
         , wd.PROCESSSEGMENTNAME
         , wsc.SEQDISPLAY
         
         ---------------------------------------
         , (wd.PRICE)       AS PRICE        -- 금액 추가 (21.07.30)  
         ---------------------------------------
      FROM WORKDONEQTY wd
     INNER JOIN MFM_WORKDONESEGMENTCLASS wsc         ON wsc.ENTERPRISEID    = wd.ENTERPRISEID
                                                    AND wsc.PLANTID                          		= wd.PLANTID  
                                                    AND wsc.WORKDONESEGMENTCLASSID   	= wd.WORKDONEMIDDLESEGMENTCLASSID
      LEFT JOIN CMD_DICTIONARY           dc1         			ON dc1.DICTIONARYID    = wsc.WORKDONESEGMENTCLASSNAME     --중분류명
                                                    AND dc1.LANGUAGETYPE                     	= #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
      LEFT JOIN CMD_DICTIONARY           dc2         			ON dc2.DICTIONARYID    = wd.PROCESSSEGMENTNAME                 --공정명
                                                    AND dc2.LANGUAGETYPE                     	= #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
     WHERE wd.ENTERPRISEID                = #{ENTERPRISEID}
       AND wd.PLANTID                      	= #{PLANTID}
)  


-- 21.05.18 김진현 피벗 사용
    SELECT 
           		WORKDONTOPSEGMENTCLASSNAME
           ,  WORKDONETOPSEGMENTCLASSID
           ,	  WORKDONEMIDDLESEGMENTCLASSNAME
           ,  WORKDONEMIDDLESEGMENTCLASSID
           ,  PROCESSSEGMENTNAMEBYLANGUAGE
           ,  PROCESSSEGMENTID           
           ,  ${COLUMNS_SELECT}				-- 3일치 생성될 컬럼
	 FROM ( 
		       SELECT 
                     
                      wd.WORKDONTOPSEGMENTCLASSNAME                   	--	대분류명    
                     , wd.WORKDONETOPSEGMENTCLASSID                      	-- 대공정 코드
                     , wd.WORKDONEMIDDLESEGMENTCLASSNAME            	-- 중분류명
                     , wd.WORKDONEMIDDLESEGMENTCLASSID                 	-- 중분류 코드
                     , wd.PROCESSSEGMENTNAMEBYLANGUAGE                	-- 공정명
                     , wd.PROCESSSEGMENTID                                  		-- 표준공정 코드
		             , wd.INPUTPNLQTY
		             , wd.INPUTMMQTY
		             , wd.WIPPANELQTY
		             , wd.WIPMMQTY
                     , wd.SENDDAY 
                     
                     ---------------------------------------
			         , (wd.PRICE)       AS PRICE        								-- 금액 추가 (21.07.30)  
			         ---------------------------------------
                     
		          FROM MAIN_ATY wd              -- [21.05.18] 수정
		         RIGHT OUTER JOIN (
		                            -- 수정
                                    -- [21.05.18] 수정
                                    SELECT  TO_CHAR(d.DDAY, 'YYYY-MM-DD')                  DDAY
		                                 ,  wsc.PROCESSSEGMENTID
		                              FROM CMD_DAY                d     
		                             CROSS JOIN(
		                                         -- 표준공정의 개수만큼 
                                                  -- [21.05.18] 수정
                                                  SELECT PS.PROCESSSEGMENTID
                                                      FROM BAS_PROCESSSEGMENT			    PS
                                                      INNER JOIN MFM_WORKDONESEGMENTREL	    WSR 
                                                      ON	PS.PROCESSSEGMENTID = WSR.PROCESSSEGMENTID
                                                      WHERE 1 = 1                                                        
                                                      	<if test="P_WORKDONESEGMENTCLASSID != null and P_WORKDONESEGMENTCLASSID !='' and !(P_WORKDONESEGMENTCLASSID eq '*'.toString()) ">
									                  		AND  WSR.WORKDONETOPSEGMENTCLASSID = #{P_WORKDONESEGMENTCLASSID}    -- 화면에서 선택된 대공정(21.05.18 김진현 추가)
									                  	</if>
                                                        
                                                        AND WSR.VALIDSTATE = 'Valid'
                                                        AND WSR.WORKDONEMIDDLESEGMENTCLASSID IS NOT NULL
		                                       ) wsc
		                             WHERE d.SDAY BETWEEN  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))- 2, 'YYYYMMDD') AND SUBSTR(#{P_DATE},1, 8)
		                           ) s
                                ON s.PROCESSSEGMENTID = wd.PROCESSSEGMENTID     -- [21.05.18] 수정
		                       AND s.DDAY                   = wd.SENDDAY 
		          WHERE 1=1
		          
		          ORDER BY wd.DISPLAYSEQFIRST 
			)
		    PIVOT ( 	SUM(INPUTPNLQTY)   		AS SUM_INPUTPNLQTY
		           , 	SUM(INPUTMMQTY)  		AS SUM_INPUTMMQTY
		           , 	SUM(WIPPANELQTY)  		AS SUM_WIPPANELQTY
		           , 	SUM(WIPMMQTY)     		AS SUM_WIPMMQTY
		           
		           ------------------------------------(21.07.30) 금액추가
                   , 	SUM(PRICE)             		AS SUM_PRICE
                   ------------------------------------
		           
		           FOR 	SENDDAY   
		           IN(		${COLUMNS}	)
	                         	
			)
            
            where 1 = 1
              and WORKDONTOPSEGMENTCLASSNAME is not null      -- null 이면 삭제	
	</select>
	
	<!--
		설		명	: 주요 공정 실적 현황판 - Detail Right조회
		생	성	자	: 김진현
		생	성	일	: 2021-05-18 
		수  정   이  력	:
	-->
	<select id="selectWorkDoneDetailRightList" parameterType="map" resultType="hashmap">
/*selectWorkDoneDetailRightList - 주요 공정 실적 현황판 - Detail Right */


	 /*################################[21.07.30 단가(금액) 추가]#################################################*/
		/*  공정관리 > 투입관리 > 단가 Table 쿼리 참조*/
		-- (21.07.29) - 금액 계산을 위해 단가 Table 추가 
		WITH  T_PRICE AS (
        SELECT    PRD.PLANTID 	
                        , PRD.PRODUCTDEFID 
                        , PRD.PRODUCTDEFVERSION 				
                        , UPR.CURRENCY_CODE     -- 단위
                        , PRD.UNIT       	AS UOM      -- 
                        , NVL(EXC.EXCHANGE_RATE,1) 					AS EXCHANGE_RATE
                        , UPR.UNITPRICE * NVL(EXC.EXCHANGE_RATE,1) 	AS SALEPRICE                -- 판가 해당 값과 pcs 수량 곱해서 계산
                  FROM BAS_ITEMMASTER IM
                  INNER JOIN BAS_PRODUCTDEFINITION PRD 		ON  PRD.PRODUCTDEFID = ITEMID
                                                            AND PRD.PRODUCTDEFVERSION = ITEMVERSION
                  INNER JOIN BAS_UNITPRICEFORMES UPR 		-- [단가]
                                                            ON  IM.ENTERPRISEID = UPR.ENTERPRISEID
                                                            AND IM.ITEMID = UPR.PRODUCTDEFID
                                                            AND IM.ITEMVERSION = UPR.PRODUCTDEFVERSION
                  LEFT JOIN BAS_EXCHANGE EXC				-- [환율]
                                                            ON  UPR.CURRENCY_CODE = EXC.CURRENCY_CODE
                                                            AND EXC.PERIOD_NAME = TO_CHAR(SYSDATE ,'YYYY-MM')
                 /*
                  LEFT OUTER JOIN BAS_CUSTOMER      CUST    ON  PRD.ENTERPRISEID = CUST.ENTERPRISEID 
                                                            AND PRD.PLANTID = CUST.PLANTID
                                                            AND PRD.CUSTOMERID =  CUST.CUSTOMERID  
                                                            */
                  LEFT OUTER JOIN BAS_PRODUCTITEMSPEC PIS   ON  IM.ENTERPRISEID = PIS.ENTERPRISEID
                                                            AND IM.ITEMID = PIS.ITEMID
                                                            AND IM.ITEMVERSION = PIS.ITEMVERSION
                  /*
                  LEFT OUTER JOIN CMD_USERS         MUSER   ON  UPR.ENTERPRISEID = MUSER.ENTERPRISEID
                                                            AND UPR.MODIFIER =  MUSER.USER_ID           
                                                            */
                WHERE 1=1
                  AND PRD.PLANTID = #{PLANTID}
        )
        ----------------------------------------------------------------------------------------------------------------------[단가 ↑]
	
	, WORKDONEQTY AS(
    /********************************************************************************************************
    --1. 이틀간 품목별 실적, 재공조회
    --   조회조건: 양산구분/제품구분/대공정그룹
    대공정이 투입현황이 아니면  공정관리 >> 생산실적 >> 작업실적조회에서 품목 탭의 데이터를 조회
        select id="selectWorkResultList" parameterType="map" resultType="hashmap" 
         SelectWorkResultList 10001 
            if test="TYPE =='BYPRODUCT'"
    ********************************************************************************************************/
                SELECT DC6.DICTIONARYNAME                       WORKDONESEGMENTCLASSNAME   --대분류명
                     , 2                                       	 			AS	DISPLAYSEQFirst
                     , WR.SENDDAY                                   
                     , SUM(COALESCE(SENDPANELQTY ,0))       	AS INPUTPNLQTY
                     , SUM(COALESCE(SENDMMQTY ,0))          	AS INPUTMMQTY
                     , SUM(COALESCE(WIPPANELQTY ,0))       	AS WIPPANELQTY
                     , SUM(COALESCE(WIPMMQTY ,0))           	AS WIPMMQTY
                     , WR.WORKDONETOPSEGMENTCLASSID
                     , WR.WORKDONEMIDDLESEGMENTCLASSID
                     , WR.PROCESSSEGMENTID
                     , PS.PROCESSSEGMENTNAME
                     , WR.ENTERPRISEID                    	AS ENTERPRISEID 
                     , WR.PLANTID                         		AS PLANTID
                     
                     , AR.AREAID
                     , DA.DICTIONARYNAME    				AS AREANAME
                     
                     
                     ------------------------------------------------------------ (21.07.30)
                     , SUM(COALESCE(WR.PRICE ,0))           			AS PRICE    
                     ------------------------------------------------------------
                     
                  FROM MFM_WORKDONESEGMENTCLASS    wsc
                  LEFT OUTER JOIN MFM_WORKDONESEGMENTREL wsr  ON wsc.WORKDONESEGMENTCLASSID       = wsr.WORKDONETOPSEGMENTCLASSID
                  LEFT OUTER JOIN BAS_PROCESSSEGMENT  PS      ON WSR.PROCESSSEGMENTID             = PS.PROCESSSEGMENTID
                  LEFT OUTER JOIN (
                        -- 실적
                        SELECT LWR.ENTERPRISEID
                             , LWR.PLANTID
                             , L.LOTTYPE
                             , LWR.PROCESSSEGMENTID
                             , LWR.PROCESSSEGMENTVERSION
                             , LWR.PRODUCTDEFID
                             , LWR.PRODUCTDEFVERSION
                             , PD.PRODUCTDEFNAME
                             --, LWR.LOTID
                             , LWR.AREAID
                             , COALESCE(PD.RTRSHT, 'SHT')   AS RTRSHT
                             , 0                            AS BASEPCSQTY
                             , 0                            AS BASEPANELQTY
                             , 0                            AS BASEMMQTY
                             , SUM(LWR.SENDPCSQTY)          AS SENDPCSQTY
                             , SUM(LWR.SENDPANELQTY)        AS SENDPANELQTY
                             ,  SUM(NVL(ROUND((LWR.SENDPCSQTY / PD.PCSMM), 2) ,0))  AS SENDMMQTY
                             , COUNT(1)                     AS SENDLOTCNT
                             , 0                            AS WIPPCSQTY
                             , 0                            AS WIPPANELQTY
                             , 0                            AS WIPMMQTY
                             , 0                            AS INPUTPCSQTY
                             , 0                            AS INPUTPANELQTY
                             , 0                            AS INPUTMMQTY
                             , CASE WHEN COALESCE(LWR.ISREWORK, 'N') = 'Y' OR COALESCE(LWR.WORKCOUNT, 0)  <![CDATA[>]]>  0 THEN 'IsRework'
                                    WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                    WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                END                         AS WORKTYPE
                             --, TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')         SENDDAY
                             , wsr.WORKDONETOPSEGMENTCLASSID                              -- 대공정ID  
                             , wsr.WORKDONEMIDDLESEGMENTCLASSID                           -- 중공정ID
                             
                             -- (21.06.17) 추가 부분
                             ,	L.USERSEQUENCE 				AS USERSEQUENCE                     -- [21.06.17] 추가
                             -- (21.06.17) 전날 08:30 다음날 08:29:59 까지 가 전날값 
                             , (  CASE WHEN  	TO_CHAR(LWR.SENDTIME, 'HH24MISS')  <![CDATA[<]]>  '083000'       
                                      THEN 		TO_CHAR(LWR.SENDTIME - 1, 'YYYY-MM-DD')
                                      ELSE 		TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')
                                      END
                                ) AS SENDDAY
                                
                            ----------------------------------------------
                             -- [금액추가](21.07.30)
                             , 0 AS PRICE
                             ----------------------------------------------    
                             
                               
                        FROM    PCM_LOTWORKRESULT LWR
                        INNER JOIN BAS_PRODUCTDEFINITION    PD  
                        ON LWR.PRODUCTDEFID      				= PD.PRODUCTDEFID
						AND LWR.PRODUCTDEFVERSION 			= PD.PRODUCTDEFVERSION
                        -- 대공정, 중공정, 표준공정으로 그룹핑 조회 추가
                        INNER  JOIN MFM_WORKDONESEGMENTREL       wsr  
                        ON LWR.ENTERPRISEID                     	= wsr.ENTERPRISEID
                        AND LWR.PLANTID                          	= wsr.PLANTID 
                        AND LWR.PROCESSSEGMENTID           	= wsr.PROCESSSEGMENTID        
                        LEFT OUTER JOIN PCM_LOT             		L         
                        ON LWR.LOTID                            		= L.LOTID
    
                        WHERE 1=1
                            --AND LWR.RESULTTYPE  NOT IN ('SKIP')
                            
                            
                            AND LWR.SENDTIME      <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))- 2, 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')                            
                            AND LWR.SENDTIME      <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYY-MM-DD') + (INTERVAL '1' DAY), 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')
                            AND LWR.SENDPCSQTY    <![CDATA[>]]> 0
                            
                            AND 		COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
                            -- [조건 추가 수정 필요함 21.06.16]
							AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
                            AND     COALESCE(L.ISHOLD, 'N') = 'N'           				--(21.06.17) 추가
                            --AND     L.LOTSTATE IN ('InProduction', 'InTransit')			--(21.06.17) 추가
                            AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')	-- (21.06.22) 수정
                            AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]>  'Return'	--(21.06.17) 추가
                            -- (21.06.16) 추가
                            <if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !='' and !(P_PRODCLASSTYPE eq '*'.toString()) ">
		                        AND		PD.PRODUCTIONTYPE 	= #{P_PRODCLASSTYPE}
		                    </if>
		                    <if test="P_PRODDIVISION != null and P_PRODDIVISION !='' and !(P_PRODDIVISION eq '*'.toString()) ">
		                        AND		PD.PRODUCTDEFTYPE 	= #{P_PRODDIVISION}
		                    </if>
		                    <if test="PLANTID != null and PLANTID !=''">
								AND LWR.PLANTID 				= #{PLANTID}			
							</if>
                            
                            
                        GROUP BY
                                LWR.ENTERPRISEID
                            ,   LWR.PLANTID
                            ,   L.LOTTYPE
                            ,   LWR.PROCESSSEGMENTID
                            ,   LWR.PROCESSSEGMENTVERSION
                            ,   LWR.PRODUCTDEFID
                            ,   LWR.PRODUCTDEFVERSION
                            ,   PD.PRODUCTDEFNAME
                            --,   LWR.LOTID
                            ,   LWR.AREAID
                            ,   COALESCE(PD.RTRSHT, 'SHT')
                            ,   CASE WHEN COALESCE(LWR.ISREWORK, 'N') = 'Y' OR COALESCE(LWR.WORKCOUNT, 0)  <![CDATA[>]]> 0 THEN 'IsRework'
                                     WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                     WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                END
                            , TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')
                            , 	wsr.WORKDONETOPSEGMENTCLASSID
                            , 	wsr.WORKDONEMIDDLESEGMENTCLASSID
                            ,	L.USERSEQUENCE
                            -- (21.06.15) 전날 08:30 다음날 08:29:59 까지 가 전날값 
                            , (  CASE WHEN  	TO_CHAR(LWR.SENDTIME, 'HH24MISS')  <![CDATA[<]]> '083000'       
                                      THEN 		TO_CHAR(LWR.SENDTIME - 1, 'YYYY-MM-DD')
                                      ELSE 		TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')
                                      END
                                )
                            
                            
                        
                        
                        -----------------------------------------------------------------------------------
                        
                        -- [21.06.16] 기초 추가
                        UNION ALL
                         -- 기초
                                SELECT
                                        WS.ENTERPRISEID
                                    ,	WS.PLANTID
                                    ,	WS.LOTTYPE
                                    ,	WS.PROCESSSEGMENTID
                                    ,	WS.PROCESSSEGMENTVERSION
                                    ,	WS.PRODUCTDEFID
                                    ,	WS.PRODUCTDEFVERSION
                                    ,	WS.PRODUCTDEFNAME
                                    --,	WS.LOTID
                                    ,	WS.AREAID
                                    ,	WS.RTRSHT
                                    ,	SUM(WS.QTY)		AS BASEPCSQTY
                                    ,	SUM(PANELQTY)	AS BASEPANELQTY
                                    , 	SUM(NVL(ROUND((WS.QTY / WS.PCSMM), 2),0))	AS BASEMMQTY
                                    ,	0						AS SENDPCSQTY
                                    ,	0						AS SENDPANELQTY
                                    , 	0						AS SENDMMQTY
                                    ,	0						AS SENDLOTCNT
                                    ,	SUM(WS.QTY)		AS WIPPCSQTY
                                    ,	SUM(PANELQTY)	AS WIPPANELQTY
                                    , 	SUM(NVL(ROUND((WS.QTY / WS.PCSMM), 2),0))	AS WIPMMQTY
                                    ,	0						AS INPUTPCSQTY
                                    ,	0						AS INPUTPANELQTY
                                    , 	0						AS INPUTMMQTY
                                    ,	''						AS WORKTYPE
                                    ,   WS.WORKDONETOPSEGMENTCLASSID
                                    ,   WS.WORKDONEMIDDLESEGMENTCLASSID
                                    ,	WS.USERSEQUENCE 											AS USERSEQUENCE
                                    ,   TO_CHAR(TO_DATE(WS.TXNTIME),'YYYY-MM-DD')      	AS SENDDAY
                                    
                                    ----------------------------------------------
                                    -- [금액추가] (21.07.30)
                                    ,   ROUND(
                                    		SUM(PRICE) 
                                    	,0)
                                    	AS PRICE
                                    ----------------------------------------------
                                    
                                FROM(
                                    SELECT 
                                           -- WS.TXNTIME
                                            PD.ENTERPRISEID
                                        --,   TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')+1, 'YYYY-MM-DD')  AS TXNTIME
                                        -- (21.06.17) -> 현재공과 기초 번갈아 가면서 나오도록 적용
                                           /*
                                             당일 08:30 이전이면 이전날 데이터가 있어도 기초로 나오지 않고 현재공을 보도록 
                                             당일 08:30 이후이면 당일, 이전날 데이터 생성됨 당일은 현재공, 이전날은 기초값 보도록 설정
                                           */
                                        -- [기초 부분 수정] (21.07.07)
										,	(  CASE 
												-- (당일 08:30 이전인 상태에서 당일날짜로 조회시)
												WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  NULL  -- (당일 08:30 이전인 경우 이전날짜) 이전날짜의 경우가 현재공을 봐야됨
															 ELSE  TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END
															 
												  -- (당일 08:30 이전인 상태에서 이전날짜로 조회시 )
												  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  NULL	-- 해당의 경우 (00:00 ~ 08:29 까지의 데이터) 당일일 경우 재공쪽을 본다.
															 ELSE  TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END	
															 
												  ELSE  
														-- 그 날짜 그대로 (각 기말 데이터) (21.07.07)
														CASE WHEN  TO_CHAR(SYSDATE, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  NULL
															 ELSE  TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 END
												  END
											) AS TXNTIME 
                                        ,	WS.LOTTYPE
                                        ,	WS.PLANTID
                                        ,	WS.PRODUCTDEFID
                                        ,	WS.PRODUCTDEFVERSION
                                        ,	PD.PRODUCTDEFNAME
                                        ,	WS.PROCESSSEGMENTID
                                        ,	WS.PROCESSSEGMENTVERSION
                                        --,	L.LOTID
                                        ,	WS.AREAID
                                        ,	WS.QTY
                                        ,	WS.PANELQTY
                                        ,	COALESCE(PD.RTRSHT, 'SHT')	AS RTRSHT
                                        ,	PD.PCSMM
                                        ,	BP.USERSEQUENCE
                                        , 	wsr.WORKDONETOPSEGMENTCLASSID                        		--대공정ID
                                        , 	wsr.WORKDONEMIDDLESEGMENTCLASSID                     	--중공정ID
                                        
                                        --------------------------------------------------------
                                        -- (21.08.05) 개별 반올림 후 더한다 [공정관리 > 재공관리 > 모델별 재공조회 에서 합계 금액 계산 처럼]
                                        --, ROUND(NVL(P.SALEPRICE,0) * NVL(WS.QTY,0),0) AS PRICE       -- [금액추가](21.07.30)
                                        , --ROUND(
                                        NVL(PCM_EXCHANGE_FN(WS.PLANTID , 
                                            (  CASE 
												-- (당일 08:30 이전인 상태에서 당일날짜로 조회시)
												WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  SYSDATE  -- (당일 08:30 이전인 경우 이전날짜) 이전날짜의 경우가 현재공을 봐야됨
															 ELSE  TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END															 
												  -- (당일 08:30 이전인 상태에서 이전날짜로 조회시 )
												  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  SYSDATE	-- 해당의 경우 (00:00 ~ 08:29 까지의 데이터) 당일일 경우 재공쪽을 본다.
															 ELSE  TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END																 
												  ELSE  
														-- 그 날짜 그대로 (각 기말 데이터) (21.07.07)
														CASE WHEN  TO_CHAR(SYSDATE, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  SYSDATE
															 ELSE  TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')
															 END
												  END
											)
                                        , UP.CURRENCY_CODE, NVL(WS.QTY,0) * UP.UNITPRICE),0)
                                        --,0)	
                                        PRICE
                                        
                                        --------------------------------------------------------
                                         
                                    FROM PCM_WIPSUMMARYPERDAILY		WS
                                    INNER JOIN BAS_PRODUCTDEFINITION		PD	
                                    ON	WS.PRODUCTDEFID 				= PD.PRODUCTDEFID
                                    AND	WS.PRODUCTDEFVERSION 		= PD.PRODUCTDEFVERSION
                                    INNER JOIN BAS_PROCESSPATH				BP 	
                                    ON BP.PROCESSDEFID  					= WS.PRODUCTDEFID 
                                    AND	BP.PROCESSDEFVERSION 			= WS.PRODUCTDEFVERSION
                                    AND	BP.PROCESSSEGMENTID 			= WS.PROCESSSEGMENTID
                                    
                                     -- 대공정, 중공정, 표준공정으로 그룹핑 조회 추가
                                    INNER JOIN MFM_WORKDONESEGMENTREL   wsr       
                                    ON PD.ENTERPRISEID                 		= wsr.ENTERPRISEID
                                    AND WS.PLANTID                          = wsr.PLANTID 
                                    AND WS.PROCESSSEGMENTID           = wsr.PROCESSSEGMENTID
                                    
                                    --------------------------------------------------------
                                    -- [금액 부분 추가](21.07.30)
                                    /*
                                    LEFT JOIN T_PRICE P
                                     ON    WS.PRODUCTDEFID      			= P.PRODUCTDEFID
                                     AND   WS.PRODUCTDEFVERSION 		= P.PRODUCTDEFVERSION
                                     */
                                     LEFT OUTER JOIN BAS_UNITPRICEFORMES UP   ON WS.PRODUCTDEFID         = UP.PRODUCTDEFID 
                                              AND WS.PRODUCTDEFVERSION    = UP.PRODUCTDEFVERSION 
                                              AND SYSDATE BETWEEN UP.APPLY_START_DATE AND NVL(UP.APPLY_END_DATE, TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'))  
                                    
                                     
                                    --------------------------------------------------------
                                    
                                    WHERE 1=1
                                    
                                   	-- (21.06.17) PCM_WIPSUMMARYPERDAILY (EX) 14일 기말 = 15일 기초 -> 기말의 데이터들이 들어가 있다. (기초값은 이전날의 기말과 같음)
                                   	-- (21.07.07) 조건 변경 
									AND WS.TXNTIME      <![CDATA[>=]]>   TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))-2, 'YYYY-MM-DD')                           
									AND WS.TXNTIME      <![CDATA[<]]>     TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8),     'YYYY-MM-DD') + (INTERVAL '1' DAY), 'YYYY-MM-DD')    
                                   
                                   <if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !=''">
										AND WS.LOTTYPE 					= #{P_PRODCLASSTYPE}			
								   </if>
								   -- site
								   <if test="PLANTID != null and PLANTID !=''">
										AND WS.PLANTID 					= #{PLANTID}		
								   </if>
								   -- 제품구분
								   <if test="P_PRODDIVISION != null and P_PRODDIVISION !=''">
										AND	PD.PRODUCTDEFTYPE 		= #{P_PRODDIVISION}
								   </if>          
                                        
                                                            
                                )	WS
                                GROUP BY 	
                                        WS.ENTERPRISEID
                                     ,  WS.TXNTIME
                                    ,	WS.LOTTYPE
                                    ,	WS.PLANTID
                                    ,	WS.PROCESSSEGMENTID
                                    ,	WS.PROCESSSEGMENTVERSION
                                    ,	WS.PRODUCTDEFID
                                    ,	WS.PRODUCTDEFVERSION
                                    ,	WS.PRODUCTDEFNAME
                                    ,	WS.AREAID
                                    ,	WS.RTRSHT
                                    ,	WS.USERSEQUENCE
                                    --, 	TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')+1, 'YYYY-MM-DD')
                                     ,   TO_CHAR(TO_DATE(WS.TXNTIME),'YYYY-MM-DD')  -- (21.06.17) 수정 -> 그룹 재 지정  
                                    ,   WS.WORKDONETOPSEGMENTCLASSID
                                    ,   WS.WORKDONEMIDDLESEGMENTCLASSID
                                   
                        
                        -----------------------------------------------------------------------------------
                        
                        UNION ALL
                        -- 재공
                        SELECT L.ENTERPRISEID
                             , L.PLANTID
                             , L.LOTTYPE
                             , L.PROCESSSEGMENTID
                             , L.PROCESSSEGMENTVERSION
                             , L.PRODUCTDEFID
                             , L.PRODUCTDEFVERSION
                             , PD.PRODUCTDEFNAME
                             --, L.LOTID
                             , L.AREAID
                             , COALESCE(PD.RTRSHT, 'SHT')                   AS RTRSHT
                             , 0                                            AS BASEPCSQTY
                             , 0                                            AS BASEPANELQTY
                             , 0                                            AS BASEMMQTY
                             , 0                                            AS SENDPCSQTY
                             , 0                                            AS SENDPANELQTY
                             , 0                                            AS SENDMMQTY
                             , 0                                            AS SENDLOTCNT
                             , SUM(L.PCSQTY)                                AS WIPQTY
                             , SUM(L.PANELQTY)                              AS WIPPANELQTY
                             , SUM(NVL(ROUND((L.PCSQTY / PD.PCSMM), 2) ,0)) AS WIPMMQTY
                             , 0                                            AS INPUTPCSQTY
                             , 0                                            AS INPUTPANELQTY
                             , 0                                            AS INPUTMMQTY
                             , CASE WHEN COALESCE(L.ISREWORK, 'N') = 'Y' OR COALESCE(L.WORKCOUNT, 0) <![CDATA[>]]> 0 THEN 'IsRework'
                                    WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                    WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                END                                   AS WORKTYPE
                             --, TO_CHAR(L.SENDTIME, 'YYYY-MM-DD')         SENDDAY
                             , wsr.WORKDONETOPSEGMENTCLASSID                        	--대공정ID
                             , wsr.WORKDONEMIDDLESEGMENTCLASSID                     	--중공정ID
                             
                             ,	L.USERSEQUENCE 				AS USERSEQUENCE
                             , (  CASE WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                              THEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') 
                                              
                                              -- (21.07.07) 추가 및 이전일 0:00 ~ 08:29분도 이전 날짜가 현재공으로 나오도록
											  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
											  THEN  	TO_CHAR(SYSDATE-1, 'YYYY-MM-DD')		-- (00:00 ~ 08:29) (당일 08:30 이전인데 필터 날자가 이전날짜인 경우) -> 현재공을 이전날짜로 표시
                                              
                                              ELSE  TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
                                              END
                                        ) AS SENDDAY
                             
                             --------------------------------------------------------
                             -- (21.08.05) 개별 반올림 후 더한다 [공정관리 > 재공관리 > 모델별 재공조회 에서 합계 금액 계산 처럼]
                             --, SUM(ROUND(NVL(P.SALEPRICE,0) * NVL(L.PCSQTY,0),0)) AS PRICE       -- [금액추가]
                             
                             , ROUND(
                              SUM(
                                NVL(PCM_EXCHANGE_FN(L.PLANTID , 
                                (  CASE WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                                  THEN  SYSDATE-1                                                  
                                                  -- (21.07.07) 추가 및 이전일 0:00 ~ 08:29분도 이전 날짜가 현재공으로 나오도록
                                                  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                                  THEN  SYSDATE-1		-- (00:00 ~ 08:29) (당일 08:30 이전인데 필터 날자가 이전날짜인 경우) -> 현재공을 이전날짜로 표시                                                  
                                                  ELSE  SYSDATE 
                                                  END
                                            )
                                
                                , UP.CURRENCY_CODE, NVL(L.PCSQTY,0) * UP.UNITPRICE),0)
                                )
                                ,0)
                            PRICE
                             
                             --------------------------------------------------------
                             
                                     
                        FROM PCM_LOT                    L
                        INNER JOIN BAS_PRODUCTDEFINITION    		PD  
                        ON L.PRODUCTDEFID      					= PD.PRODUCTDEFID
                        AND L.PRODUCTDEFVERSION 				= PD.PRODUCTDEFVERSION
                        -- 대공정, 중공정, 표준공정으로 그룹핑 조회 추가
                        INNER JOIN MFM_WORKDONESEGMENTREL   wsr       
                        ON L.ENTERPRISEID                     		= wsr.ENTERPRISEID
                        AND L.PLANTID                          		= wsr.PLANTID 
                        AND L.PROCESSSEGMENTID                 	= wsr.PROCESSSEGMENTID                                                                       
                        
                        --------------------------------------------------------(21.07.30)
                         -- [금액 부분 추가]
                         /*
                         LEFT JOIN T_PRICE P
                          ON    L.PRODUCTDEFID      		= P.PRODUCTDEFID
                          AND   L.PRODUCTDEFVERSION 	= P.PRODUCTDEFVERSION
                         */
                         
                         -- (21.08.05) 동일하게 함수 호출 해서 금액 구함
                         LEFT OUTER JOIN BAS_UNITPRICEFORMES UP   ON L.PRODUCTDEFID         = UP.PRODUCTDEFID 
                                              AND L.PRODUCTDEFVERSION    = UP.PRODUCTDEFVERSION 
                                              AND SYSDATE BETWEEN UP.APPLY_START_DATE AND NVL(UP.APPLY_END_DATE, TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'))
                           
                         --------------------------------------------------------
                        
                        WHERE   1 = 1
                        AND     L.LOTSTATE          					IN ('InProduction', 'InTransit')
                        --AND     L.ISDEFECTED         				= 'N'
                        --AND     L.ISREPRESENTROLLLOT 			= 'N'
                        
                        --AND     L.LOTSTATE 					IN ('InProduction', 'InTransit')
                        --AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')	-- (21.06.22) 수정      -> (21.06.23) Finished 다시 제거
						AND     COALESCE(L.ISDEFECTED, 'N') 	= 'N'
						AND     COALESCE(L.ISHOLD, 'N') 		= 'N'
                        AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'				--(21.06.17) 추가 
                        
                        <if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !='' and !(P_PRODCLASSTYPE eq '*'.toString()) ">
		                     AND		PD.PRODUCTIONTYPE = #{P_PRODCLASSTYPE}
	                    </if>
	                    <if test="P_PRODDIVISION != null and P_PRODDIVISION !='' and !(P_PRODDIVISION eq '*'.toString()) ">
	                        AND		PD.PRODUCTDEFTYPE = #{P_PRODDIVISION}
	                    </if>
	                    <if test="PLANTID != null and PLANTID !=''">
							AND 		L.PLANTID = #{PLANTID}			
						</if>
                        
                        GROUP BY L.PLANTID
                            ,    L.LOTTYPE
                            ,    L.PROCESSSEGMENTID
                            ,    L.PROCESSSEGMENTVERSION
                            ,    L.PRODUCTDEFID
                            ,    L.PRODUCTDEFVERSION
                            ,    PD.PRODUCTDEFNAME
                            --,    L.LOTID
                            ,    L.AREAID
                            ,   COALESCE(PD.RTRSHT, 'SHT')
                            ,   CASE WHEN COALESCE(L.ISREWORK, 'N') = 'Y' OR COALESCE(L.WORKCOUNT, 0) <![CDATA[>]]> 0 THEN 'IsRework'
                                     WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                     WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                 END
                            --,   TO_CHAR(L.SENDTIME, 'YYYY-MM-DD')
                            ,   wsr.WORKDONETOPSEGMENTCLASSID
                            ,   wsr.WORKDONEMIDDLESEGMENTCLASSID
                            ,   L.ENTERPRISEID
                            
                            ,	L.USERSEQUENCE
                            --(21.06.17) 0830이전이면서 조회 날짜가 현시점의 날짜와 같은 경우 이전 날자로 설정, 그 외 SYSDATE로 설정
                            ,(  CASE 	WHEN  	TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                      	THEN  	TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') 
                                      	ELSE  		TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
                                      	END
                                )
                            
                            
                    ) WR                                            ON WR.PROCESSSEGMENTID             = PS.PROCESSSEGMENTID
                -- (21.06.17) INNER -> LEFT 로 변경
                LEFT JOIN FN_AREA(#{MODIFIER}) A                   ON WR.AREAID                       = A.AREAID
                LEFT  OUTER JOIN CMD_DICTIONARY             dc6     ON dc6.DICTIONARYID                = wsc.WORKDONESEGMENTCLASSNAME   --대분류명
                                                                   AND dc6.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                LEFT OUTER JOIN CMD_DICTIONARY              DC1     ON PS.PROCESSSEGMENTNAME           = DC1.DICTIONARYID
                                                                   AND DC1.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}          -- 다국어 코드 --'ko-KR'
                LEFT OUTER JOIN CMD_DICTIONARY              DC2     ON A.AREANAME                      = DC2.DICTIONARYID
                                                                   AND DC2.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                LEFT JOIN CMD_LOOKUP_VALUES                 CDL     ON WR.LOTTYPE                      = CDL.LOOKUP_CODE
                                                                   AND CDL.LOOKUP_TYPE                 = 'ProductionType'
                LEFT JOIN CMD_DICTIONARY                    DC5     ON  CDL.DICTIONARYID               = DC5.DICTIONARYID
                                                                   AND DC5.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                
                -- [21.05.18] 작업장 정보 추가
                LEFT JOIN  BAS_AREA                         AR
                		ON  WR.AREAID   					= AR.AREAID
                LEFT OUTER JOIN CMD_DICTIONARY  DA  
                		ON AR.AREANAME 				= DA.DICTIONARYID
                		AND DA.LANGUAGETYPE 			= #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                                                                   
                WHERE 1 = 1
                  AND   wsc.WORKDONESEGMENTCLASSTYPE    = 'TopWorkDoneSegmentClass'
                  -- 해당 조건 추가
                  <if test="P_WORKDONESEGMENTCLASSID != null and P_WORKDONESEGMENTCLASSID !='' and !(P_WORKDONESEGMENTCLASSID eq '*'.toString()) ">
                  		AND   wsc.WORKDONESEGMENTCLASSID = #{P_WORKDONESEGMENTCLASSID}    -- 화면에서 선택된 대공정(21.05.18 김진현 추가)
                  </if>
                  AND		wsc.VALIDSTATE = 'Valid'				-- 유효한것만(21.05.18 김진현 추가)
                  
                GROUP BY
                  WR.SENDDAY
                , DC6.DICTIONARYNAME
                , WR.WORKDONETOPSEGMENTCLASSID
                , WR.WORKDONEMIDDLESEGMENTCLASSID
                , WR.PROCESSSEGMENTID
                , PS.PROCESSSEGMENTNAME
                , WR.ENTERPRISEID
                , WR.PLANTID
                -- [21.05.18] 추가
                , AR.AREAID
                , DA.DICTIONARYNAME
)
, MAIN_ATY AS ( 
    --기존 쿼리
    SELECT 
           dc2.DICTIONARYNAME              			PROCESSSEGMENTNAMEBYLANGUAGE                 --공정명
         , wd.DISPLAYSEQFirst
         , wd.SENDDAY
         , wd.INPUTPNLQTY
         , wd.INPUTMMQTY
         , wd.WIPPANELQTY
         , wd.WIPMMQTY
         , wd.WORKDONETOPSEGMENTCLASSID
         , wd.WORKDONEMIDDLESEGMENTCLASSID
         , wd.PROCESSSEGMENTID
         , wd.PROCESSSEGMENTNAME
         , wsc.SEQDISPLAY
         , wd.AREAID
         , wd.AREANAME
         ---------------------------------------
         , (wd.PRICE)       AS PRICE        -- 금액 추가 (21.07.30)  
         ---------------------------------------
         
      FROM WORKDONEQTY wd
     INNER JOIN MFM_WORKDONESEGMENTCLASS wsc         ON wsc.ENTERPRISEID    = wd.ENTERPRISEID
                                                    AND wsc.PLANTID                          		= wd.PLANTID  
                                                    AND wsc.WORKDONESEGMENTCLASSID   	= wd.WORKDONEMIDDLESEGMENTCLASSID
      
      LEFT JOIN CMD_DICTIONARY           dc2         			ON dc2.DICTIONARYID    = wd.PROCESSSEGMENTNAME                 --공정명
                                                    AND dc2.LANGUAGETYPE                     	= #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
     WHERE wd.ENTERPRISEID                = #{ENTERPRISEID}
       AND wd.PLANTID                      	= #{PLANTID}
)  


-- 21.05.18 김진현 피벗 사용
    SELECT 
           		AREAID
           ,  AREANAME  
           ,  PROCESSSEGMENTNAMEBYLANGUAGE
           ,  PROCESSSEGMENTID  
           
           , WORKDONETOPSEGMENTCLASSID       --(21.05.21) 대공정 추가
           , WORKDONEMIDDLESEGMENTCLASSID   --(21.05.21) 중공정 추가
                    
           ,  ${COLUMNS_SELECT}				-- 3일치 생성될 컬럼
	 FROM ( 
		       SELECT 
                     
                      wd.AREAID
                     , wd.AREANAME
                     , wd.PROCESSSEGMENTNAMEBYLANGUAGE                	-- 공정명
                     , wd.PROCESSSEGMENTID                                  		-- 표준공정 코드
		             , wd.INPUTPNLQTY
		             , wd.INPUTMMQTY
		             , wd.WIPPANELQTY
		             , wd.WIPMMQTY
                     , wd.SENDDAY
                     
                     , wd.WORKDONETOPSEGMENTCLASSID      		--(21.05.21) 대공정 추가
                     , wd.WORKDONEMIDDLESEGMENTCLASSID   	--(21.05.21) 중공정 추가
                     
                     ---------------------------------------
                     , (wd.PRICE)       AS PRICE        					-- 금액 추가 (21.07.30)  
                     ---------------------------------------
                     
		          FROM MAIN_ATY wd              -- [21.05.18] 수정
		         RIGHT OUTER JOIN (
		                            -- 수정
                                    -- [21.05.18] 수정
                                    SELECT  TO_CHAR(d.DDAY, 'YYYY-MM-DD')                  DDAY
		                                 ,  wsc.PROCESSSEGMENTID
		                              FROM CMD_DAY                d     
		                             CROSS JOIN(
		                                         -- 표준공정의 개수만큼 
                                                  -- [21.05.18] 수정
                                                  SELECT PS.PROCESSSEGMENTID
                                                      FROM BAS_PROCESSSEGMENT			    PS
                                                      INNER JOIN MFM_WORKDONESEGMENTREL	    WSR 
                                                      ON	PS.PROCESSSEGMENTID = WSR.PROCESSSEGMENTID
                                                      WHERE 1 = 1                                                        
                                                      	<if test="P_WORKDONESEGMENTCLASSID != null and P_WORKDONESEGMENTCLASSID !='' and !(P_WORKDONESEGMENTCLASSID eq '*'.toString()) ">
									                  		AND  WSR.WORKDONETOPSEGMENTCLASSID = #{P_WORKDONESEGMENTCLASSID}    -- 화면에서 선택된 대공정(21.05.18 김진현 추가)
									                  	</if>
                                                        
                                                        AND WSR.VALIDSTATE = 'Valid'
                                                        AND WSR.WORKDONEMIDDLESEGMENTCLASSID IS NOT NULL
		                                       ) wsc
		                             WHERE d.SDAY BETWEEN  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))- 2, 'YYYYMMDD') AND SUBSTR(#{P_DATE},1, 8)
		                           ) s
                                ON s.PROCESSSEGMENTID = wd.PROCESSSEGMENTID     -- [21.05.18] 수정
		                       AND s.DDAY                   = wd.SENDDAY 
		          WHERE 1=1
		          
		          ORDER BY wd.DISPLAYSEQFIRST 
			)
		    PIVOT ( 	SUM(INPUTPNLQTY)   		AS SUM_INPUTPNLQTY
		           , 	SUM(INPUTMMQTY)  		AS SUM_INPUTMMQTY
		           , 	SUM(WIPPANELQTY)  		AS SUM_WIPPANELQTY
		           , 	SUM(WIPMMQTY)     		AS SUM_WIPMMQTY
		           ------------------------------------(21.07.30) 금액추가
                   , 	SUM(PRICE)             		AS SUM_PRICE
                   ------------------------------------
		           
		           FOR 	SENDDAY   
		           IN(		${COLUMNS}	)
	                         	
			)
            
            where 1 = 1
               and AREAID is not null      -- null 이면 삭제
	</select>


    <!--
        설       명   : 주요 공정 실적 현황판 - Summary Left조회
        생   성   자   : 김진현
        생   성   일   : 2021-05-18
        수  정   이  력 :
    -->
    <select id="selectWorkDoneSummaryLeftList" parameterType="map" resultType="hashmap">
/*selectWorkDoneSummaryLeftList - 주요 공정 실적 현황판 - Summary Left */


/*################################[21.07.30 단가(금액) 추가]#################################################*/
		/*  공정관리 > 투입관리 > 단가 Table 쿼리 참조*/
		-- (21.07.29) - 금액 계산을 위해 단가 Table 추가 
		WITH  T_PRICE AS (
        SELECT    PRD.PLANTID 	
                        , PRD.PRODUCTDEFID 
                        , PRD.PRODUCTDEFVERSION 				
                        , UPR.CURRENCY_CODE     -- 단위
                        , PRD.UNIT       	AS UOM      -- 
                        , NVL(EXC.EXCHANGE_RATE,1) 					AS EXCHANGE_RATE
                        , UPR.UNITPRICE * NVL(EXC.EXCHANGE_RATE,1) 	AS SALEPRICE                -- 판가 해당 값과 pcs 수량 곱해서 계산
                  FROM BAS_ITEMMASTER IM
                  INNER JOIN BAS_PRODUCTDEFINITION PRD 		ON  PRD.PRODUCTDEFID = ITEMID
                                                            AND PRD.PRODUCTDEFVERSION = ITEMVERSION
                  INNER JOIN BAS_UNITPRICEFORMES UPR 		-- [단가]
                                                            ON  IM.ENTERPRISEID = UPR.ENTERPRISEID
                                                            AND IM.ITEMID = UPR.PRODUCTDEFID
                                                            AND IM.ITEMVERSION = UPR.PRODUCTDEFVERSION
                  LEFT JOIN BAS_EXCHANGE EXC				-- [환율]
                                                            ON  UPR.CURRENCY_CODE = EXC.CURRENCY_CODE
                                                            AND EXC.PERIOD_NAME = TO_CHAR(SYSDATE ,'YYYY-MM')
                 /*
                  LEFT OUTER JOIN BAS_CUSTOMER      CUST    ON  PRD.ENTERPRISEID = CUST.ENTERPRISEID 
                                                            AND PRD.PLANTID = CUST.PLANTID
                                                            AND PRD.CUSTOMERID =  CUST.CUSTOMERID  
                                                            */
                  LEFT OUTER JOIN BAS_PRODUCTITEMSPEC PIS   ON  IM.ENTERPRISEID = PIS.ENTERPRISEID
                                                            AND IM.ITEMID = PIS.ITEMID
                                                            AND IM.ITEMVERSION = PIS.ITEMVERSION
                  /*
                  LEFT OUTER JOIN CMD_USERS         MUSER   ON  UPR.ENTERPRISEID = MUSER.ENTERPRISEID
                                                            AND UPR.MODIFIER =  MUSER.USER_ID           
                                                            */
                WHERE 1=1
                  AND PRD.PLANTID = #{PLANTID}
        )
        ----------------------------------------------------------------------------------------------------------------------[단가 ↑]
	
	,  WORKDONEQTY AS(
    /********************************************************************************************************
    --1. 이틀간 품목별 실적, 재공조회
    --   조회조건: 양산구분/제품구분/대공정그룹
    대공정이 투입현황이 아니면  공정관리 >> 생산실적 >> 작업실적조회에서 품목 탭의 데이터를 조회
        select id="selectWorkResultList" parameterType="map" resultType="hashmap"
         SelectWorkResultList 10001
            if test="TYPE =='BYPRODUCT'"
    ********************************************************************************************************/
                SELECT DC6.DICTIONARYNAME                       WORKDONESEGMENTCLASSNAME   --대분류명
                     , 2                                        DISPLAYSEQFirst
                     , WR.SENDDAY
                     , SUM(COALESCE(SENDPANELQTY ,0))       AS INPUTPNLQTY
                     , SUM(COALESCE(SENDMMQTY ,0))          AS INPUTMMQTY
                     , SUM(COALESCE(WIPPANELQTY ,0))        AS WIPPANELQTY
                     , SUM(COALESCE(WIPMMQTY ,0))           AS WIPMMQTY
                     , WR.WORKDONETOPSEGMENTCLASSID
                     , WR.WORKDONEMIDDLESEGMENTCLASSID
                     , WR.PROCESSSEGMENTID
                     , PS.PROCESSSEGMENTNAME
                     , WR.ENTERPRISEID                    ENTERPRISEID
                     , WR.PLANTID                         PLANTID
                     , WR.PRODUCTDEFID                                             		--상세화면Query에서 추가[소계 - 품목코드]
                     , WR.PRODUCTDEFNAME                                           	--상세화면Query에서 추가[소계 - 품목명]
                     
                     
                     ------------------------------------------------------------ (21.07.30)
                     , SUM(COALESCE(WR.PRICE ,0))           			AS PRICE    
                     ------------------------------------------------------------
                     
                  FROM MFM_WORKDONESEGMENTCLASS    wsc
                  LEFT OUTER JOIN MFM_WORKDONESEGMENTREL wsr  ON wsc.WORKDONESEGMENTCLASSID       = wsr.WORKDONETOPSEGMENTCLASSID
                  LEFT OUTER JOIN BAS_PROCESSSEGMENT  PS      ON WSR.PROCESSSEGMENTID             = PS.PROCESSSEGMENTID
                  LEFT OUTER JOIN (
                        -- 실적
                        SELECT LWR.ENTERPRISEID
                             , LWR.PLANTID
                             , L.LOTTYPE
                             , LWR.PROCESSSEGMENTID
                             , LWR.PROCESSSEGMENTVERSION
                             , LWR.PRODUCTDEFID
                             , LWR.PRODUCTDEFVERSION
                             , PD.PRODUCTDEFNAME
                             --, LWR.LOTID
                             , LWR.AREAID
                             , COALESCE(PD.RTRSHT, 'SHT')   AS RTRSHT
                             , 0                            AS BASEPCSQTY
                             , 0                            AS BASEPANELQTY
                             , 0                            AS BASEMMQTY
                             , SUM(LWR.SENDPCSQTY)          AS SENDPCSQTY
                             , SUM(LWR.SENDPANELQTY)        AS SENDPANELQTY
                             ,  SUM(NVL(ROUND((LWR.SENDPCSQTY / PD.PCSMM), 2) ,0))  AS SENDMMQTY
                             , COUNT(1)                 AS SENDLOTCNT
                             , 0                            AS WIPPCSQTY
                             , 0                            AS WIPPANELQTY
                             , 0                            AS WIPMMQTY
                             , 0                            AS INPUTPCSQTY
                             , 0                            AS INPUTPANELQTY
                             , 0                            AS INPUTMMQTY
                             , CASE WHEN COALESCE(LWR.ISREWORK, 'N') = 'Y' OR COALESCE(LWR.WORKCOUNT, 0)  <![CDATA[>]]>  0 THEN 'IsRework'
                                    WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                    WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                END                         AS WORKTYPE
                             --, TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')         SENDDAY
                             , wsr.WORKDONETOPSEGMENTCLASSID                              -- 대공정ID
                             , wsr.WORKDONEMIDDLESEGMENTCLASSID                           -- 중공정ID
                             
                             
                             --(21.06.17) 추가 부분
                             ,	L.USERSEQUENCE 				AS USERSEQUENCE                     -- [21.06.17] 추가
                             -- (21.06.17) 전날 08:30 다음날 08:29:59 까지 가 전날값 
                             , (  CASE WHEN  	TO_CHAR(LWR.SENDTIME, 'HH24MISS')  <![CDATA[<]]>  '083000'       
                                      THEN 		TO_CHAR(LWR.SENDTIME - 1, 'YYYY-MM-DD')
                                      ELSE 		TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')
                                      END
                                ) AS SENDDAY
                                
                             ----------------------------------------------
                             -- [금액추가](21.07.30)
                             , 0 AS PRICE
                             ----------------------------------------------   
                             
                        FROM    PCM_LOTWORKRESULT LWR
                        INNER JOIN BAS_PRODUCTDEFINITION     PD  
                        ON LWR.PRODUCTDEFID      				= PD.PRODUCTDEFID
                        AND LWR.PRODUCTDEFVERSION 			= PD.PRODUCTDEFVERSION
                        -- 대공정, 중공정, 표준공정으로 그룹핑 조회 추가
                        INNER  JOIN MFM_WORKDONESEGMENTREL       wsr  
                        ON LWR.ENTERPRISEID                     	= wsr.ENTERPRISEID
                        AND LWR.PLANTID                          	= wsr.PLANTID
                        AND LWR.PROCESSSEGMENTID            	= wsr.PROCESSSEGMENTID
                        LEFT OUTER JOIN PCM_LOT             L         
                        ON LWR.LOTID                            		= L.LOTID

                        WHERE 1=1
                            --AND LWR.RESULTTYPE  NOT IN ('SKIP')
                            AND LWR.SENDTIME      <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))- 2, 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')
                            AND LWR.SENDTIME      <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYY-MM-DD') + (INTERVAL '1' DAY), 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')
                            AND LWR.SENDPCSQTY    <![CDATA[>]]> 0
                            
                            AND 		COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
                            -- [조건 추가 수정 필요함 21.06.17]
							AND     COALESCE(L.ISDEFECTED, 'N') 			= 'N'
                            AND     COALESCE(L.ISHOLD, 'N') 				= 'N'           							--(21.06.17) 추가
                            --AND     L.LOTSTATE 								IN ('InProduction', 'InTransit')			--(21.06.17) 추가
                            AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')	-- (21.06.22) 수정
                            AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]>  'Return'				--(21.06.17) 추가
                            
                            -- (21.06.17) 추가
                            <if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !='' and !(P_PRODCLASSTYPE eq '*'.toString()) ">
		                        AND		PD.PRODUCTIONTYPE = #{P_PRODCLASSTYPE}
		                    </if>
		                    <if test="P_PRODDIVISION != null and P_PRODDIVISION !='' and !(P_PRODDIVISION eq '*'.toString()) ">
		                        AND		PD.PRODUCTDEFTYPE = #{P_PRODDIVISION}
		                    </if>
		                    <if test="PLANTID != null and PLANTID !=''">
								AND LWR.PLANTID = #{PLANTID}			
							</if>
                            
                        GROUP BY
                                LWR.ENTERPRISEID
                            ,   LWR.PLANTID
                            ,   L.LOTTYPE
                            ,   LWR.PROCESSSEGMENTID
                            ,   LWR.PROCESSSEGMENTVERSION
                            ,   LWR.PRODUCTDEFID
                            ,   LWR.PRODUCTDEFVERSION
                            ,   PD.PRODUCTDEFNAME
                            --,   LWR.LOTID
                            ,   LWR.AREAID
                            ,   COALESCE(PD.RTRSHT, 'SHT')
                            ,   CASE WHEN COALESCE(LWR.ISREWORK, 'N') = 'Y' OR COALESCE(LWR.WORKCOUNT, 0)  <![CDATA[>]]> 0 THEN 'IsRework'
                                     WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                     WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                END
                            --, TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')
                            , 	wsr.WORKDONETOPSEGMENTCLASSID
                            , 	wsr.WORKDONEMIDDLESEGMENTCLASSID
                            
                            ,	L.USERSEQUENCE
                            -- (21.06.15) 전날 08:30 다음날 08:29:59 까지 가 전날값 
                            , (  CASE WHEN  	TO_CHAR(LWR.SENDTIME, 'HH24MISS')  <![CDATA[<]]> '083000'       
                                      THEN 		TO_CHAR(LWR.SENDTIME - 1, 'YYYY-MM-DD')
                                      ELSE 		TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')
                                      END
                                )
                            
                        -----------------------------------------------------------------------------------------------------
                        
                        -- [21.06.16] 기초 추가
                        UNION ALL
                         -- 기초
                                SELECT
                                        WS.ENTERPRISEID
                                    ,	WS.PLANTID
                                    ,	WS.LOTTYPE
                                    ,	WS.PROCESSSEGMENTID
                                    ,	WS.PROCESSSEGMENTVERSION
                                    ,	WS.PRODUCTDEFID
                                    ,	WS.PRODUCTDEFVERSION
                                    ,	WS.PRODUCTDEFNAME
                                    ,	WS.AREAID
                                    ,	WS.RTRSHT
                                    ,	SUM(WS.QTY)		AS BASEPCSQTY
                                    ,	SUM(PANELQTY)	AS BASEPANELQTY
                                    , 	SUM(NVL(ROUND((WS.QTY / WS.PCSMM), 2),0))	AS BASEMMQTY
                                    ,	0						AS SENDPCSQTY
                                    ,	0						AS SENDPANELQTY
                                    , 	0						AS SENDMMQTY
                                    ,	0						AS SENDLOTCNT
                                    ,	SUM(WS.QTY)		AS WIPPCSQTY
                                    ,	SUM(PANELQTY)	AS WIPPANELQTY
                                    , 	SUM(NVL(ROUND((WS.QTY / WS.PCSMM), 2),0))	AS WIPMMQTY
                                    ,	0						AS INPUTPCSQTY
                                    ,	0						AS INPUTPANELQTY
                                    , 	0						AS INPUTMMQTY
                                    ,	''						AS WORKTYPE
                                    
                                    ,   WS.WORKDONETOPSEGMENTCLASSID
                                    ,   WS.WORKDONEMIDDLESEGMENTCLASSID
                                    ,	WS.USERSEQUENCE 											AS USERSEQUENCE
                                    ,   TO_CHAR(TO_DATE(WS.TXNTIME),'YYYY-MM-DD')      	AS SENDDAY
                                    
                                    
                                    ----------------------------------------------
                                    -- [금액추가] (21.07.30)
                                    ,   ROUND(
                                    		SUM(PRICE) 
                                    	,0)
                                    	AS PRICE
                                    ----------------------------------------------
                                    
                                FROM(
                                    SELECT 
                                           -- WS.TXNTIME
                                            PD.ENTERPRISEID
                                        --,   TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')+1, 'YYYY-MM-DD')  AS TXNTIME
                                        -- (21.06.17) -> 현재공과 기초 번갈아 가면서 나오도록 적용
                                           /*
                                             당일 08:30 이전이면 이전날 데이터가 있어도 기초로 나오지 않고 현재공을 보도록 
                                             당일 08:30 이후이면 당일, 이전날 데이터 생성됨 당일은 현재공, 이전날은 기초값 보도록 설정
                                           */
                                       -- [기초 부분 수정] (21.07.07)
										, (  CASE 
												-- (당일 08:30 이전인 상태에서 당일날짜로 조회시)
												WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  NULL  -- (당일 08:30 이전인 경우 이전날짜) 이전날짜의 경우가 현재공을 봐야됨
															 ELSE  TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END
															 
												  -- (당일 08:30 이전인 상태에서 이전날짜로 조회시 )
												  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  NULL	-- 해당의 경우 (00:00 ~ 08:29 까지의 데이터) 당일일 경우 재공쪽을 본다.
															 ELSE  TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END	
															 
												  ELSE  
														-- 그 날짜 그대로 (각 기말 데이터) (21.07.07)
														CASE WHEN  TO_CHAR(SYSDATE, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  NULL
															 ELSE  TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 END
												  END
											) AS TXNTIME
                                        
                                        ,	WS.LOTTYPE
                                        ,	WS.PLANTID
                                        ,	WS.PRODUCTDEFID
                                        ,	WS.PRODUCTDEFVERSION
                                        ,	PD.PRODUCTDEFNAME
                                        ,	WS.PROCESSSEGMENTID
                                        ,	WS.PROCESSSEGMENTVERSION
                                        --,	L.LOTID
                                        ,	WS.AREAID
                                        ,	WS.QTY
                                        ,	WS.PANELQTY
                                        ,	COALESCE(PD.RTRSHT, 'SHT')	AS RTRSHT
                                        ,	PD.PCSMM
                                        ,	BP.USERSEQUENCE
                                        , 	wsr.WORKDONETOPSEGMENTCLASSID                        		--대공정ID
                                        , 	wsr.WORKDONEMIDDLESEGMENTCLASSID                     	--중공정ID
                                        
                                        --------------------------------------------------------
                                        -- (21.08.05) 개별 반올림 후 더한다 [공정관리 > 재공관리 > 모델별 재공조회 에서 합계 금액 계산 처럼]
                                        --, ROUND(NVL(P.SALEPRICE,0) * NVL(WS.QTY,0),0) AS PRICE       -- [금액추가](21.07.30)
                                        , --ROUND(
                                        NVL(PCM_EXCHANGE_FN(WS.PLANTID , 
                                            (  CASE 
												-- (당일 08:30 이전인 상태에서 당일날짜로 조회시)
												WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  SYSDATE  -- (당일 08:30 이전인 경우 이전날짜) 이전날짜의 경우가 현재공을 봐야됨
															 ELSE  TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END															 
												  -- (당일 08:30 이전인 상태에서 이전날짜로 조회시 )
												  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  SYSDATE	-- 해당의 경우 (00:00 ~ 08:29 까지의 데이터) 당일일 경우 재공쪽을 본다.
															 ELSE  TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END																 
												  ELSE  
														-- 그 날짜 그대로 (각 기말 데이터) (21.07.07)
														CASE WHEN  TO_CHAR(SYSDATE, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  SYSDATE
															 ELSE  TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')
															 END
												  END
											)
                                        , UP.CURRENCY_CODE, NVL(WS.QTY,0) * UP.UNITPRICE),0)
                                        --,0)	
                                        PRICE
                                        
                                        --------------------------------------------------------
                                         
                                    FROM PCM_WIPSUMMARYPERDAILY		WS
                                    INNER JOIN BAS_PRODUCTDEFINITION		PD	
                                    ON	WS.PRODUCTDEFID 				= PD.PRODUCTDEFID
                                    AND	WS.PRODUCTDEFVERSION 		= PD.PRODUCTDEFVERSION
                                    INNER JOIN BAS_PROCESSPATH				BP 	
                                    ON BP.PROCESSDEFID  					= WS.PRODUCTDEFID 
                                    AND	BP.PROCESSDEFVERSION 			= WS.PRODUCTDEFVERSION
                                    AND	BP.PROCESSSEGMENTID 			= WS.PROCESSSEGMENTID
                                    
                                     -- 대공정, 중공정, 표준공정으로 그룹핑 조회 추가
                                    INNER JOIN MFM_WORKDONESEGMENTREL   wsr       
                                    ON PD.ENTERPRISEID                 		= wsr.ENTERPRISEID
                                    AND WS.PLANTID                          = wsr.PLANTID 
                                    AND WS.PROCESSSEGMENTID           = wsr.PROCESSSEGMENTID
                                    
                                    
                                    --------------------------------------------------------
                                    -- [금액 부분 추가](21.07.30)
                                    /*
                                    LEFT JOIN T_PRICE P
                                     ON    WS.PRODUCTDEFID      			= P.PRODUCTDEFID
                                     AND   WS.PRODUCTDEFVERSION 		= P.PRODUCTDEFVERSION
                                    */
                                    
                                    LEFT OUTER JOIN BAS_UNITPRICEFORMES UP   ON WS.PRODUCTDEFID         = UP.PRODUCTDEFID 
                                              AND WS.PRODUCTDEFVERSION    = UP.PRODUCTDEFVERSION 
                                              AND SYSDATE BETWEEN UP.APPLY_START_DATE AND NVL(UP.APPLY_END_DATE, TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'))  
                                    
                                     
                                    --------------------------------------------------------
                                    
                                    WHERE 1=1
                                    
                                   	-- (21.06.15) PCM_WIPSUMMARYPERDAILY (EX) 14일 기말 = 15일 기초 -> 기말의 데이터들이 들어가 있다. (기초값은 이전날의 기말과 같음)
                                   	-- (21.07.07) 조건 변경 
									AND WS.TXNTIME      <![CDATA[>=]]>   TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))-2, 'YYYY-MM-DD')                           
									AND WS.TXNTIME      <![CDATA[<]]>     TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8),     'YYYY-MM-DD') + (INTERVAL '1' DAY), 'YYYY-MM-DD')  
                                   
                                   <if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !=''">
										AND WS.LOTTYPE 					= #{P_PRODCLASSTYPE}			
								   </if>
								   -- site
								   <if test="PLANTID != null and PLANTID !=''">
										AND WS.PLANTID 					= #{PLANTID}		
								   </if>
								   -- 제품구분
								   <if test="P_PRODDIVISION != null and P_PRODDIVISION !=''">
										AND	PD.PRODUCTDEFTYPE 		= #{P_PRODDIVISION}
								   </if>          
                                        
                                                            
                                )	WS
                                GROUP BY 	
                                        WS.ENTERPRISEID
                                     ,  WS.TXNTIME
                                    ,	WS.LOTTYPE
                                    ,	WS.PLANTID
                                    ,	WS.PROCESSSEGMENTID
                                    ,	WS.PROCESSSEGMENTVERSION
                                    ,	WS.PRODUCTDEFID
                                    ,	WS.PRODUCTDEFVERSION
                                    ,	WS.PRODUCTDEFNAME
                                    ,	WS.AREAID
                                    ,	WS.RTRSHT
                                    ,	WS.USERSEQUENCE
                                    --, 	TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')+1, 'YYYY-MM-DD')
                                     ,   TO_CHAR(TO_DATE(WS.TXNTIME),'YYYY-MM-DD')  -- (21.06.17) 수정 -> 그룹 재 지정  
                                    ,   WS.WORKDONETOPSEGMENTCLASSID
                                    ,   WS.WORKDONEMIDDLESEGMENTCLASSID
                        
                        -----------------------------------------------------------------------------------------------------
                        UNION ALL
                        -- 재공
                        SELECT L.ENTERPRISEID
                             , L.PLANTID
                             , L.LOTTYPE
                             , L.PROCESSSEGMENTID
                             , L.PROCESSSEGMENTVERSION
                             , L.PRODUCTDEFID
                             , L.PRODUCTDEFVERSION
                             , PD.PRODUCTDEFNAME
                             --, L.LOTID
                             , L.AREAID
                             , COALESCE(PD.RTRSHT, 'SHT')                   AS RTRSHT
                             , 0                                            AS BASEPCSQTY
                             , 0                                            AS BASEPANELQTY
                             , 0                                            AS BASEMMQTY
                             , 0                                            AS SENDPCSQTY
                             , 0                                            AS SENDPANELQTY
                             , 0                                            AS SENDMMQTY
                             , 0                                            AS SENDLOTCNT
                             , SUM(L.PCSQTY)                         	AS WIPQTY
                             , SUM(L.PANELQTY)                      	AS WIPPANELQTY
                             , SUM(NVL(ROUND((L.PCSQTY / PD.PCSMM), 2) ,0)) AS WIPMMQTY
                             , 0                                            AS INPUTPCSQTY
                             , 0                                            AS INPUTPANELQTY
                             , 0                                            AS INPUTMMQTY
                             , CASE WHEN COALESCE(L.ISREWORK, 'N') = 'Y' OR COALESCE(L.WORKCOUNT, 0) <![CDATA[>]]> 0 THEN 'IsRework'
                                    WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                    WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                END                                   AS WORKTYPE
                             --, TO_CHAR(L.SENDTIME, 'YYYY-MM-DD')         SENDDAY
                             , 	wsr.WORKDONETOPSEGMENTCLASSID                        	--대공정ID
                             , 	wsr.WORKDONEMIDDLESEGMENTCLASSID                     --중공정ID
                             
                             ,	L.USERSEQUENCE 				AS USERSEQUENCE
                             , (  CASE WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                              THEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') 
                                              
                                              -- (21.07.07) 추가 및 이전일 0:00 ~ 08:29분도 이전 날짜가 현재공으로 나오도록
											  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
											  THEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD')		-- (00:00 ~ 08:29) (당일 08:30 이전인데 필터 날자가 이전날짜인 경우) -> 현재공을 이전날짜로 표시
                                              
                                              ELSE  TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
                                              END
                                        ) AS SENDDAY
                                        
                                        
                             --------------------------------------------------------
                             -- (21.08.05) 개별 반올림 후 더한다 [공정관리 > 재공관리 > 모델별 재공조회 에서 합계 금액 계산 처럼]
                             --, SUM(ROUND(NVL(P.SALEPRICE,0) * NVL(L.PCSQTY,0),0)) AS PRICE       -- [금액추가]
                             
                             , ROUND(
                              SUM(
                                NVL(PCM_EXCHANGE_FN(L.PLANTID , 
                                (  CASE WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                                  THEN  SYSDATE-1                                                  
                                                  -- (21.07.07) 추가 및 이전일 0:00 ~ 08:29분도 이전 날짜가 현재공으로 나오도록
                                                  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                                  THEN  SYSDATE-1		-- (00:00 ~ 08:29) (당일 08:30 이전인데 필터 날자가 이전날짜인 경우) -> 현재공을 이전날짜로 표시                                                  
                                                  ELSE  SYSDATE 
                                                  END
                                            )
                                
                                , UP.CURRENCY_CODE, NVL(L.PCSQTY,0) * UP.UNITPRICE),0)
                                )
                                ,0)
                            PRICE
                             
                             --------------------------------------------------------          
                             
                             
                        FROM PCM_LOT                    L
                        INNER JOIN BAS_PRODUCTDEFINITION    PD  
                        ON L.PRODUCTDEFID      				= PD.PRODUCTDEFID
                        AND L.PRODUCTDEFVERSION 			= PD.PRODUCTDEFVERSION
                        -- 대공정, 중공정, 표준공정으로 그룹핑 조회 추가
                        INNER JOIN MFM_WORKDONESEGMENTREL   wsr       
                        ON L.ENTERPRISEID                     	= wsr.ENTERPRISEID
                        AND L.PLANTID                          	= wsr.PLANTID
                        AND L.PROCESSSEGMENTID              = wsr.PROCESSSEGMENTID
                       
                        --------------------------------------------------------(21.07.30)
                         -- [금액 부분 추가]
                         /*
                         LEFT JOIN T_PRICE P
                          ON    L.PRODUCTDEFID      		= P.PRODUCTDEFID
                          AND   L.PRODUCTDEFVERSION 	= P.PRODUCTDEFVERSION
                         */
                         
                         -- (21.08.05) 동일하게 함수 호출 해서 금액 구함
                         LEFT OUTER JOIN BAS_UNITPRICEFORMES UP   ON L.PRODUCTDEFID         = UP.PRODUCTDEFID 
                                              AND L.PRODUCTDEFVERSION    = UP.PRODUCTDEFVERSION 
                                              AND SYSDATE BETWEEN UP.APPLY_START_DATE AND NVL(UP.APPLY_END_DATE, TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'))
                         
                          
                         --------------------------------------------------------
                        
                        WHERE   1 = 1
                        AND     L.LOTSTATE IN ('InProduction', 'InTransit')
                        --AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')	-- (21.06.22) 수정     -> (21.06.23) Finished 다시 제거
						AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
						AND     COALESCE(L.ISHOLD, 'N') = 'N'
						AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'				--(21.06.17) 추가
						
						
						-- (필터 조건 누락된내용 추가)(21.07.26)
	                  	<if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !='' and !(P_PRODCLASSTYPE eq '*'.toString()) ">
							 AND		PD.PRODUCTIONTYPE = #{P_PRODCLASSTYPE}
						</if>
						<if test="P_PRODDIVISION != null and P_PRODDIVISION !='' and !(P_PRODDIVISION eq '*'.toString()) ">
							AND		PD.PRODUCTDEFTYPE = #{P_PRODDIVISION}
						</if>
						<if test="PLANTID != null and PLANTID !=''">
							AND 		L.PLANTID = #{PLANTID}			
						</if>
                        
                        GROUP BY L.PLANTID
                            ,    L.LOTTYPE
                            ,    L.PROCESSSEGMENTID
                            ,    L.PROCESSSEGMENTVERSION
                            ,    L.PRODUCTDEFID
                            ,    L.PRODUCTDEFVERSION
                            ,    PD.PRODUCTDEFNAME
                            --,    L.LOTID
                            ,    L.AREAID
                            ,   COALESCE(PD.RTRSHT, 'SHT')
                            ,   CASE WHEN COALESCE(L.ISREWORK, 'N') = 'Y' OR COALESCE(L.WORKCOUNT, 0) <![CDATA[>]]> 0 THEN 'IsRework'
                                     WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                     WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                 END
                            --,   TO_CHAR(L.SENDTIME, 'YYYY-MM-DD')
                            ,   wsr.WORKDONETOPSEGMENTCLASSID
                            ,   wsr.WORKDONEMIDDLESEGMENTCLASSID
                            ,   L.ENTERPRISEID
                            
                            ,	L.USERSEQUENCE
                            --(21.06.17) 0830이전이면서 조회 날짜가 현시점의 날짜와 같은 경우 이전 날자로 설정, 그 외 SYSDATE로 설정
                            ,(  CASE WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                      THEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') 
                                      ELSE  TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
                                      END
                                )
                            
                    ) WR                                            ON WR.PROCESSSEGMENTID             = PS.PROCESSSEGMENTID
                INNER JOIN FN_AREA(#{MODIFIER}) A                   ON WR.AREAID                       = A.AREAID
                LEFT  OUTER JOIN CMD_DICTIONARY             dc6     ON dc6.DICTIONARYID                = wsc.WORKDONESEGMENTCLASSNAME   --대분류명
                                                                   AND dc6.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                LEFT OUTER JOIN CMD_DICTIONARY              DC1     ON PS.PROCESSSEGMENTNAME           = DC1.DICTIONARYID
                                                                   AND DC1.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}          -- 다국어 코드 --'ko-KR'
                LEFT OUTER JOIN CMD_DICTIONARY              DC2     ON A.AREANAME                      = DC2.DICTIONARYID
                                                                   AND DC2.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                LEFT JOIN CMD_LOOKUP_VALUES                 CDL     ON WR.LOTTYPE                      = CDL.LOOKUP_CODE
                                                                   AND CDL.LOOKUP_TYPE                 = 'ProductionType'
                LEFT JOIN CMD_DICTIONARY                    DC5     ON  CDL.DICTIONARYID               = DC5.DICTIONARYID
                                                                   AND DC5.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                WHERE 1 = 1
                  AND   wsc.WORKDONESEGMENTCLASSTYPE    = 'TopWorkDoneSegmentClass'
                  -- 해당 조건 추가
                  <if test="P_WORKDONESEGMENTCLASSID != null and P_WORKDONESEGMENTCLASSID !='' and !(P_WORKDONESEGMENTCLASSID eq '*'.toString()) ">
                        AND   wsc.WORKDONESEGMENTCLASSID = #{P_WORKDONESEGMENTCLASSID}    -- 화면에서 선택된 대공정(21.05.18 김진현 추가)
                  </if>
                  AND       wsc.VALIDSTATE = 'Valid'                -- 유효한것만(21.05.18 김진현 추가)
                  
                  
                  	

                GROUP BY
                  WR.SENDDAY
                , DC6.DICTIONARYNAME
                , WR.WORKDONETOPSEGMENTCLASSID
                , WR.WORKDONEMIDDLESEGMENTCLASSID
                , WR.PROCESSSEGMENTID
                , PS.PROCESSSEGMENTNAME
                , WR.PRODUCTDEFID       		--상세화면Query에서 추가[소계 - 품목코드]
                , WR.PRODUCTDEFNAME     		--상세화면Query에서 추가[소계 - 품목명]
                , WR.ENTERPRISEID
                , WR.PLANTID
)
, MAIN_ATY AS (
    --기존 쿼리
    SELECT
           wd.WORKDONESEGMENTCLASSNAME      WORKDONTOPSEGMENTCLASSNAME                   --대분류명
         , dc1.DICTIONARYNAME                       	WORKDONEMIDDLESEGMENTCLASSNAME             --중분류명
         , dc2.DICTIONARYNAME                       	PROCESSSEGMENTNAMEBYLANGUAGE                 --공정명
         , wd.DISPLAYSEQFirst
         , wd.SENDDAY
         , wd.INPUTPNLQTY
         , wd.INPUTMMQTY
         , wd.WIPPANELQTY
         , wd.WIPMMQTY
         , wd.WORKDONETOPSEGMENTCLASSID
         , wd.WORKDONEMIDDLESEGMENTCLASSID
         , wd.PROCESSSEGMENTID
         , wd.PROCESSSEGMENTNAME
         , wsc.SEQDISPLAY
         , wd.PRODUCTDEFID                      	--상세화면Query에서 추가[소계 - 품목코드]
         , wd.PRODUCTDEFNAME                    	--상세화면Query에서 추가[소계 - 품목명]
         
         ---------------------------------------
         , (wd.PRICE)       AS PRICE        -- 금액 추가 (21.07.30)  
         ---------------------------------------
         
      FROM WORKDONEQTY wd
     INNER JOIN MFM_WORKDONESEGMENTCLASS wsc         ON wsc.ENTERPRISEID                = wd.ENTERPRISEID
                                                    AND wsc.PLANTID                     = wd.PLANTID
                                                    AND wsc.WORKDONESEGMENTCLASSID      = wd.WORKDONEMIDDLESEGMENTCLASSID
      LEFT JOIN CMD_DICTIONARY           dc1         ON dc1.DICTIONARYID                = wsc.WORKDONESEGMENTCLASSNAME     --중분류명
                                                    AND dc1.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}          -- 다국어 코드 --'ko-KR'
      LEFT JOIN CMD_DICTIONARY           dc2         ON dc2.DICTIONARYID                = wd.PROCESSSEGMENTNAME            --공정명
                                                    AND dc2.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}          -- 다국어 코드 --'ko-KR'
     WHERE wd.ENTERPRISEID                = #{ENTERPRISEID}
       AND wd.PLANTID                     = #{PLANTID}
       -- [중공정 조건 추가]
      <if test="P_WORKDONEMIDDLESEGMENTCLASSID != null and P_WORKDONEMIDDLESEGMENTCLASSID !='' and !(P_WORKDONEMIDDLESEGMENTCLASSID eq '*'.toString()) ">
            AND   wd.WORKDONEMIDDLESEGMENTCLASSID = #{P_WORKDONEMIDDLESEGMENTCLASSID}    -- 화면에서 선택된 중공정(21.05.20 김진현 추가)
      </if>
)

    SELECT
              WORKDONTOPSEGMENTCLASSNAME
           ,  WORKDONETOPSEGMENTCLASSID
           ,  WORKDONEMIDDLESEGMENTCLASSNAME
           ,  WORKDONEMIDDLESEGMENTCLASSID
           ,  PROCESSSEGMENTNAMEBYLANGUAGE
           ,  PROCESSSEGMENTID
           ,  PRODUCTDEFID              		--상세화면Query에서 추가[소계 - 품목코드]
           ,  PRODUCTDEFNAME            	--상세화면Query에서 추가[소계 - 품목명]
           ,  ${COLUMNS_SELECT}             -- 3일치 생성될 컬럼
     FROM (
               SELECT

                      wd.WORKDONTOPSEGMENTCLASSNAME                     	--대분류명
                     , wd.WORKDONETOPSEGMENTCLASSID                        	-- 대공정 코드
                     , wd.WORKDONEMIDDLESEGMENTCLASSNAME              	-- 중분류명
                     , wd.WORKDONEMIDDLESEGMENTCLASSID                  		-- 중분류 코드
                     , wd.PROCESSSEGMENTNAMEBYLANGUAGE                  	-- 공정명
                     , wd.PROCESSSEGMENTID                                          	-- 표준공정 코드
                     , wd.INPUTPNLQTY
                     , wd.INPUTMMQTY
                     , wd.WIPPANELQTY
                     , wd.WIPMMQTY
                     , wd.SENDDAY
                     , wd.PRODUCTDEFID              	--상세화면Query에서 추가[소계 - 품목코드]
                     , wd.PRODUCTDEFNAME            	--상세화면Query에서 추가[소계 - 품목명]
                     
                     ---------------------------------------
                     , (wd.PRICE)       AS PRICE        					-- 금액 추가 (21.07.30)  
                     ---------------------------------------
                     
                  FROM MAIN_ATY wd              
                 RIGHT OUTER JOIN (
                                    -- 수정
                                    -- [21.05.18] 수정
                                    SELECT  TO_CHAR(d.DDAY, 'YYYY-MM-DD')                  DDAY
                                         ,  wsc.PROCESSSEGMENTID
                                      FROM CMD_DAY                d
                                     CROSS JOIN(
                                                 -- 표준공정의 개수만큼 / 품목코드 
                                                  -- [21.05.20] 수정
                                                    SELECT PS.PROCESSSEGMENTID				-- 표준공정
                                                      FROM BAS_PROCESSSEGMENT			    PS
                                                      INNER JOIN MFM_WORKDONESEGMENTREL	    WSR 
                                                      ON	PS.PROCESSSEGMENTID = WSR.PROCESSSEGMENTID
                                                      WHERE 1 = 1
                                                        <if test="P_WORKDONESEGMENTCLASSID != null and P_WORKDONESEGMENTCLASSID !='' and !(P_WORKDONESEGMENTCLASSID eq '*'.toString()) ">
                                                            AND  WSR.WORKDONETOPSEGMENTCLASSID = #{P_WORKDONESEGMENTCLASSID}    -- 화면에서 선택된 대공정(21.05.18 김진현 추가)
                                                        </if>
                                                        -- [중공정 조건 추가]
												        <if test="P_WORKDONEMIDDLESEGMENTCLASSID != null and P_WORKDONEMIDDLESEGMENTCLASSID !='' and !(P_WORKDONEMIDDLESEGMENTCLASSID eq '*'.toString()) ">
												            AND    WSR.WORKDONEMIDDLESEGMENTCLASSID  = #{P_WORKDONEMIDDLESEGMENTCLASSID}    -- 화면에서 선택된 중공정(21.05.20 김진현 추가)
												        </if>
                                                        AND WSR.VALIDSTATE = 'Valid'
                                                        
                                               ) wsc
                                     WHERE d.SDAY BETWEEN  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))- 2, 'YYYYMMDD') AND SUBSTR(#{P_DATE},1, 8)
                                   ) s
                                ON s.PROCESSSEGMENTID = wd.PROCESSSEGMENTID     -- [21.05.18] 수정
                               AND s.DDAY                   = wd.SENDDAY
                  WHERE 1=1

                  ORDER BY wd.DISPLAYSEQFIRST
            )
            PIVOT (     SUM(INPUTPNLQTY)        	AS SUM_INPUTPNLQTY
                   ,    SUM(INPUTMMQTY)         	AS SUM_INPUTMMQTY
                   ,    SUM(WIPPANELQTY)        	AS SUM_WIPPANELQTY
                   ,    SUM(WIPMMQTY)           	AS SUM_WIPMMQTY
                   
                   ------------------------------------(21.07.30) 금액추가
                   , 	SUM(PRICE)             			AS SUM_PRICE
                   ------------------------------------
                   FOR  SENDDAY
                   IN(      ${COLUMNS}  )

            )

            where 1 = 1
              and WORKDONTOPSEGMENTCLASSNAME is not null      -- null 이면 삭제
    </select>


    <!--
        설       명   : 주요 공정 실적 현황판 - Summary Right조회
        생   성   자   : 김진현
        생   성   일   : 2021-05-18
        수  정   이  력 :
    -->
    <select id="selectWorkDoneSummaryRightList" parameterType="map" resultType="hashmap">
/*selectWorkDoneSummaryRightList - 주요 공정 실적 현황판 - Summary Right */


/*################################[21.07.30 단가(금액) 추가]#################################################*/
		/*  공정관리 > 투입관리 > 단가 Table 쿼리 참조*/
		-- (21.07.29) - 금액 계산을 위해 단가 Table 추가 
		WITH  T_PRICE AS (
        SELECT    PRD.PLANTID 	
                        , PRD.PRODUCTDEFID 
                        , PRD.PRODUCTDEFVERSION 				
                        , UPR.CURRENCY_CODE     -- 단위
                        , PRD.UNIT       	AS UOM      -- 
                        , NVL(EXC.EXCHANGE_RATE,1) 					AS EXCHANGE_RATE
                        , UPR.UNITPRICE * NVL(EXC.EXCHANGE_RATE,1) 	AS SALEPRICE                -- 판가 해당 값과 pcs 수량 곱해서 계산
                  FROM BAS_ITEMMASTER IM
                  INNER JOIN BAS_PRODUCTDEFINITION PRD 		ON  PRD.PRODUCTDEFID = ITEMID
                                                            AND PRD.PRODUCTDEFVERSION = ITEMVERSION
                  INNER JOIN BAS_UNITPRICEFORMES UPR 		-- [단가]
                                                            ON  IM.ENTERPRISEID = UPR.ENTERPRISEID
                                                            AND IM.ITEMID = UPR.PRODUCTDEFID
                                                            AND IM.ITEMVERSION = UPR.PRODUCTDEFVERSION
                  LEFT JOIN BAS_EXCHANGE EXC				-- [환율]
                                                            ON  UPR.CURRENCY_CODE = EXC.CURRENCY_CODE
                                                            AND EXC.PERIOD_NAME = TO_CHAR(SYSDATE ,'YYYY-MM')
                 /*
                  LEFT OUTER JOIN BAS_CUSTOMER      CUST    ON  PRD.ENTERPRISEID = CUST.ENTERPRISEID 
                                                            AND PRD.PLANTID = CUST.PLANTID
                                                            AND PRD.CUSTOMERID =  CUST.CUSTOMERID  
                                                            */
                  LEFT OUTER JOIN BAS_PRODUCTITEMSPEC PIS   ON  IM.ENTERPRISEID = PIS.ENTERPRISEID
                                                            AND IM.ITEMID = PIS.ITEMID
                                                            AND IM.ITEMVERSION = PIS.ITEMVERSION
                  /*
                  LEFT OUTER JOIN CMD_USERS         MUSER   ON  UPR.ENTERPRISEID = MUSER.ENTERPRISEID
                                                            AND UPR.MODIFIER =  MUSER.USER_ID           
                                                            */
                WHERE 1=1
                  AND PRD.PLANTID = #{PLANTID}
        )
        ----------------------------------------------------------------------------------------------------------------------[단가 ↑]
	
	,  WORKDONEQTY AS(
    /********************************************************************************************************
    --1. 이틀간 품목별 실적, 재공조회
    --   조회조건: 양산구분/제품구분/대공정그룹
    대공정이 투입현황이 아니면  공정관리 >> 생산실적 >> 작업실적조회에서 품목 탭의 데이터를 조회
        select id="selectWorkResultList" parameterType="map" resultType="hashmap"
         SelectWorkResultList 10001
            if test="TYPE =='BYPRODUCT'"
    ********************************************************************************************************/
                SELECT DC6.DICTIONARYNAME                       		WORKDONESEGMENTCLASSNAME   --대분류명
                     , 2                                                    	AS DISPLAYSEQFirst
                     , WR.SENDDAY
                     , SUM(COALESCE(SENDPANELQTY ,0))           	AS INPUTPNLQTY
                     , SUM(COALESCE(SENDMMQTY ,0))              	AS INPUTMMQTY
                     , SUM(COALESCE(WIPPANELQTY ,0))            	AS WIPPANELQTY
                     , SUM(COALESCE(WIPMMQTY ,0))               	AS WIPMMQTY
                     , WR.WORKDONETOPSEGMENTCLASSID
                     , WR.WORKDONEMIDDLESEGMENTCLASSID
                     , WR.PROCESSSEGMENTID
                     , PS.PROCESSSEGMENTNAME
                     , WR.ENTERPRISEID                          			AS ENTERPRISEID
                     , WR.PLANTID                               			AS PLANTID

                     , AR.AREAID
                     , DA.DICTIONARYNAME                        		AS AREANAME
                     
					 , WR.PRODUCTDEFID                                             		--상세화면Query에서 추가
                     , WR.PRODUCTDEFNAME                                           	--상세화면Query에서 추가
                     , WR.RESOURCEID                                               		--RESOURCEID   추가
                     , BR.DESCRIPTION                              RESOURCENAME   --RESOURCENAME 추가        (21.06.17 - 의미가 없어짐 AREA로 대체 함 기초에 자원이 없다.)
                     
                     
                     ------------------------------------------------------------ (21.07.30)
                     , SUM(COALESCE(WR.PRICE ,0))           			AS PRICE    
                     ------------------------------------------------------------
                                        
                  FROM MFM_WORKDONESEGMENTCLASS    wsc
                  LEFT OUTER JOIN MFM_WORKDONESEGMENTREL wsr  ON wsc.WORKDONESEGMENTCLASSID       = wsr.WORKDONETOPSEGMENTCLASSID
                  LEFT OUTER JOIN BAS_PROCESSSEGMENT  PS      ON WSR.PROCESSSEGMENTID             = PS.PROCESSSEGMENTID
                  LEFT OUTER JOIN (
                        -- 실적
                        SELECT LWR.ENTERPRISEID
                             , LWR.PLANTID
                             , L.LOTTYPE
                             , LWR.PROCESSSEGMENTID
                             , LWR.PROCESSSEGMENTVERSION
                             , LWR.PRODUCTDEFID
                             , LWR.PRODUCTDEFVERSION
                             , PD.PRODUCTDEFNAME
                             --, LWR.LOTID
                             , LWR.AREAID
                             , COALESCE(PD.RTRSHT, 'SHT')   AS RTRSHT
                             , 0                            AS BASEPCSQTY
                             , 0                            AS BASEPANELQTY
                             , 0                            AS BASEMMQTY
                             , SUM(LWR.SENDPCSQTY)          AS SENDPCSQTY
                             , SUM(LWR.SENDPANELQTY)        AS SENDPANELQTY
                             ,  SUM(NVL(ROUND((LWR.SENDPCSQTY / PD.PCSMM), 2) ,0))  AS SENDMMQTY
                             , COUNT(1)                     AS SENDLOTCNT
                             , 0                            AS WIPPCSQTY
                             , 0                            AS WIPPANELQTY
                             , 0                            AS WIPMMQTY
                             , 0                            AS INPUTPCSQTY
                             , 0                            AS INPUTPANELQTY
                             , 0                            AS INPUTMMQTY
                             , CASE WHEN COALESCE(LWR.ISREWORK, 'N') = 'Y' OR COALESCE(LWR.WORKCOUNT, 0)  <![CDATA[>]]>  0 THEN 'IsRework'
                                    WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                    WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                END                         AS WORKTYPE
                             --, TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')         SENDDAY
                             , wsr.WORKDONETOPSEGMENTCLASSID                              -- 대공정ID
                             , wsr.WORKDONEMIDDLESEGMENTCLASSID                           -- 중공정ID
                             
                             
                             -- (자원 -> 작업장으로 변경) (21.06.17)
                             --, LWR.RESOURCEID                                             -- RESOURCEID 추가
                             , 	LWR.AREAID                    AS RESOURCEID 	        -- RESOURCEID 추가
                             
                             --(21.06.16) 추가 부분
                             ,	L.USERSEQUENCE 				AS USERSEQUENCE                     -- [21.06.16] 추가
                             -- (21.06.15) 전날 08:30 다음날 08:29:59 까지 가 전날값 
                             , (  CASE WHEN  	TO_CHAR(LWR.SENDTIME, 'HH24MISS')  <![CDATA[<]]>  '083000'       
                                      THEN 		TO_CHAR(LWR.SENDTIME - 1, 'YYYY-MM-DD')
                                      ELSE 		TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')
                                      END
                                ) AS SENDDAY
                                
                                
                             ----------------------------------------------
                             -- [금액추가](21.07.30)
                             , 0 AS PRICE
                             ----------------------------------------------   
                             
                             
                        FROM    PCM_LOTWORKRESULT LWR
                        INNER JOIN BAS_PRODUCTDEFINITION     			PD  
                        ON LWR.PRODUCTDEFID      			= PD.PRODUCTDEFID
                        AND LWR.PRODUCTDEFVERSION 		= PD.PRODUCTDEFVERSION
                        -- 대공정, 중공정, 표준공정으로 그룹핑 조회 추가
                        INNER  JOIN MFM_WORKDONESEGMENTREL       	wsr  
                        ON LWR.ENTERPRISEID                    = wsr.ENTERPRISEID
                        AND LWR.PLANTID                         = wsr.PLANTID
                        AND LWR.PROCESSSEGMENTID          = wsr.PROCESSSEGMENTID
                        LEFT OUTER JOIN PCM_LOT             					L         
                        ON LWR.LOTID                            	= L.LOTID

                        WHERE 1=1
                            --AND LWR.RESULTTYPE  NOT IN ('SKIP')
                            AND LWR.SENDTIME      <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8)) - 6, 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')
                            AND LWR.SENDTIME      <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYY-MM-DD') + (INTERVAL '1' DAY), 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')
                            AND LWR.SENDPCSQTY    <![CDATA[>]]> 0
                            
                            AND 		COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
                            -- [조건 추가 수정 필요함 21.06.17]
							AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
                            AND     COALESCE(L.ISHOLD, 'N') = 'N'           				--(21.06.17) 추가
                            --AND     L.LOTSTATE IN ('InProduction', 'InTransit')			--(21.06.17) 추가
                            AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')	-- (21.06.22) 수정
                            AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]>  'Return'	--(21.06.17) 추가
                            -- (21.06.17) 추가
                            <if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !='' and !(P_PRODCLASSTYPE eq '*'.toString()) ">
		                        AND		PD.PRODUCTIONTYPE = #{P_PRODCLASSTYPE}
		                    </if>
		                    <if test="P_PRODDIVISION != null and P_PRODDIVISION !='' and !(P_PRODDIVISION eq '*'.toString()) ">
		                        AND		PD.PRODUCTDEFTYPE = #{P_PRODDIVISION}
		                    </if>
		                    <if test="PLANTID != null and PLANTID !=''">
								AND LWR.PLANTID = #{PLANTID}			
							</if>
                            
                            
                            
                        GROUP BY
                                LWR.ENTERPRISEID
                            ,   LWR.PLANTID
                            ,   L.LOTTYPE
                            ,   LWR.PROCESSSEGMENTID
                            ,   LWR.PROCESSSEGMENTVERSION
                            ,   LWR.PRODUCTDEFID
                            ,   LWR.PRODUCTDEFVERSION
                            ,   PD.PRODUCTDEFNAME
                            --,   LWR.LOTID
                            ,   LWR.AREAID
                            ,   COALESCE(PD.RTRSHT, 'SHT')
                            ,   CASE WHEN COALESCE(LWR.ISREWORK, 'N') = 'Y' OR COALESCE(LWR.WORKCOUNT, 0)  <![CDATA[>]]> 0 THEN 'IsRework'
                                     WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                     WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                END
                            --, TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')
                            , wsr.WORKDONETOPSEGMENTCLASSID
                            , wsr.WORKDONEMIDDLESEGMENTCLASSID
                            
                            -- (자원 -> 작업장으로 변경) (21.06.17)
                            --, LWR.RESOURCEID                                          -- RESOURCEID 추가 
                            
                            ,	L.USERSEQUENCE
                            -- (21.06.17) 전날 08:30 다음날 08:29:59 까지 가 전날값 
                            , (  CASE WHEN  	TO_CHAR(LWR.SENDTIME, 'HH24MISS')  <![CDATA[<]]> '083000'       
                                      THEN 		TO_CHAR(LWR.SENDTIME - 1, 'YYYY-MM-DD')
                                      ELSE 		TO_CHAR(LWR.SENDTIME, 'YYYY-MM-DD')
                                      END
                                )
                        
                        
                        --------------------------------------------------------------------------------------------------------------
                        
                        -- [21.06.17] 기초 추가
                        UNION ALL
                         -- 기초
                                SELECT
                                        WS.ENTERPRISEID
                                    ,	WS.PLANTID
                                    ,	WS.LOTTYPE
                                    ,	WS.PROCESSSEGMENTID
                                    ,	WS.PROCESSSEGMENTVERSION
                                    ,	WS.PRODUCTDEFID
                                    ,	WS.PRODUCTDEFVERSION
                                    ,	WS.PRODUCTDEFNAME
                                    --,	WS.LOTID
                                    ,	WS.AREAID
                                    ,	WS.RTRSHT
                                    ,	SUM(WS.QTY)		AS BASEPCSQTY
                                    ,	SUM(PANELQTY)	AS BASEPANELQTY
                                    , 	SUM(NVL(ROUND((WS.QTY / WS.PCSMM), 2),0))	AS BASEMMQTY
                                    ,	0				AS SENDPCSQTY
                                    ,	0				AS SENDPANELQTY
                                    , 	0				AS SENDMMQTY
                                    ,	0				AS SENDLOTCNT
--                                 ,	0				AS WIPPCSQTY
--                                 ,	0				AS WIPPANELQTY
--                                 , 	0				AS WIPMMQTY
                                    ,	SUM(WS.QTY)		AS WIPPCSQTY
                                    ,	SUM(PANELQTY)	AS WIPPANELQTY
                                    , 	SUM(NVL(ROUND((WS.QTY / WS.PCSMM), 2),0))	AS WIPMMQTY
                                    ,	0				AS INPUTPCSQTY
                                    ,	0				AS INPUTPANELQTY
                                    , 	0				AS INPUTMMQTY
                                    ,	''				AS WORKTYPE
                                    
                                    ,   WS.WORKDONETOPSEGMENTCLASSID
                                    ,   WS.WORKDONEMIDDLESEGMENTCLASSID
                                    
                                    -- (자원 -> 작업장으로 변경) (21.06.17)
                                    , 	WS.AREAID                                             			AS RESOURCEID 			-- RESOURCEID 추가
                                    ,	WS.USERSEQUENCE 											AS USERSEQUENCE
                                    ,   TO_CHAR(TO_DATE(WS.TXNTIME),'YYYY-MM-DD')      	AS SENDDAY
                                    
                                    ----------------------------------------------
                                    -- [금액추가] (21.07.30)
                                    ,   ROUND(
                                    		SUM(PRICE) 
                                    	,0)
                                    	AS PRICE
                                    ----------------------------------------------
                                    
                                FROM(
                                    SELECT 
                                           -- WS.TXNTIME
                                            PD.ENTERPRISEID
                                        --,   TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')+1, 'YYYY-MM-DD')  AS TXNTIME
                                        -- (21.06.17) -> 현재공과 기초 번갈아 가면서 나오도록 적용
                                           /*
                                             당일 08:30 이전이면 이전날 데이터가 있어도 기초로 나오지 않고 현재공을 보도록 
                                             당일 08:30 이후이면 당일, 이전날 데이터 생성됨 당일은 현재공, 이전날은 기초값 보도록 설정
                                           */
                                       
                                       -- [기초 부분 수정] (21.07.07)
										,		(  CASE 
												-- (당일 08:30 이전인 상태에서 당일날짜로 조회시)
												WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  NULL  -- (당일 08:30 이전인 경우 이전날짜) 이전날짜의 경우가 현재공을 봐야됨
															 ELSE  TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END
															 
												  -- (당일 08:30 이전인 상태에서 이전날짜로 조회시 )
												  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  NULL	-- 해당의 경우 (00:00 ~ 08:29 까지의 데이터) 당일일 경우 재공쪽을 본다.
															 ELSE  TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END	
															 
												  ELSE  
														-- 그 날짜 그대로 (각 기말 데이터) (21.07.07)
														CASE WHEN  TO_CHAR(SYSDATE, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  NULL
															 ELSE  TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 END
												  END
											) AS TXNTIME
                                       
                                       
                                        ,	WS.LOTTYPE
                                        ,	WS.PLANTID
                                        ,	WS.PRODUCTDEFID
                                        ,	WS.PRODUCTDEFVERSION
                                        ,	PD.PRODUCTDEFNAME
                                        ,	WS.PROCESSSEGMENTID
                                        ,	WS.PROCESSSEGMENTVERSION
                                        --,	L.LOTID
                                        ,	WS.AREAID
                                        ,	WS.QTY
                                        ,	WS.PANELQTY
                                        ,	COALESCE(PD.RTRSHT, 'SHT')	AS RTRSHT
                                        ,	PD.PCSMM
                                        ,	BP.USERSEQUENCE
                                        , 	wsr.WORKDONETOPSEGMENTCLASSID                        		--대공정ID
                                        , 	wsr.WORKDONEMIDDLESEGMENTCLASSID                     	--중공정ID
                                        
                                        --------------------------------------------------------
                                        -- (21.08.05) 개별 반올림 후 더한다 [공정관리 > 재공관리 > 모델별 재공조회 에서 합계 금액 계산 처럼]
                                        --, ROUND(NVL(P.SALEPRICE,0) * NVL(WS.QTY,0),0) AS PRICE       				-- [금액추가](21.07.30)
                                        
                                        , --ROUND(
                                        NVL(PCM_EXCHANGE_FN(WS.PLANTID , 
                                            (  CASE 
												-- (당일 08:30 이전인 상태에서 당일날짜로 조회시)
												WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  SYSDATE  -- (당일 08:30 이전인 경우 이전날짜) 이전날짜의 경우가 현재공을 봐야됨
															 ELSE  TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END															 
												  -- (당일 08:30 이전인 상태에서 이전날짜로 조회시 )
												  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
												  THEN  
														CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  SYSDATE	-- 해당의 경우 (00:00 ~ 08:29 까지의 데이터) 당일일 경우 재공쪽을 본다.
															 ELSE  TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
															 END																 
												  ELSE  
														-- 그 날짜 그대로 (각 기말 데이터) (21.07.07)
														CASE WHEN  TO_CHAR(SYSDATE, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
															 THEN  SYSDATE
															 ELSE  TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')
															 END
												  END
											)
                                        , UP.CURRENCY_CODE, NVL(WS.QTY,0) * UP.UNITPRICE),0)
                                        --,0)	
                                        PRICE
                                        
                                        --------------------------------------------------------
                                         
                                    FROM PCM_WIPSUMMARYPERDAILY		WS
                                    INNER JOIN BAS_PRODUCTDEFINITION		PD	
                                    ON	WS.PRODUCTDEFID 				= PD.PRODUCTDEFID
                                    AND	WS.PRODUCTDEFVERSION 		= PD.PRODUCTDEFVERSION
                                    INNER JOIN BAS_PROCESSPATH				BP 	
                                    ON BP.PROCESSDEFID  					= WS.PRODUCTDEFID 
                                    AND	BP.PROCESSDEFVERSION 			= WS.PRODUCTDEFVERSION
                                    AND	BP.PROCESSSEGMENTID 			= WS.PROCESSSEGMENTID
                                    
                                     -- 대공정, 중공정, 표준공정으로 그룹핑 조회 추가
                                    INNER JOIN MFM_WORKDONESEGMENTREL   wsr       
                                    ON PD.ENTERPRISEID                 		= wsr.ENTERPRISEID
                                    AND WS.PLANTID                          = wsr.PLANTID 
                                    AND WS.PROCESSSEGMENTID           = wsr.PROCESSSEGMENTID
                                    
                                    
                                    --------------------------------------------------------
                                    -- [금액 부분 추가](21.07.30)
                                    /*
                                    LEFT JOIN T_PRICE P
                                     ON    WS.PRODUCTDEFID      			= P.PRODUCTDEFID
                                     AND   WS.PRODUCTDEFVERSION 		= P.PRODUCTDEFVERSION
                                    */
                                    
                                     LEFT OUTER JOIN BAS_UNITPRICEFORMES UP   ON WS.PRODUCTDEFID         = UP.PRODUCTDEFID 
                                              AND WS.PRODUCTDEFVERSION    = UP.PRODUCTDEFVERSION 
                                              AND SYSDATE BETWEEN UP.APPLY_START_DATE AND NVL(UP.APPLY_END_DATE, TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'))  
                                    
                                     
                                    --------------------------------------------------------
                                    
                                    WHERE 1=1
                                    
                                   	-- (21.06.17) PCM_WIPSUMMARYPERDAILY (EX) 14일 기말 = 15일 기초 -> 기말의 데이터들이 들어가 있다. (기초값은 이전날의 기말과 같음)
                                   	-- (21.07.07) 조건 변경 
									AND WS.TXNTIME      <![CDATA[>=]]>   TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))-6, 'YYYY-MM-DD')                           
									AND WS.TXNTIME      <![CDATA[<]]>     TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8),     'YYYY-MM-DD') + (INTERVAL '1' DAY), 'YYYY-MM-DD')   
                                   
                                   <if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !=''">
										AND WS.LOTTYPE 					= #{P_PRODCLASSTYPE}			
								   </if>
								   -- site
								   <if test="PLANTID != null and PLANTID !=''">
										AND WS.PLANTID 					= #{PLANTID}		
								   </if>
								   -- 제품구분
								   <if test="P_PRODDIVISION != null and P_PRODDIVISION !=''">
										AND	PD.PRODUCTDEFTYPE 		= #{P_PRODDIVISION}
								   </if>          
                                        
                                                            
                                )	WS
                                GROUP BY 	
                                        WS.ENTERPRISEID
                                     ,  WS.TXNTIME
                                    ,	WS.LOTTYPE
                                    ,	WS.PLANTID
                                    ,	WS.PROCESSSEGMENTID
                                    ,	WS.PROCESSSEGMENTVERSION
                                    ,	WS.PRODUCTDEFID
                                    ,	WS.PRODUCTDEFVERSION
                                    ,	WS.PRODUCTDEFNAME
                                    ,	WS.AREAID
                                    ,	WS.RTRSHT
                                    ,	WS.USERSEQUENCE
                                    --, 	TO_CHAR(TO_DATE(WS.TXNTIME, 'YYYY-MM-DD')+1, 'YYYY-MM-DD')			--  수정해야 될것 같음
                                     ,   TO_CHAR(TO_DATE(WS.TXNTIME),'YYYY-MM-DD')  -- (21.06.17) 수정 -> 그룹 재 지정  
                                    ,   WS.WORKDONETOPSEGMENTCLASSID
                                    ,   WS.WORKDONEMIDDLESEGMENTCLASSID
                        
                            
                            
                        --------------------------------------------------------------------------------------------------------------    
                        UNION ALL
                        -- 재공
                        SELECT L.ENTERPRISEID
                             , L.PLANTID
                             , L.LOTTYPE
                             , L.PROCESSSEGMENTID
                             , L.PROCESSSEGMENTVERSION
                             , L.PRODUCTDEFID
                             , L.PRODUCTDEFVERSION
                             , PD.PRODUCTDEFNAME
                             --, L.LOTID
                             , L.AREAID
                             , COALESCE(PD.RTRSHT, 'SHT')                   AS RTRSHT
                             , 0                                            AS BASEPCSQTY
                             , 0                                            AS BASEPANELQTY
                             , 0                                            AS BASEMMQTY
                             , 0                                            AS SENDPCSQTY
                             , 0                                            AS SENDPANELQTY
                             , 0                                            AS SENDMMQTY
                             , 0                                            AS SENDLOTCNT
                             , SUM(L.PCSQTY)                                AS WIPQTY
                             , SUM(L.PANELQTY)                              AS WIPPANELQTY
                             , SUM(NVL(ROUND((L.PCSQTY / PD.PCSMM), 2) ,0)) AS WIPMMQTY
                             , 0                                            AS INPUTPCSQTY
                             , 0                                            AS INPUTPANELQTY
                             , 0                                            AS INPUTMMQTY
                             , CASE WHEN COALESCE(L.ISREWORK, 'N') = 'Y' OR COALESCE(L.WORKCOUNT, 0) <![CDATA[>]]> 0 THEN 'IsRework'
                                    WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                    WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                END                                   AS WORKTYPE
                             --, TO_CHAR(L.SENDTIME, 'YYYY-MM-DD')         SENDDAY
                             , wsr.WORKDONETOPSEGMENTCLASSID                        --대공정ID
                             , wsr.WORKDONEMIDDLESEGMENTCLASSID                     --중공정ID
                               
                             -- (자원 -> 작업장으로 변경) (21.06.17)
                             --, L.RESOURCEID                                         			-- RESOURCEID 추가
                             , 	L.AREAID                    		AS RESOURCEID 	        -- RESOURCEID 추가
                             
                             ,	L.USERSEQUENCE 				AS USERSEQUENCE
                             , (  CASE WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                              THEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') 
                                              
                                              -- (21.07.07) 추가 및 이전일 0:00 ~ 08:29분도 이전 날짜가 현재공으로 나오도록
											  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
											  THEN  	TO_CHAR(SYSDATE-1, 'YYYY-MM-DD')					-- (00:00 ~ 08:29) (당일 08:30 이전인데 필터 날자가 이전날짜인 경우) -> 현재공을 이전날짜로 표시
                                              
                                              ELSE  TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
                                              END
                                        ) AS SENDDAY
                                        
                             --------------------------------------------------------
                             -- (21.08.05) 개별 반올림 후 더한다 [공정관리 > 재공관리 > 모델별 재공조회 에서 합계 금액 계산 처럼]
                             --, SUM(ROUND(NVL(P.SALEPRICE,0) * NVL(L.PCSQTY,0),0)) AS PRICE       -- [금액추가]
                             
                             , ROUND(
                              SUM(
                                NVL(PCM_EXCHANGE_FN(L.PLANTID , 
                                (  CASE WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                                  THEN  SYSDATE-1                                                  
                                                  -- (21.07.07) 추가 및 이전일 0:00 ~ 08:29분도 이전 날짜가 현재공으로 나오도록
                                                  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                                  THEN  SYSDATE-1		-- (00:00 ~ 08:29) (당일 08:30 이전인데 필터 날자가 이전날짜인 경우) -> 현재공을 이전날짜로 표시                                                  
                                                  ELSE  SYSDATE 
                                                  END
                                            )
                                
                                , UP.CURRENCY_CODE, NVL(L.PCSQTY,0) * UP.UNITPRICE),0)
                                )
                                ,0)
                            PRICE
                             
                             --------------------------------------------------------           
                             
                        FROM PCM_LOT                    L
                        INNER JOIN BAS_PRODUCTDEFINITION    PD  
                        ON L.PRODUCTDEFID      				= PD.PRODUCTDEFID
                        AND L.PRODUCTDEFVERSION 			= PD.PRODUCTDEFVERSION
                        -- 대공정, 중공정, 표준공정으로 그룹핑 조회 추가
                        INNER JOIN MFM_WORKDONESEGMENTREL   wsr       
                        ON L.ENTERPRISEID                     	= wsr.ENTERPRISEID
                        AND L.PLANTID                          	= wsr.PLANTID
                        AND L.PROCESSSEGMENTID              = wsr.PROCESSSEGMENTID
                        
                        
                        --------------------------------------------------------(21.07.30)
                         -- [금액 부분 추가]
                         /*
                         LEFT JOIN T_PRICE P
                          ON    L.PRODUCTDEFID      		= P.PRODUCTDEFID
                          AND   L.PRODUCTDEFVERSION 	= P.PRODUCTDEFVERSION
                         */
                         
                         -- (21.08.05) 동일하게 함수 호출 해서 금액 구함
                         LEFT OUTER JOIN BAS_UNITPRICEFORMES UP   ON L.PRODUCTDEFID         = UP.PRODUCTDEFID 
                                              AND L.PRODUCTDEFVERSION    = UP.PRODUCTDEFVERSION 
                                              AND SYSDATE BETWEEN UP.APPLY_START_DATE AND NVL(UP.APPLY_END_DATE, TO_DATE('9999-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'))
                         
                          
                         --------------------------------------------------------
                         
                        WHERE   1 = 1
                        --AND     L.LOTSTATE          IN ('InProduction', 'InTransit')
                        --AND     L.ISDEFECTED         = 'N'
                        --AND     L.ISREPRESENTROLLLOT = 'N'
                        
                        AND     L.LOTSTATE 					IN ('InProduction', 'InTransit')
                        --AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')	-- (21.06.22) 수정    -> (21.06.23) Finished 다시 제거
						AND     COALESCE(L.ISDEFECTED, 'N') 	= 'N'
						AND     COALESCE(L.ISHOLD, 'N') 		= 'N'
                        AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'				--(21.06.17) 추가
                        
						<if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !='' and !(P_PRODCLASSTYPE eq '*'.toString()) ">
		                     AND		PD.PRODUCTIONTYPE = #{P_PRODCLASSTYPE}
	                    </if>
	                    <if test="P_PRODDIVISION != null and P_PRODDIVISION !='' and !(P_PRODDIVISION eq '*'.toString()) ">
	                        AND		PD.PRODUCTDEFTYPE = #{P_PRODDIVISION}
	                    </if>
	                    <if test="PLANTID != null and PLANTID !=''">
							AND 		L.PLANTID = #{PLANTID}			
						</if>
                        
                        GROUP BY L.PLANTID
                            ,    L.LOTTYPE
                            ,    L.PROCESSSEGMENTID
                            ,    L.PROCESSSEGMENTVERSION
                            ,    L.PRODUCTDEFID
                            ,    L.PRODUCTDEFVERSION
                            ,    PD.PRODUCTDEFNAME
                            --,    L.LOTID
                            ,    L.AREAID
                            ,   COALESCE(PD.RTRSHT, 'SHT')
                            ,   CASE WHEN COALESCE(L.ISREWORK, 'N') = 'Y' OR COALESCE(L.WORKCOUNT, 0) <![CDATA[>]]> 0 THEN 'IsRework'
                                     WHEN L.LOTCREATEDTYPE = 'SplitRoll' OR L.LOTCREATEDTYPE = 'FinalInspect' OR L.LOTCREATEDTYPE = 'Normal' THEN 'Normal'
                                     WHEN L.LOTCREATEDTYPE = 'Return' THEN 'Return'
                                 END
                            ,   TO_CHAR(L.SENDTIME, 'YYYY-MM-DD')
                            ,   wsr.WORKDONETOPSEGMENTCLASSID
                            ,   wsr.WORKDONEMIDDLESEGMENTCLASSID
                            ,   L.ENTERPRISEID
                            --,   L.RESOURCEID                                 -- RESOURCEID 추가           
                            
                            ,	L.USERSEQUENCE
                            --(21.06.15) 0830이전이면서 조회 날짜가 현시점의 날짜와 같은 경우 이전 날자로 설정, 그 외 SYSDATE로 설정
                            ,(  CASE WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
                                      THEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') 
                                      ELSE  TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
                                      END
                                )
                            
                            
                                                           
                    ) WR                                            ON WR.PROCESSSEGMENTID             = PS.PROCESSSEGMENTID
                -- (21.06.17) INNER -> LEFT 로 변경
                LEFT JOIN FN_AREA(#{MODIFIER}) A                   ON WR.AREAID                       = A.AREAID
                LEFT  OUTER JOIN CMD_DICTIONARY             dc6     ON dc6.DICTIONARYID                = wsc.WORKDONESEGMENTCLASSNAME   --대분류명
                                                                   AND dc6.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                LEFT OUTER JOIN CMD_DICTIONARY              DC1     ON PS.PROCESSSEGMENTNAME           = DC1.DICTIONARYID
                                                                   AND DC1.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}          -- 다국어 코드 --'ko-KR'
                LEFT OUTER JOIN CMD_DICTIONARY              DC2     ON A.AREANAME                      = DC2.DICTIONARYID
                                                                   AND DC2.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                LEFT JOIN CMD_LOOKUP_VALUES                 CDL     ON WR.LOTTYPE                      = CDL.LOOKUP_CODE
                                                                   AND CDL.LOOKUP_TYPE                 = 'ProductionType'
                LEFT JOIN CMD_DICTIONARY                    DC5     ON  CDL.DICTIONARYID               = DC5.DICTIONARYID
                                                                   AND DC5.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'

                -- [21.05.18] 작업장 정보 추가
                LEFT JOIN  BAS_AREA                         AR
                        ON  WR.AREAID               = AR.AREAID
                LEFT OUTER JOIN CMD_DICTIONARY  DA
                        ON AR.AREANAME      = DA.DICTIONARYID
                        AND DA.LANGUAGETYPE     = #{SESSION_LANGUAGETYPE}        	-- 다국어 코드 --'ko-KR'
				LEFT OUTER JOIN BAS_RESOURCE         BR
				        ON BR.RESOURCEID          = WR.RESOURCEID
				       AND BR.ENTERPRISEID        = WR.ENTERPRISEID
				       AND BR.PLANTID             = WR.PLANTID
				       AND BR.AREAID              = AR.AREAID               						-- 21.05.21 김진현 추가 저원 = 작업장 연결
                WHERE 1 = 1
                  AND   wsc.WORKDONESEGMENTCLASSTYPE    = 'TopWorkDoneSegmentClass'
                  -- 해당 조건 추가
                  <if test="P_WORKDONESEGMENTCLASSID != null and P_WORKDONESEGMENTCLASSID !='' and !(P_WORKDONESEGMENTCLASSID eq '*'.toString()) ">
                        AND   wsc.WORKDONESEGMENTCLASSID = #{P_WORKDONESEGMENTCLASSID}    -- 화면에서 선택된 대공정(21.05.18 김진현 추가)
                  </if>
                  AND       wsc.VALIDSTATE = 'Valid'                -- 유효한것만(21.05.18 김진현 추가)
                  
                  <if test="P_AREA != null and P_AREA !='' and !(P_AREA eq '*'.toString()) ">
                        AND    AR.AREAID = #{P_AREA}    -- 화면에서 선택된 작업장(21.05.18 김진현 추가)
                  </if>
                  

                GROUP BY
                  WR.SENDDAY
                , DC6.DICTIONARYNAME
                , WR.WORKDONETOPSEGMENTCLASSID
                , WR.WORKDONEMIDDLESEGMENTCLASSID
                , WR.PROCESSSEGMENTID
                , PS.PROCESSSEGMENTNAME
                , WR.ENTERPRISEID
                , WR.PLANTID
                -- [21.05.18] 추가
                , AR.AREAID
                , DA.DICTIONARYNAME
		        , WR.PRODUCTDEFID		--상세화면Query에서 추가
		        , WR.PRODUCTDEFNAME		--상세화면Query에서 추가
		        , WR.RESOURCEID         -- RESOURCEID 추가              
		        , BR.DESCRIPTION        -- RESOURCEDESCRIPTION 추가   

)
, MAIN_ATY AS (
    --기존 쿼리
    SELECT
           dc2.DICTIONARYNAME                       PROCESSSEGMENTNAMEBYLANGUAGE                 --공정명
         , wd.DISPLAYSEQFirst
         , wd.SENDDAY
         , wd.INPUTPNLQTY
         , wd.INPUTMMQTY
         , wd.WIPPANELQTY
         , wd.WIPMMQTY
         , wd.WORKDONETOPSEGMENTCLASSID
         , wd.WORKDONEMIDDLESEGMENTCLASSID
         , wd.PROCESSSEGMENTID
         , wd.PROCESSSEGMENTNAME
         , wsc.SEQDISPLAY
         , wd.AREAID
         , wd.AREANAME
		 , wd.PRODUCTDEFID						--상세화면Query에서 추가
		 , wd.PRODUCTDEFNAME					--상세화면Query에서 추가
		 , wd.RESOURCEID                        -- RESOURCEID 추가
		 , wd.RESOURCENAME                      -- RESOURCENAME 추가 
		 
		 
		 ---------------------------------------
         , (wd.PRICE)       AS PRICE        			-- 금액 추가 (21.07.30)  
         ---------------------------------------
           
      FROM WORKDONEQTY wd
     INNER JOIN MFM_WORKDONESEGMENTCLASS wsc         ON wsc.ENTERPRISEID                = wd.ENTERPRISEID
                                                    AND wsc.PLANTID                     = wd.PLANTID
                                                    AND wsc.WORKDONESEGMENTCLASSID      = wd.WORKDONEMIDDLESEGMENTCLASSID

      LEFT JOIN CMD_DICTIONARY           dc2         ON dc2.DICTIONARYID                = wd.PROCESSSEGMENTNAME          -- 공정명
                                                    AND dc2.LANGUAGETYPE                = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                                                    
     WHERE wd.ENTERPRISEID                  = #{ENTERPRISEID}
       AND wd.PLANTID                       = #{PLANTID}
)


-- 21.05.18 김진현 피벗 사용
    SELECT
                
                -- (21.06.17) 작업장으로 변경
                AREAID    		AS RESOURCEID                       				-- RESOURCEID 추가   (자원코드)
             , 	AREANAME 		AS RESOURCENAME                     			-- RESOURCENAME 추가 (자원명) 
             
             , 	PROCESSSEGMENTID                 			-- 표준공정 코드
             , 	PROCESSSEGMENTNAMEBYLANGUAGE    -- 표준공정명 
             
             , 	PRODUCTDEFID									--상세화면Query에서 추가 (품목코드)
             , 	PRODUCTDEFNAME							--상세화면Query에서 추가 (품목명)
             ,  ${COLUMNS_SELECT}             -- 3일치 생성될 컬럼
     FROM (
               SELECT

                      wd.AREAID
                     , wd.AREANAME
                     , wd.PROCESSSEGMENTNAMEBYLANGUAGE                  -- 공정명
                     , wd.PROCESSSEGMENTID                                          -- 표준공정 코드
                     , wd.INPUTPNLQTY
                     , wd.INPUTMMQTY
                     , wd.WIPPANELQTY
                     , wd.WIPMMQTY
                     , wd.SENDDAY
                     , wd.PRODUCTDEFID							--상세화면Query에서 추가 (품목코드)
                     , wd.PRODUCTDEFNAME						--상세화면Query에서 추가 (품목명)
                     , wd.RESOURCEID                        		-- RESOURCEID 추가   (자원코드)
                     , wd.RESOURCENAME                     	-- RESOURCENAME 추가 (자원명) 
                     
                     ---------------------------------------
                     , (wd.PRICE)       AS PRICE        					-- 금액 추가 (21.07.30)  
                     ---------------------------------------
                     
                  FROM MAIN_ATY wd              -- [21.05.18] 수정
                 RIGHT OUTER JOIN (
                                    -- 수정
                                    -- [21.05.18] 수정
                                    SELECT  TO_CHAR(d.DDAY, 'YYYY-MM-DD')                  DDAY
                                         ,  wsc.PROCESSSEGMENTID
                                      FROM CMD_DAY                d
                                     CROSS JOIN(
                                                 -- 표준공정의 개수만큼
                                                  -- [21.05.18] 수정
                                                  SELECT PS.PROCESSSEGMENTID
                                                      FROM BAS_PROCESSSEGMENT               PS
                                                      INNER JOIN MFM_WORKDONESEGMENTREL     WSR
                                                      ON    PS.PROCESSSEGMENTID = WSR.PROCESSSEGMENTID
                                                      WHERE 1 = 1
                                                        <if test="P_WORKDONESEGMENTCLASSID != null and P_WORKDONESEGMENTCLASSID !='' and !(P_WORKDONESEGMENTCLASSID eq '*'.toString()) ">
                                                            AND  WSR.WORKDONETOPSEGMENTCLASSID = #{P_WORKDONESEGMENTCLASSID}    -- 화면에서 선택된 대공정(21.05.18 김진현 추가)
                                                        </if>
                                                        AND WSR.VALIDSTATE = 'Valid'
                                                        AND WSR.WORKDONEMIDDLESEGMENTCLASSID IS NOT NULL
                                               ) wsc
                                     WHERE d.SDAY BETWEEN  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))- 6, 'YYYYMMDD') AND SUBSTR(#{P_DATE},1, 8)
                                   ) s
                                ON s.PROCESSSEGMENTID = wd.PROCESSSEGMENTID     -- [21.05.18] 수정
                               AND s.DDAY                   = wd.SENDDAY
                  WHERE 1=1

                  ORDER BY wd.DISPLAYSEQFIRST
            )
            PIVOT (     	SUM(INPUTPNLQTY)        	AS SUM_INPUTPNLQTY
                   		,    SUM(INPUTMMQTY)         	AS SUM_INPUTMMQTY
                   		,    SUM(WIPPANELQTY)        	AS SUM_WIPPANELQTY
                   		,    SUM(WIPMMQTY)           	AS SUM_WIPMMQTY
                   		
                   		------------------------------------(21.07.30) 금액추가
	                   , 	SUM(PRICE)             			AS SUM_PRICE
	                   ------------------------------------
                   		
                   FOR  	 SENDDAY
                   IN(       ${COLUMNS}  )

            )

            where 1 = 1
               and RESOURCEID is not null      -- null 이면 삭제 (그룹핑해서 보여줌 화면에서)
    </select>
    
    
    	<!--
		설		명	: 주요 공정 실적 현황판 - 메인 Left, Rigth 조회
		생	성	자	: 김진현
		생	성	일	: 2021-05-12 
		수  정   이  력	:
	-->
	<select id="selectWorkDoneINPUTSTATUSDetail" parameterType="map" resultType="hashmap">
/*selectWorkDoneINPUTSTATUSDetail - 주요 공정 실적 현황판 - 투입현황 상세 조회 */
WITH WORKDONEQTY AS(
    /********************************************************************************************************
    대공정이 투입현황이면 
       - 실적은 공정관리>>투입관리>>투입실적조회 >> 투입실적탭에서 실적(PNL, MM) 데이터 가져올것
       - 재공은 빈칸
       -  (공정관리 > 투입관리 > 투입 실적 조회 > LOT별 투입실적 Tab) +품목별 투입실적 Tab
    select id="selectInputResultByInputDay" parameterType="map" resultType="hashmap"
    SelectInputResultByInputDay 10001 
    ********************************************************************************************************/
    SELECT dc.DICTIONARYNAME                                      WORKDONESEGMENTCLASSNAME
         , 1                                                      DISPLAYSEQFirst
         , z.WORKDONESEGMENTCLASSID
         , INPUTDAY                                               INPUTDAY  
         , INPUTPNLQTY
         , INPUTMMQTY
         , NULL                                                   WIPPANELQTY
         , NULL                                                   WIPMMQTY
		 , PRODUCTDEFNAME
		 , PROCESSSEGMENTNAME
		 
		 , PRODUCTDEFID                 		-- 품목코드 (21.05.21)
         , PROCESSSEGMENTID             	-- 공정코드 (21.05.21)
         
         ----------------------------------------------
         -- [금액추가] (21.07.30)
         , PRICE
         ----------------------------------------------
         
      FROM CMD_DICTIONARY             dc
      LEFT OUTER JOIN
          (
            SELECT INPUTDAY
                 , SUM(InputQty)                    AS INPUTPCSQTY
                 , SUM(pnlinputqty)                 AS INPUTPNLQTY
                 , SUM(inputmm)                     AS INPUTMMQTY
                 , 'INPUTSTATUS'                    WORKDONESEGMENTCLASSID
				 , PRODUCTDEFNAME
				 , PROCESSSEGMENTNAME
				 
				 , PRODUCTDEFID                 		-- 품목코드 (21.05.21)
                 , PROCESSSEGMENTID             	-- 공정코드 (21.05.21)
                 
                 ----------------------------------------------
                 -- [금액추가]  (21.07.30)
                 , SUM(INPUTPRICE) 					AS PRICE
                 ----------------------------------------------
            FROM
            (
            --MHYi JOIN 대공정 테이블////////////////////////////////////////////////////////
                SELECT INPUTDAY
                     , INPUTQTY
                     , PNLINPUTQTY
                     , INPUTMM
					 
					 , PRODUCTDEFNAME
					 , PROCESSSEGMENTNAME
					 
					 , PRODUCTDEFID                 		-- 품목코드 (21.05.21)
                 	 , PROCESSSEGMENTID             	-- 공정코드 (21.05.21)
                 	 
                 	  ---------------------------------------
                     , INPUTPRICE  -- 금액 (21.07.30)
                     ---------------------------------------
                 	
                FROM
                (
                    --UNION STARTING ===================================
                    SELECT  TO_CHAR (DD.DDAY, 'YYYY-MM-DD')                 AS INPUTDAY
                         ,  L.LOTINPUTQTY                                   AS INPUTQTY
                         ,  L.LOTINPUTQTY / L.PANELPERQTY                   AS PNLINPUTQTY
                         ,  ROUND(L.LOTINPUTQTY / PD.PCSMM,2)               AS INPUTMM
						 ,  PD.PRODUCTDEFID                                 AS PRODUCTDEFID
						 ,  PD.PRODUCTDEFNAME                               AS PRODUCTDEFNAME   
						 --,  DC1.DICTIONARYNAME                              AS PROCESSSEGMENTNAME    -- 공정명
                         
                         --,  L.PROCESSSEGMENTID                              -- 공정코드(21.05.21) 김진현 추가 			
                         , LWR.PROCESSSEGMENTID    AS PROCESSSEGMENTID                           -- 투입 공정 코드
                         , NVL(DIC1.DICTIONARYNAME, PSG.PROCESSSEGMENTNAME) AS PROCESSSEGMENTNAME  --투입 공정 명			
                         
                         ------------------------------------------------------------------------------------(21.07.30)
                         ,  NVL(PCM_EXCHANGE_FN(L.PLANTID , SYSDATE , UP.CURRENCY_CODE, L.LOTINPUTQTY * UP.UNITPRICE),0) 		AS INPUTPRICE --1차는 계획 환율만 
                         ------------------------------------------------------------------------------------
                          
                    FROM MFM_PRODUCTIONORDER         PO
                    INNER JOIN PCM_LOT                L    ON PO.PRODUCTDEFID      = L.PRODUCTDEFID
                                                          AND PO.PRODUCTDEFVERSION = L.PRODUCTDEFVERSION
                                                          AND PO.PRODUCTIONORDERID = L.PRODUCTIONORDERID
                                                          AND PO.LINENO            = L.LINENO
                    INNER JOIN CMD_DAY DD                  ON L.LOTSTARTDATE BETWEEN DD.PROD_START_DT AND DD.PROD_END_DT
                                                          AND L.PLANTID            = DD.PLANTID
                    INNER JOIN BAS_PRODUCTDEFINITION PD    ON L.PRODUCTDEFID       = PD.PRODUCTDEFID
                                                          AND L.PRODUCTDEFVERSION  = PD.PRODUCTDEFVERSION
					
					
					 -- 투입공정 조회  (공정관리 > 투입관리 > 투입 실적 조회 > LOT별 투입실적 Tab) 조건 추가함 (투입공정 필요)
                    INNER JOIN BAS_PROCESSPATH PP 
                            ON L.PROCESSDEFID = PP.PROCESSDEFID 
                            AND L.PROCESSDEFVERSION = PP.PROCESSDEFVERSION 
                            AND PP.PATHTYPE IN ('Start', 'StartEnd')
                    INNER JOIN BAS_PROCESSSEGMENT PSG  
                            ON PP.PROCESSSEGMENTID = PSG.PROCESSSEGMENTID 
                            AND PP.PROCESSSEGMENTVERSION = PSG.PROCESSSEGMENTVERSION 
                    LEFT JOIN CMD_DICTIONARY DIC1
                            ON DIC1.DICTIONARYID = PSG.PROCESSSEGMENTNAME 
                            AND DIC1.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                    -- 투입공정 작업실적 조회
                    INNER JOIN PCM_LOTWORKRESULT LWR 	
                            ON L.LOTID = LWR.LOTID 
                            AND LWR.USERSEQUENCE = PP.USERSEQUENCE  
                            AND LWR.PROCESSSEGMENTID = PP.PROCESSSEGMENTID 
                            AND LWR.PROCESSSEGMENTVERSION = PP.PROCESSSEGMENTVERSION 
                            --AND LWR.RESULTTYPE <![CDATA[<>]]> 'SKIP'          -- 첫공정에서 NORMAL,SKIP 두개 있음 (21.05.21)
					
					------------------------------------------------------------------------------------
                    -- [금액 추가] (21.07.30)
                    LEFT JOIN BAS_UNITPRICEFORMES    UP ON UP.PRODUCTDEFID = PO.PRODUCTDEFID 
                                                        AND UP.PRODUCTDEFVERSION = PO.PRODUCTDEFVERSION 
                                                        --AND DD.DDAY  BETWEEN APPLY_START_DATE
                                                        AND SYSDATE  BETWEEN APPLY_START_DATE 
                                                        AND NVL(APPLY_END_DATE,TO_TIMESTAMP('9999-12-31 23:59:59','yyyy-MM-dd HH24:MI:SS'))	
                    ------------------------------------------------------------------------------------									  
                    
                    
                    WHERE 1=1
                    AND L.LOTSTATE                   <![CDATA[<>]]> 'Created'
                    
                    -- (21.06.21 변경)
                    AND L.ISDEFECTED  				= 'N'  
					AND L.ISREPRESENTROLLLOT 	= 'Y'
                    AND NVL(PD.RTRSHT,'SHT') 		= 'RTR'
                    
                    AND L.LOTID                       	= L.PARENTLOTID
                    AND NVL(L.ISOEM,'N')             = 'N'
                    AND L.LOTSTARTDATE 	        BETWEEN TO_TIMESTAMP( TO_CHAR(TO_DATE(SUBSTR(#{P_DATE}, 1, 8))-2,'YYYY MM DD') || ' 08:30:00','YYYY-MM-DD HH24:MI:SS')
                                                    --AND TO_TIMESTAMP( SUBSTR(P_DATE, 1, 8) || ' 08:29:59','YYYY-MM-DD HH24:MI:SS')
                                                    -- (21.06.23) +1 일 추가함 화면에(ex) 16일이면 16 08:30 ~ 17 08:30 까지의 데이터가 필요함
           											 AND TO_TIMESTAMP(TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYY-MM-DD') + (INTERVAL '1' DAY), 'YYYY-MM-DD') || ' 08:29:59','YYYY-MM-DD HH24:MI:SS')
                                                    
                    AND L.LOTINPUTQTY                IS NOT NULL
                    AND L.PLANTID = #{PLANTID}
                    
                    <if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !='' and !(P_PRODCLASSTYPE eq '*'.toString()) ">
                        AND		PD.PRODUCTIONTYPE = #{P_PRODCLASSTYPE}
                    </if>
                    <if test="P_PRODDIVISION != null and P_PRODDIVISION !='' and !(P_PRODDIVISION eq '*'.toString()) ">
                        AND		PD.PRODUCTDEFTYPE = #{P_PRODDIVISION}
                    </if>

					UNION ALL

                    SELECT TO_CHAR(DD.DDAY ,'YYYY-MM-DD')                   AS INPUTDAY
                         , L.LOTINPUTQTY                                    AS INPUTQTY
                         , L.LOTINPUTQTY / L.PANELPERQTY                    AS PNLINPUTQTY
                         , ROUND(L.LOTINPUTQTY / PD.PCSMM,2)                AS INPUTMM
						 ,  PD.PRODUCTDEFID                                 AS PRODUCTDEFID
						 ,  PD.PRODUCTDEFNAME                               AS PRODUCTDEFNAME   
						 --,  DC1.DICTIONARYNAME                              AS PROCESSSEGMENTNAME     		-- 공정명
                         
                         --,  L.PROCESSSEGMENTID                              -- 공정코드(21.05.21) 김진현 추가		
                         , LWR.PROCESSSEGMENTID    AS PROCESSSEGMENTID                           -- 투입 공정 코드
                         , NVL(DIC1.DICTIONARYNAME, PSG.PROCESSSEGMENTNAME) AS PROCESSSEGMENTNAME  --투입 공정 명	
                         
                          ------------------------------------------------------------------------------------
                         ,  NVL(PCM_EXCHANGE_FN(L.PLANTID , SYSDATE , UP.CURRENCY_CODE, L.LOTINPUTQTY * UP.UNITPRICE),0) AS INPUTPRICE --1차는 계획 환율만 
                         ------------------------------------------------------------------------------------
                         	 
                    FROM MFM_PRODUCTIONORDER         PO
                    INNER JOIN PCM_LOT               L     ON  PO.PRODUCTDEFID      = L.PRODUCTDEFID
                                                          AND PO.PRODUCTDEFVERSION  = L.PRODUCTDEFVERSION
                                                          AND PO.PRODUCTIONORDERID  = L.PRODUCTIONORDERID
                                                          AND PO.LINENO             = L.LINENO
                    INNER JOIN CMD_DAY               DD    ON L.LOTSTARTDATE BETWEEN DD.PROD_START_DT AND DD.PROD_END_DT
                                                          AND L.PLANTID             = DD.PLANTID
                    INNER JOIN BAS_PRODUCTDEFINITION PD    ON L.PRODUCTDEFID       = PD.PRODUCTDEFID
                                                          AND L.PRODUCTDEFVERSION   = PD.PRODUCTDEFVERSION
					
					
					 -- 투입공정 조회  (공정관리 > 투입관리 > 투입 실적 조회 > LOT별 투입실적 Tab)
                    INNER JOIN BAS_PROCESSPATH PP 
                            ON L.PROCESSDEFID = PP.PROCESSDEFID 
                            AND L.PROCESSDEFVERSION = PP.PROCESSDEFVERSION 
                            AND PP.PATHTYPE IN ('Start', 'StartEnd')
                    INNER JOIN BAS_PROCESSSEGMENT PSG  
                            ON PP.PROCESSSEGMENTID = PSG.PROCESSSEGMENTID 
                            AND PP.PROCESSSEGMENTVERSION = PSG.PROCESSSEGMENTVERSION 
                    LEFT JOIN CMD_DICTIONARY DIC1
                            ON DIC1.DICTIONARYID = PSG.PROCESSSEGMENTNAME 
                            AND DIC1.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}        -- 다국어 코드 --'ko-KR'
                    -- 투입공정 작업실적 조회
                    INNER JOIN PCM_LOTWORKRESULT LWR 	
                            ON L.LOTID = LWR.LOTID 
                            AND LWR.USERSEQUENCE = PP.USERSEQUENCE  
                            AND LWR.PROCESSSEGMENTID = PP.PROCESSSEGMENTID 
                            AND LWR.PROCESSSEGMENTVERSION = PP.PROCESSSEGMENTVERSION 
                            --AND LWR.RESULTTYPE <![CDATA[<>]]> 'SKIP'          -- 첫공정에서 NORMAL,SKIP 두개 있음 (21.05.21)
					
					
					------------------------------------------------------------------------------------
                    -- [금액 추가] (21.07.30)
                    LEFT JOIN BAS_UNITPRICEFORMES    UP ON UP.PRODUCTDEFID 		= PO.PRODUCTDEFID 
                                                        AND UP.PRODUCTDEFVERSION 			= PO.PRODUCTDEFVERSION 
                                                        --AND DD.DDAY  BETWEEN APPLY_START_DATE
                                                        AND SYSDATE  BETWEEN APPLY_START_DATE 
                                                        AND NVL(APPLY_END_DATE,TO_TIMESTAMP('9999-12-31 23:59:59','yyyy-MM-dd HH24:MI:SS'))
                    ------------------------------------------------------------------------------------
					
                    WHERE 1=1
                    AND L.LOTSTATE                      <![CDATA[<>]]> 'Created'
                    
                    -- (21.06.21) 수정
                    AND L.LOTCREATEDTYPE  			<![CDATA[<>]]>  'Return'
                    AND L.ISDEFECTED  					= 'N'
                    --AND NVL(L.ISDEFECTED ,'N')       <![CDATA[<>]]> 'Y'
                    AND L.ISREPRESENTROLLLOT 		= 'N'
                    --AND NVL(L.ISREPRESENTROLLLOT,'')    <![CDATA[<>]]> 'Y'
                    AND L.LOTID                            = L.PARENTLOTID
                    AND NVL(PD.RTRSHT,'SHT')          <![CDATA[<>]]> 'RTR'
                    AND NVL(L.ISOEM,'N')                 = 'N'
                                                               
                    AND L.LOTSTARTDATE                         BETWEEN TO_TIMESTAMP( TO_CHAR(TO_DATE(SUBSTR(#{P_DATE}, 1, 8))-2,'YYYY MM DD') || ' 08:30:00','YYYY-MM-DD HH24:MI:SS')                                        
                                                                   --AND TO_TIMESTAMP( SUBSTR(P_DATE,1,8) || ' 08:29:59','YYYY-MM-DD HH24:MI:SS')
                                                                   -- (21.06.23) +1 일 추가함 화면에(ex) 16일이면 16 08:30 ~ 17 08:30 까지의 데이터가 필요함
           											 			   AND TO_TIMESTAMP(TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYY-MM-DD') + (INTERVAL '1' DAY), 'YYYY-MM-DD') || ' 08:29:59','YYYY-MM-DD HH24:MI:SS')
                    AND L.LOTINPUTQTY                               IS NOT NULL
                    AND L.PLANTID                         = #{PLANTID}
                    
                    <if test="P_PRODCLASSTYPE != null and P_PRODCLASSTYPE !='' and !(P_PRODCLASSTYPE eq '*'.toString()) ">
                        AND		PD.PRODUCTIONTYPE = #{P_PRODCLASSTYPE}
                    </if>
                    <if test="P_PRODDIVISION != null and P_PRODDIVISION !='' and !(P_PRODDIVISION eq '*'.toString()) ">
                        AND		PD.PRODUCTDEFTYPE = #{P_PRODDIVISION}
                    </if>
                    
					--UNION STARTING END===================================
                )X
            --/////////////////////////////////////////////////////////////////////////////
            )Y
            GROUP BY INPUTDAY, PRODUCTDEFID, PRODUCTDEFNAME, PROCESSSEGMENTNAME
            			
                    	, PROCESSSEGMENTID             -- 공정코드 (21.05.21)
        )Z
         ON dc.DICTIONARYID  = z.WORKDONESEGMENTCLASSID
      WHERE dc.LANGUAGETYPE  = #{SESSION_LANGUAGETYPE}        -- 다국어 코드--'ko-KR'
        AND dc.DICTIONARYID  = 'INPUTSTATUS'
)

-- 대공정 + 투입현황 -> 3일치 로 조회 (김진현 21.05.17)

	SELECT  
             PROCESSSEGMENTNAME
           , PROCESSSEGMENTID             	-- 공정코드 (21.05.21)
           , PRODUCTDEFNAME   
           , PRODUCTDEFID                 	-- 품목코드 (21.05.21)
           ,  ${COLUMNS_SELECT}				-- 3일치 생성될 컬럼
           	  
	 FROM ( 
		        --기존 쿼리
		        SELECT s.WORKDONESEGMENTCLASSID           WORKDONESEGMENTCLASSID
		             , s.DDAY                             INPUTDAY
		             , s.WORKDONESEGMENTCLASSNAME         WORKDONESEGMENTCLASSNAME
		             --, wd.DISPLAYSEQFirst
		             , CASE WHEN s.WORKDONESEGMENTCLASSID = 'INPUTSTATUS'
                           THEN  NVL(wd.DISPLAYSEQFirst,1)
                           ELSE  	NVL(wd.DISPLAYSEQFirst,2)
                           END
                           AS DISPLAYSEQFirst               	-- [21.05.17 김진현 조건 추가]  투입현황의 경우 NULL 값 있을 시 하나로 통합. 1 설정
		             --, wd.INPUTDAY  
		             , wd.INPUTPNLQTY
		             , wd.INPUTMMQTY
		             , wd.WIPPANELQTY
		             , wd.WIPMMQTY
		             , s.SEQDISPLAY
		             , s.ISLEFTORRIGHTDISPLAY              -- [21.05.17 김진현 조건 추가] (화면에서 좌우 구분 사용)
		             
		             , PRODUCTDEFNAME   
                     , PRODUCTDEFID                 			-- 품목코드 (21.05.21)
                     , PROCESSSEGMENTNAME
                     , PROCESSSEGMENTID             		-- 공정코드 (21.05.21)
                     
                     ---------------------------------------
                     , (wd.PRICE)       AS PRICE        -- 금액 추가 (21.07.30)  
                     ---------------------------------------
                     
		          FROM WORKDONEQTY wd
		         RIGHT OUTER JOIN (
		                            SELECT wsc.WORKDONESEGMENTCLASSID  
		                                 , TO_CHAR(d.DDAY, 'YYYY-MM-DD')                  DDAY
		                                 , wsc.ISLEFTORRIGHTDISPLAY  
		                                 , wsc.WORKDONESEGMENTCLASSNAME
		                                 , wsc.SEQDISPLAY
		                              FROM CMD_DAY                d     
		                             CROSS JOIN(
		                                           SELECT dc.DICTIONARYID                 WORKDONESEGMENTCLASSID  
		                                                , 'LEFT'                          ISLEFTORRIGHTDISPLAY
		                                                , dc.DICTIONARYNAME               WORKDONESEGMENTCLASSNAME
		                                                , 0                               SEQDISPLAY     
		                                             FROM CMD_DICTIONARY dc
		                                            WHERE DICTIONARYID      = 'INPUTSTATUS'											-- [투입현황 다국어 21.05.17 김진현]
		                                              AND dc.LANGUAGETYPE   = #{SESSION_LANGUAGETYPE}
		                                       ) wsc
		                             WHERE d.SDAY BETWEEN  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))- 2, 'YYYYMMDD') AND SUBSTR(#{P_DATE},1, 8)
		                           ) s
		                        ON s.WORKDONESEGMENTCLASSID = wd.WORKDONESEGMENTCLASSID
		                       AND s.DDAY                   = wd.INPUTDAY 
		          WHERE 1=1
		            --AND wd.displayseqfirst      IS NOT NULL              --값이 NULL이면 삭제
		            --AND s.ISLEFTORRIGHTDISPLAY  = 'LEFT'               --왼쪽만 사용할 경우
		            
		            AND PRODUCTDEFID is not null      -- null 이면 삭제 (그룹핑해서 보여줌 화면에서)		21.05.21 추가
		            
		          ORDER BY wd.DISPLAYSEQFIRST
			)
		    PIVOT ( SUM(INPUTPNLQTY)   		AS SUM_INPUTPNLQTY
		           , SUM(INPUTMMQTY)  			AS SUM_INPUTMMQTY
		           , SUM(WIPPANELQTY)  			AS SUM_WIPPANELQTY
		           , SUM(WIPMMQTY)     			AS SUM_WIPMMQTY
		           
		           ------------------------------------(21.07.30) 금액추가
                   , SUM(PRICE)             		AS SUM_PRICE
                   ------------------------------------
		           
		           FOR 	INPUTDAY   
		           IN(		${COLUMNS}	)
	                         	
			)
			ORDER BY  SEQDISPLAY			-- [21.05.17 정렬 추가]
      
	
	</select>
	
	<!--
		설		명	: 주요 공정 실적 현황판 - 미투입현황 상세조회
		생	성	자	: 김진현
		생	성	일	: 2021-07-14
		수  정   이  력	:
	-->
	<select id="selectWorkDoneNOTINPUTSTATUSDetail" parameterType="map" resultType="hashmap">
	/*selectWorkDoneNOTINPUTSTATUSDetail - 주요 공정 실적 현황판 - 미투입현황 상세조회 */

		WITH PRODUCT_SO_LIST AS
		(
			SELECT
					SO.SALESORDERID PRODUCTIONORDERID               -- 수주번호
				,	SO.LINENO                                       -- 수주배분 라인번호
				,	SO.ENTERPRISEID
				,	SO.PLANTID
				,	SO.PRODUCTDEFID			                            AS ORGPRODUCTDEFID              -- 제품 정의 ID
				,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION         -- 변경코드VERSION OR 제품 정의 VERSION
						 ELSE SO.CHANGECODEVERSION
						 END ORGPRODUCTDEFVERSION
				,	SO.PRODUCTDEFID                                     AS PRODUCTDEFID                 -- 제품 정의 ID
				,   CASE WHEN COALESCE(SO.CHANGECODEVERSION,' ') =' ' THEN SO.PRODUCTDEFVERSION
						 ELSE SO.CHANGECODEVERSION
						 END  PRODUCTDEFVERSION
				,	SO.CUSTOMERID                                                                       -- 고객사 ID
		--		,	SO.UNITPRICE * COALESCE(ME.EXCHANGEVALUE,1.0) SALESPRICE
				,	NVL(PCM_EXCHANGE_FN(SO.PLANTID , SYSDATE , UP.CURRENCY_CODE, 1 * UP.UNITPRICE),0) AS SALESPRICE         -- 통화 코드 /  단가
				,	SO.ORDERQTY - COALESCE(PO.SURPLUSWIP,0) - COALESCE(PO.SURPLUSSTOCK,0) PLANQTY                           -- 수주량 - 잉여재공 - 잉여재고
				,	PD.LAYER
				,	PD.PCSPNL                                   -- PCS/PNL
				,	PD.PCSMM                                    -- PCS/mm
				--,	0						AS "SEQUENCE"
				,	SO.ORDERQTY	                                -- 수주량
			FROM	BAS_SALEORDERAPPROVAL		SO
			LEFT JOIN MFM_PRODUCTIONORDER PO ON  SO.SALESORDERID = PO.PRODUCTIONORDERID
											AND SO.LINENO = PO.LINENO
											AND SO.ENTERPRISEID = PO.ENTERPRISEID
											AND SO.PLANTID = PO.PLANTID
			INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	SO.PRODUCTDEFID = PD.PRODUCTDEFID
												AND	((COALESCE(SO.CHANGECODEVERSION,' ') = ' ' AND SO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION) OR (COALESCE(SO.CHANGECODEVERSION,' ') <![CDATA[<>]]>' ' AND SO.CHANGECODEVERSION = PD.PRODUCTDEFVERSION))
			LEFT JOIN BAS_UNITPRICEFORMES    UP ON UP.PRODUCTDEFID = PO.PRODUCTDEFID 
											   AND UP.PRODUCTDEFVERSION = PO.PRODUCTDEFVERSION 
											   AND SYSDATE  BETWEEN APPLY_START_DATE 
												AND NVL(UP.APPLY_END_DATE,TO_TIMESTAMP('9999-12-31 23:59:59','yyyy-MM-dd HH24:MI:SS'))																									
			WHERE	1 = 1
			AND		COALESCE(PO.ISSPLIT, ' ') != 'Y'
			UNION ALL
			SELECT
					SO.SALESORDERID PRODUCTIONORDERID
					,	SO.LINENO
					,	SO.ENTERPRISEID
					,	SO.PLANTID
					,	COALESCE(PO.PRODUCTDEFID,SO.PRODUCTDEFID)			AS ORGPRODUCTDEFID
					,	COALESCE(PO.PRODUCTDEFVERSION,SO.PRODUCTDEFVERSION)	AS ORGPRODUCTDEFVERSION
					,	BOM.MATERIALDEFID		AS PRODUCTDEFID
					,	BOM.MATERIALDEFVERSION	AS PRODUCTDEFVERSION
					,	SO.CUSTOMERID
		--			,	SO.UNITPRICE * COALESCE(ME.EXCHANGEVALUE,1.0) SALESPRICE
					,	NVL(PCM_EXCHANGE_FN(SO.PLANTID , SYSDATE , UP.CURRENCY_CODE, 1 * UP.UNITPRICE),0) AS SALESPRICE
					,	SO.ORDERQTY - COALESCE(PO.SURPLUSWIP,0) - COALESCE(PO.SURPLUSSTOCK,0) PLANQTY
					,	PD.LAYER
					,	PD.PCSPNL
					,	PD.PCSMM
					--,	BOM.SEQUENCE
					,	SO.ORDERQTY					
			FROM	BAS_SALEORDERAPPROVAL		SO
			LEFT JOIN MFM_PRODUCTIONORDER PO ON  SO.SALESORDERID = PO.PRODUCTIONORDERID
											AND SO.LINENO = PO.LINENO
											AND SO.ENTERPRISEID = PO.ENTERPRISEID
											AND SO.PLANTID = PO.PLANTID
			INNER JOIN BAS_PRODUCTDEFINITION	PDD	ON	SO.PRODUCTDEFID = PDD.PRODUCTDEFID
												AND SO.PRODUCTDEFVERSION = PDD.PRODUCTDEFVERSION
			INNER JOIN BAS_BILLOFMATERIAL	BOM	ON	PO.PRODUCTDEFID = BOM.PRODUCTDEFID
												AND	PO.PRODUCTDEFVERSION = BOM.PRODUCTDEFVERSION
												AND	PDD.PROCESSDEFID = BOM.PROCESSDEFID
												AND PDD.PROCESSDEFVERSION = BOM.PROCESSDEFVERSION
												AND	BOM.MATERIALTYPE = 'Product'
			INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
												AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
			LEFT JOIN BAS_UNITPRICEFORMES    UP ON UP.PRODUCTDEFID = PO.PRODUCTDEFID 
											   AND UP.PRODUCTDEFVERSION = PO.PRODUCTDEFVERSION 
											   AND SYSDATE  BETWEEN APPLY_START_DATE 
												AND NVL(UP.APPLY_END_DATE,TO_TIMESTAMP('9999-12-31 23:59:59','yyyy-MM-dd HH24:MI:SS'))																
			WHERE	1 = 1
			AND		COALESCE(PO.ISSPLIT, '') != 'Y' -- 수주배분 라인번호의 LOT생성 완료.
		)
		
		, QTY AS
		(
			SELECT
					T.PRODUCTIONORDERID
				,	T.LINENO
				,	T.ENTERPRISEID
				,	T.PLANTID
				,	T.PRODUCTDEFID
				,	T.PRODUCTDEFVERSION
				,	MAX(T.PLANQTY)						AS PLANQTY
				,	ROUND(MAX(T.PLANQTY / T.PCSPNL))	AS PLANPANELQTY
				,	COALESCE(SUM(T.CREATEDQTY), 0)		AS CREATEDQTY
				,	COALESCE(SUM(T.CREATEDPANELQTY), 0)	AS CREATEDPANELQTY
			FROM
			(
				SELECT
						PO.PRODUCTIONORDERID
					,	PO.LINENO
					,	PO.ENTERPRISEID
					,	PO.PLANTID
					,	PO.PRODUCTDEFID
					,	PO.PRODUCTDEFVERSION
					,	PO.PLANQTY
					,	PO.PCSPNL
					,	TO_NUMBER(CASE WHEN PD.PRODUCTDEFTYPE = 'Product' THEN L.CREATEDQTY
							 ELSE L.CREATEDQTY / L.PANELPERQTY * PO.PCSPNL
						END)			AS CREATEDQTY
					,	L.CREATEDQTY / L.PANELPERQTY	AS CREATEDPANELQTY
				FROM	PRODUCT_SO_LIST			PO
				LEFT OUTER JOIN PCM_LOT			L	ON	PO.PRODUCTIONORDERID = L.PRODUCTIONORDERID
													AND	PO.LINENO = L.LINENO
													AND	PO.PRODUCTDEFID = L.PRODUCTDEFID
													AND	PO.PRODUCTDEFVERSION = L.PRODUCTDEFVERSION
													AND	L.ROOTLOTID = L.PARENTLOTID
													AND	L.LOTCREATEDTYPE = 'Normal'
													AND	L.LOTSTATE != 'Created'
													AND L.ISOEM = 'N'
				INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
													AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
				WHERE	1 = 1
			)	T
			GROUP BY T.PRODUCTIONORDERID
					,T.LINENO
					,T.ENTERPRISEID
					,T.PLANTID
					,T.PRODUCTDEFID
					,T.PRODUCTDEFVERSION
		)
		
		,  T_NOTINPUTSTATUS  AS (
			SELECT
					PO.PRODUCTDEFID
				,	PO.PRODUCTDEFVERSION
				,	PD.PRODUCTDEFNAME
				,	COALESCE(PDN.DICTIONARYNAME, PDC.MEANING)									AS PRODUCTIONTYPE
				,	POL.CUSTOMERID
				,	C.CUSTOMERNAME
				,	COALESCE(PTN.DICTIONARYNAME, PT.MEANING)									AS PRODUCTDEFTYPE
				,	POL.LAYER
				,	POL.PCSPNL
				,	POL.PCSMM
				,	SUM(PO.PLANQTY - PO.CREATEDQTY)												AS QTY
				,	SUM(PO.PLANPANELQTY - PO.CREATEDPANELQTY)									AS PANELQTY
				,	ROUND(SUM(((PO.PLANQTY - PO.CREATEDQTY) / POL.PCSMM)), 2) 					AS M2
				--,	SUM((PO.PLANQTY - PO.CREATEDQTY) * POL.SALESPRICE / 100000000)				AS SALESPRICE
				
				--,	ROUND(TO_NUMBER(SUM((PO.PLANQTY - PO.CREATEDQTY) * POL.SALESPRICE / 100000000)),1)				AS SALESPRICE				
				---------------------------------------------------------------------------
				-- [금액 수정](21.07.30)
                ,	ROUND(TO_NUMBER(SUM((PO.PLANQTY - PO.CREATEDQTY) * POL.SALESPRICE )),1)								AS SALESPRICE
                ---------------------------------------------------------------------------
				
				,	COALESCE(RSN.DICTIONARYNAME, RS.MEANING)									AS RTRSHT
				,	COALESCE(PSN.DICTIONARYNAME, PS.PROCESSSEGMENTNAME)							AS PROCESSSEGMENTNAME
				,	SUM(COALESCE(POL.ORDERQTY, 0)) - SUM(COALESCE(PO.CREATEDQTY, 0))				AS LEFTQTY --잔량
			FROM	QTY						PO
			INNER JOIN PRODUCT_SO_LIST		POL	ON	PO.PRODUCTIONORDERID = POL.PRODUCTIONORDERID
												AND	PO.LINENO = POL.LINENO
												AND	PO.ENTERPRISEID = POL.ENTERPRISEID
												AND	PO.PLANTID = POL.PLANTID
												AND	PO.PRODUCTDEFID = POL.PRODUCTDEFID
												AND	PO.PRODUCTDEFVERSION = POL.PRODUCTDEFVERSION
			INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	PO.PRODUCTDEFID = PD.PRODUCTDEFID
													AND	PO.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
			LEFT OUTER JOIN BAS_CUSTOMER		C	ON	POL.CUSTOMERID = C.CUSTOMERID
			INNER JOIN CMD_LOOKUP_VALUES	PT	ON	PD.PRODUCTDEFTYPE = PT.LOOKUP_CODE
												AND	PT.LOOKUP_TYPE = 'ProductDefType'
			LEFT OUTER JOIN CMD_DICTIONARY	PTN	ON	PT.DICTIONARYID = PTN.DICTIONARYID
												AND	PTN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			INNER JOIN CMD_LOOKUP_VALUES	RS	ON	PD.RTRSHT = RS.LOOKUP_CODE
												AND	RS.LOOKUP_TYPE = 'RTRSHT'
			LEFT OUTER JOIN CMD_DICTIONARY	RSN	ON	RS.DICTIONARYID = RSN.DICTIONARYID
												AND	RSN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			INNER JOIN BAS_PROCESSPATH		PP	ON	PD.PROCESSDEFID = PP.PROCESSDEFID
												AND	PD.PROCESSDEFVERSION = PP.PROCESSDEFVERSION
												--AND	PP.PATHSEQUENCE = 1
												AND	PP.PATHTYPE IN ('Start', 'StartEnd')
			INNER JOIN BAS_PROCESSSEGMENT	PS	ON	PP.PROCESSSEGMENTID = PS.PROCESSSEGMENTID
												AND	PP.PROCESSSEGMENTVERSION = PS.PROCESSSEGMENTVERSION
			LEFT OUTER JOIN CMD_DICTIONARY	PSN	ON	PS.PROCESSSEGMENTNAME = PSN.DICTIONARYID
												AND	PSN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			LEFT OUTER JOIN CMD_LOOKUP_VALUES	PDC	ON	PDC.LOOKUP_CODE = PD.PRODUCTIONTYPE
												AND	PDC.LOOKUP_TYPE = 'ProductionType'
			LEFT OUTER JOIN CMD_DICTIONARY	PDN	ON	PDC.MEANING = PDN.DICTIONARYID
												AND	PDN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
			WHERE	1 = 1
				AND		PO.PLANQTY <![CDATA[>]]> PO.CREATEDQTY
				AND     PD.PRODUCTDEFTYPE 	= 'Product'
				AND 	PO.PLANTID 			=  #{PLANTID}
                AND 	PD.PRODUCTIONTYPE 	= 'Production'  -- 양산값
			 
			GROUP BY PO.PRODUCTDEFID
					,PO.PRODUCTDEFVERSION
					,POL.ORGPRODUCTDEFVERSION
					,PD.PRODUCTDEFNAME
					,PD.PRODUCTIONTYPE
					,POL.CUSTOMERID
					,C.CUSTOMERNAME
					,PT.MEANING
					,PTN.DICTIONARYNAME
					,POL.LAYER
					,POL.PCSPNL
					,POL.PCSMM
					,RS.MEANING
					,RSN.DICTIONARYNAME
					,PS.PROCESSSEGMENTNAME
					,PSN.DICTIONARYNAME
					,PDN.DICTIONARYNAME						
					,POL.ORGPRODUCTDEFID
					--,POL.SEQUENCE
					,PDC.MEANING
			ORDER BY POL.ORGPRODUCTDEFID
					,POL.ORGPRODUCTDEFVERSION
		)
		
		,	WORKDONEQTY AS(
			--- 메인 안에 같이 넣는다.  미투입 스냅샷처럼 필요 
         SELECT dc.DICTIONARYNAME                                      	WORKDONESEGMENTCLASSNAME
             , 0                                                      	DISPLAYSEQFirst
             , z.WORKDONESEGMENTCLASSID
             , INPUTDAY                                           		INPUTDAY  
             , NULL INPUTPNLQTY
             , NULL INPUTMMQTY
             -- 미투입현황은 재공만 있다.
             , WIPPANELQTY                                             	WIPPANELQTY		
             , WIPMMQTY                                                	WIPMMQTY
			 -- (21.07.14) - 상세조회 그룹 내용 추가
             , PRODUCTDEFID, PRODUCTDEFVERSION, PRODUCTDEFNAME, PRODUCTDEFTYPE, PRODUCTIONTYPE
             
             ----------------------------------------------
             -- [금액추가](21.07.30)
             , PRICE 															AS PRICE
             ----------------------------------------------
          FROM CMD_DICTIONARY             dc
          LEFT OUTER JOIN
          ( 
			SELECT   -- [현재공 - 미투입] (21.07.14) 
					 (  CASE WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
									  THEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD')		-- (00:00 ~ 08:29) (당일 08:30 이전인데 필터 날자가 당일인 경우) -> 현재공미투입을 이전날짜로 표시
									  -- (21.07.14) 추가 및 이전일 0:00 ~ 08:29분도 이전 날짜가 현재공 미투입으로 나오도록
									  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')  <![CDATA[<]]> '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
									  THEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD')		-- (00:00 ~ 08:29) (당일 08:30 이전인데 필터 날자가 이전날짜인 경우) -> 현재공미투입을 이전날짜로 표시
									  ELSE  TO_CHAR(SYSDATE, 'YYYY-MM-DD') 			-- 나머지 현재공미투입은 현시점날짜로 설정
									  END
						)		AS INPUTDAY   
					 , SUM(PANELQTY)                 	    AS WIPPANELQTY
					 , SUM(M2)                     	        AS WIPMMQTY
					 -- (21.07.14) - 상세조회 그룹 내용 추가
                     , PRODUCTDEFID, PRODUCTDEFVERSION, PRODUCTDEFNAME, PRODUCTDEFTYPE, PRODUCTIONTYPE
					 , 'MENU_PG-SG-0100'                    AS WORKDONESEGMENTCLASSID   -- 미투입 현황
					 
					 --------------------------------------------------------
                     --[금액 추가]		(21.07.30)
                     , SUM(SALESPRICE) 						AS PRICE
                     --------------------------------------------------------
					 
				FROM   T_NOTINPUTSTATUS	
				-- (21.07.14) - 상세조회 그룹 내용 추가
                GROUP BY PRODUCTDEFID, PRODUCTDEFVERSION, PRODUCTDEFNAME, PRODUCTDEFTYPE, PRODUCTIONTYPE
			
			UNION ALL	
			
			-- 이전 데이터 (기초와 같음 당일 생성된 미투입list를 스냅샷으로 관리 -> (ex)07/14 08:30분에 생성된 데이터 07/13일 미투입 내용입니다.)
			SELECT  TXNTIME                             	AS  INPUTDAY
				 , SUM(PANELQTY)                 	    AS 	WIPPANELQTY
				 , SUM(M2)                     	        	AS 	WIPMMQTY
				 -- (21.07.14) - 상세조회 그룹 내용 추가
                 , PRODUCTDEFID, PRODUCTDEFVERSION, PRODUCTDEFNAME, PRODUCTDEFTYPE, PRODUCTIONTYPE
				 , 'MENU_PG-SG-0100'                    AS 	WORKDONESEGMENTCLASSID   -- 미투입 현황
				 
				 ----------------------------------------------
                 -- [금액추가] (21.07.30)
                 , SUM(SALESPRICE) 						AS 	PRICE
                 ----------------------------------------------
				 
			  FROM (
					
					SELECT      
						 -- [기초 미투입 부분 수정] (21.07.14)
						(  CASE 
								-- (당일 08:30 이전인 상태에서 당일날짜로 조회시)
								  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
								  THEN  
										CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(NI.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
											 THEN  NULL  -- (당일 08:30 이전인 경우 이전날짜) 이전날짜의 경우가 현재공을 봐야됨
											 ELSE  TO_CHAR(TO_DATE(NI.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
											 END
											 
								  -- (당일 08:30 이전인 상태에서 이전날짜로 조회시 )
								  WHEN  TO_CHAR(SYSDATE, 'HH24MISS')   <![CDATA[<]]>  '083000'  AND  TO_CHAR(SYSDATE, 'YYYYMMDD')-1  =  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8) ,     'YYYYMMDD'), 'YYYYMMDD')
								  THEN  
										CASE WHEN  TO_CHAR(SYSDATE-1, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(NI.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
											 THEN  NULL	-- 해당의 경우 (00:00 ~ 08:29 까지의 데이터) 당일일 경우 재공쪽을 본다.
											 ELSE  TO_CHAR(TO_DATE(NI.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')		-- 나머지는 당일을 본다 (해당일의 기말 데이터를 보여 주면 된다 재공)
											 END	
											 
								  ELSE  
										-- 그 날짜 그대로 (각 기말 데이터) (21.07.14)
										CASE WHEN  TO_CHAR(SYSDATE, 'YYYY-MM-DD') = TO_CHAR(TO_DATE(NI.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
											 THEN  NULL
											 ELSE  TO_CHAR(TO_DATE(NI.TXNTIME, 'YYYY-MM-DD'), 'YYYY-MM-DD')
											 END
								  END
								  
							) AS TXNTIME
							
						,   NI.PRODUCTDEFID
						,   NI.PRODUCTDEFVERSION
						,   NI.ORGPRODUCTDEFVERSION
						--,   NI.PRODUCTIONTYPE    
						,	COALESCE(PDN.DICTIONARYNAME, PDC.MEANING)									AS PRODUCTIONTYPE    
						,   NI.CUSTOMERID    
						,	C.CUSTOMERNAME    
						--,   NI.PRODUCTDEFTYPE    
						,	COALESCE(PTN.DICTIONARYNAME, PT.MEANING)									AS PRODUCTDEFTYPE    
						,   NI.LAYER
						,   NI.PROCESSSEGMENTID    
						--,	COALESCE(PSN.DICTIONARYNAME, PS.PROCESSSEGMENTNAME)							AS PROCESSSEGMENTNAME    
						,   NI.PCSPNL
						,   NI.PCSMM
						,   NI.QTY
						,   NI.PANELQTY
						,   NI.M2
						,   NI.SALESPRICE
						,   NI.RTRSHT    
						,	COALESCE(RSN.DICTIONARYNAME, RS.MEANING)									AS RTRSHT_NM    
						,   NI.LEFTQTY
						-- (21.07.14) 품목명 추가
						,	PD.PRODUCTDEFNAME
						
					  from MFM_NOTINPUTSTATUS NI
								-- (21.07.14) 
								INNER JOIN BAS_PRODUCTDEFINITION	PD	ON	NI.PRODUCTDEFID = PD.PRODUCTDEFID
																	AND	NI.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
								LEFT OUTER JOIN BAS_CUSTOMER		C	ON	NI.CUSTOMERID = C.CUSTOMERID
								INNER JOIN CMD_LOOKUP_VALUES	PT	ON	NI.PRODUCTDEFTYPE = PT.LOOKUP_CODE
																	AND	PT.LOOKUP_TYPE = 'ProductDefType'
								LEFT OUTER JOIN CMD_DICTIONARY	PTN	ON	PT.DICTIONARYID = PTN.DICTIONARYID
																	AND	PTN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
								
								INNER JOIN CMD_LOOKUP_VALUES	RS	ON	NI.RTRSHT = RS.LOOKUP_CODE
																	AND	RS.LOOKUP_TYPE = 'RTRSHT'
								LEFT OUTER JOIN CMD_DICTIONARY	RSN	ON	RS.DICTIONARYID = RSN.DICTIONARYID
																	AND	RSN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
								/*                                    
								INNER JOIN BAS_PROCESSSEGMENT	PS	ON	NI.PROCESSSEGMENTID = PS.PROCESSSEGMENTID
																	--AND	PP.PROCESSSEGMENTVERSION = PS.PROCESSSEGMENTVERSION   --해당 값도 담아야 된다.
								LEFT OUTER JOIN CMD_DICTIONARY	PSN	ON	PS.PROCESSSEGMENTNAME = PSN.DICTIONARYID
																	AND	PSN.LANGUAGETYPE = 'ko-KR'
								*/ 
								LEFT OUTER JOIN CMD_LOOKUP_VALUES	PDC	ON	PDC.LOOKUP_CODE = NI.PRODUCTIONTYPE
																	AND	PDC.LOOKUP_TYPE = 'ProductionType'
								LEFT OUTER JOIN CMD_DICTIONARY	PDN	ON	PDC.MEANING = PDN.DICTIONARYID
																	AND	PDN.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
						 WHERE 1 = 1
							AND NI.TXNTIME      <![CDATA[>=]]>   TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))-2, 'YYYY-MM-DD')                           
							AND NI.TXNTIME      <![CDATA[<]]>     TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8),     'YYYY-MM-DD') + (INTERVAL '1' DAY), 'YYYY-MM-DD')
				  ) PR
				  -- (21.07.14) - 상세조회 그룹 내용 추가
                  GROUP BY TXNTIME, PRODUCTDEFID, PRODUCTDEFVERSION, PRODUCTDEFNAME, PRODUCTDEFTYPE, PRODUCTIONTYPE 
			)Z
             ON dc.DICTIONARYID  		= z.WORKDONESEGMENTCLASSID
          WHERE dc.LANGUAGETYPE  		= #{SESSION_LANGUAGETYPE}        -- 다국어 코드--'ko-KR'
            AND dc.DICTIONARYID  		= 'MENU_PG-SG-0100' 
		
		)

-- 대공정 + 투입현황 -> 3일치 로 조회 (김진현 21.05.17)

	SELECT  
             PRODUCTDEFID
		   , PRODUCTDEFVERSION
		   , PRODUCTDEFNAME
		   , PRODUCTDEFTYPE
		   , PRODUCTIONTYPE
		   
           ,  ${COLUMNS_SELECT}				-- 3일치 생성될 컬럼
           	  
	 FROM ( 
		        --기존 쿼리
		        SELECT s.WORKDONESEGMENTCLASSID           WORKDONESEGMENTCLASSID
		             , s.DDAY                             INPUTDAY
		             , s.WORKDONESEGMENTCLASSNAME         WORKDONESEGMENTCLASSNAME
		             --, wd.DISPLAYSEQFirst
		             , CASE WHEN s.WORKDONESEGMENTCLASSID = 'INPUTSTATUS'
                           THEN  NVL(wd.DISPLAYSEQFirst,1)
						   WHEN s.WORKDONESEGMENTCLASSID = 'MENU_PG-SG-0100'
                           THEN  NVL(wd.DISPLAYSEQFirst,0)
                           ELSE  	NVL(wd.DISPLAYSEQFirst,2)
                           END
                           AS DISPLAYSEQFirst               	-- [21.05.17 김진현 조건 추가]  투입현황의 경우 NULL 값 있을 시 하나로 통합. 1 설정
		             --, wd.INPUTDAY  
		             , wd.INPUTPNLQTY
		             , wd.INPUTMMQTY
		             , wd.WIPPANELQTY
		             , wd.WIPMMQTY
		             , s.SEQDISPLAY
		             , s.ISLEFTORRIGHTDISPLAY              -- [21.05.17 김진현 조건 추가] (화면에서 좌우 구분 사용)
		             
		             , PRODUCTDEFID, PRODUCTDEFVERSION, PRODUCTDEFNAME, PRODUCTDEFTYPE, PRODUCTIONTYPE
		             
		             ---------------------------------------
                     , (wd.PRICE)       AS PRICE        -- 금액 추가 (21.07.30)  
                     ---------------------------------------
		          FROM WORKDONEQTY wd
		         RIGHT OUTER JOIN (
		                            SELECT wsc.WORKDONESEGMENTCLASSID  
		                                 , TO_CHAR(d.DDAY, 'YYYY-MM-DD')                  DDAY
		                                 , wsc.ISLEFTORRIGHTDISPLAY  
		                                 , wsc.WORKDONESEGMENTCLASSNAME
		                                 , wsc.SEQDISPLAY
		                              FROM CMD_DAY                d     
		                             CROSS JOIN(
		                                           SELECT dc.DICTIONARYID                 WORKDONESEGMENTCLASSID  
		                                                , 'LEFT'                          ISLEFTORRIGHTDISPLAY
		                                                , dc.DICTIONARYNAME               WORKDONESEGMENTCLASSNAME
		                                                , 0                               SEQDISPLAY     
		                                             FROM CMD_DICTIONARY dc
		                                            WHERE DICTIONARYID      = 'MENU_PG-SG-0100'			-- [미투입현황 다국어]
		                                              AND dc.LANGUAGETYPE   = #{SESSION_LANGUAGETYPE}
		                                       ) wsc
		                             WHERE d.SDAY BETWEEN  TO_CHAR(TO_DATE( SUBSTR(#{P_DATE},1, 8))- 2, 'YYYYMMDD') AND SUBSTR(#{P_DATE},1, 8)
		                           ) s
		                        ON s.WORKDONESEGMENTCLASSID = wd.WORKDONESEGMENTCLASSID
		                       AND s.DDAY                   = wd.INPUTDAY 
		          WHERE 1=1
		            --AND wd.displayseqfirst      IS NOT NULL              --값이 NULL이면 삭제
		            --AND s.ISLEFTORRIGHTDISPLAY  = 'LEFT'               --왼쪽만 사용할 경우
		            
		            AND PRODUCTDEFID is not null      -- null 이면 삭제 (그룹핑해서 보여줌 화면에서)		21.05.21 추가
		            
		          ORDER BY wd.DISPLAYSEQFIRST
			)
		    PIVOT ( SUM(INPUTPNLQTY)   		AS SUM_INPUTPNLQTY
		           , SUM(INPUTMMQTY)  			AS SUM_INPUTMMQTY
		           , SUM(WIPPANELQTY)  			AS SUM_WIPPANELQTY
		           , SUM(WIPMMQTY)     			AS SUM_WIPMMQTY
		           
		           ------------------------------------(21.07.30) 금액추가
                   , SUM(PRICE)             		AS SUM_PRICE
                   ------------------------------------
		           
		           FOR 	INPUTDAY   
		           IN(		${COLUMNS}	)
	                         	
			)
			ORDER BY  PRODUCTDEFID
				   , PRODUCTDEFVERSION
				   , PRODUCTDEFNAME
				   , PRODUCTDEFTYPE
				   , PRODUCTIONTYPE
      
	
	</select>


</mapper>
