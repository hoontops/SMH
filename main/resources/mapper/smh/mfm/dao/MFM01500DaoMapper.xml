<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="smh.mfm.dao.MFM01500Dao">


    <!--
		설		명	: 품목그룹 
		생	성	자	: 김성현
		생	성	일	: 2021. 05. 24 
		수  정   이  력	:
	-->
	<select id="selectProductKindForItem" parameterType="map" resultType="hashmap">
		-- selectProductKindForItem
		WITH PRDLIST AS
		(
		    SELECT  PD.PRODUCTDEFID
		    	,   PD.PRODUCTDEFVERSION					-- [21.04.30 Rev 추가]
		        ,   TRIM(PD.PRODUCTDEFNAME) 			AS PRODUCTDEFNAME
		        ,	MAX(PD.PRODUCTIONTYPE) 				AS PRODUCTIONTYPE
				,	MAX(PD.LOADOWNER)      				AS LOADOWNER
				,	MAX(PD.CREATOR)        					AS CREATOR
				,	MAX(PD.CREATEDTIME)    				AS CREATEDTIME
				,	MAX(PD.MODIFIER)       					AS MODIFIER
				,	MAX(PD.MODIFIEDTIME)   				AS MODIFIEDTIME
				,	MAX(PD.VALIDSTATE)     					AS VALIDSTATE
				,	MAX(PD.PLANTID)        					AS PLANTID
				,	MAX(PD.PRODUCTDEFTYPE) 				AS PRODUCTDEFTYPE
				,	MAX(PD.ISLOADMNG)      				AS ISLOADMNG
		    FROM BAS_PRODUCTDEFINITION PD           -- 제품정보
		    WHERE 1=1
		          AND    PD.ENTERPRISEID = #{ENTERPRISEID}
                  AND		PD.PLANTID = #{PLANTID}
                  AND		PD.VALIDSTATE = 'Valid'			-- 추가 (화면에서 값이 안넘어옴.)
                   -- [21.04.26 노석안 과장님 요청 사항 품목사용여부 Y인 것만 부하기준정보에서 등록됨]
                  AND   	PD.ISLOADMNG = 'Y'
			GROUP BY PD.PRODUCTDEFID
			        , TRIM(PD.PRODUCTDEFNAME)	
			        , PD.PRODUCTDEFVERSION           -- [21.04.30 버전 추가]	    
		)		
        SELECT
		    REL.PRODUCTDEFCLASSGROUPNAME AS CODE
		  , REL.PRODUCTDEFCLASSGROUPNAME AS NAME
        FROM 	PRDLIST					PD
        -- 제품,품목 그룹 리스트
        INNER JOIN MFM_WORKDONEPRODUCTREL  REL
        ON PD.PRODUCTDEFID  	= REL.PRODUCTDEFID     
		WHERE 1 = 1
            AND REL.ENTERPRISEID = #{ENTERPRISEID}
            AND REL.PLANTID    = #{PLANTID}
			AND REL.VALIDSTATE = 'Valid'
			AND REL.PRODUCTDEFCLASSGROUPNAME IS NOT NULL
		 GROUP BY REL.PRODUCTDEFCLASSGROUPNAME
		 ORDER BY REL.PRODUCTDEFCLASSGROUPNAME 
	</select>
	
    <!--
		설		명	: 제품군그룹 
		생	성	자	: 김성현
		생	성	일	: 2021. 05. 24 
		수  정   이  력	:
	-->	
	<select id="selectProductKindForProduct" parameterType="map" resultType="hashmap">
		-- selectProductKindForProduct
		WITH PRDLIST AS
		(
		    SELECT  PD.PRODUCTDEFID
		    	,   PD.PRODUCTDEFVERSION					-- [21.04.30 Rev 추가]
		        ,   TRIM(PD.PRODUCTDEFNAME) 			AS PRODUCTDEFNAME
		        ,	MAX(PD.PRODUCTIONTYPE) 				AS PRODUCTIONTYPE
				,	MAX(PD.LOADOWNER)      				AS LOADOWNER
				,	MAX(PD.CREATOR)        					AS CREATOR
				,	MAX(PD.CREATEDTIME)    				AS CREATEDTIME
				,	MAX(PD.MODIFIER)       					AS MODIFIER
				,	MAX(PD.MODIFIEDTIME)   				AS MODIFIEDTIME
				,	MAX(PD.VALIDSTATE)     					AS VALIDSTATE
				,	MAX(PD.PLANTID)        					AS PLANTID
				,	MAX(PD.PRODUCTDEFTYPE) 				AS PRODUCTDEFTYPE
				,	MAX(PD.ISLOADMNG)      				AS ISLOADMNG
		    FROM BAS_PRODUCTDEFINITION PD           -- 제품정보
		    WHERE 1=1
		          AND    PD.ENTERPRISEID = #{ENTERPRISEID}
                  AND		PD.PLANTID = #{PLANTID}
                  AND		PD.VALIDSTATE = 'Valid'			-- 추가 (화면에서 값이 안넘어옴.)
                   -- [21.04.26 노석안 과장님 요청 사항 품목사용여부 Y인 것만 부하기준정보에서 등록됨]
                  AND   	PD.ISLOADMNG = 'Y'
			GROUP BY PD.PRODUCTDEFID
			        , TRIM(PD.PRODUCTDEFNAME)	
			        , PD.PRODUCTDEFVERSION           -- [21.04.30 버전 추가]	    
		)		
        SELECT
		    REL.PRODUCTDEFGROUPNAME AS CODE
		  , REL.PRODUCTDEFGROUPNAME AS NAME
        FROM 	PRDLIST					PD
        -- 제품,품목 그룹 리스트
        INNER JOIN MFM_WORKDONEPRODUCTREL  REL
        ON PD.PRODUCTDEFID  	= REL.PRODUCTDEFID     
		WHERE 1 = 1
            AND REL.ENTERPRISEID = #{ENTERPRISEID}
            AND REL.PLANTID    = #{PLANTID}
			AND REL.VALIDSTATE = 'Valid'
			AND REL.PRODUCTDEFGROUPNAME IS NOT NULL
		 GROUP BY REL.PRODUCTDEFGROUPNAME
		 ORDER BY REL.PRODUCTDEFGROUPNAME 		
	</select>
		
       <!--
		설		명	: 품목별 주요공정 조회
		생	성	자	: 김성현
		생	성	일	: 2021. 05. 24 
		수  정   이  력	:
	-->
	<select id="selectItemGrpProductdefList" parameterType="map" resultType="hashmap">
		-- selectItemGrpProductdefList
		SELECT
                   A.PROCESSSEGMENTNAME
                 , A.PROCESSSEGMENTID
				 , B.SORT
                 , NVL(B.D1_BASEPANELQTY, 0)            AS D1_BASEPANELQTY
                 , NVL(B.BASEPANELQTY, 0)               AS BASEPANELQTY
                 , NVL(B.WIPPANELQTY, 0)		        AS  WIPPANELQTY
                 , NVL(B.D2_SENDPANELQTY, 0)		    AS  D2_SENDPANELQTY
                 , NVL(B.D1_SENDPANELQTY, 0)		    AS  D1_SENDPANELQTY
                 , NVL(B.SENDPANELQTY, 0)	            AS  SENDPANELQTY
                 , NVL(B.T08_SENDPANELQTY, 0)			AS  T08_SENDPANELQTY
                 , NVL(B.T10_SENDPANELQTY, 0)			AS  T10_SENDPANELQTY
                 , NVL(B.T12_SENDPANELQTY, 0)			AS  T12_SENDPANELQTY
                 , NVL(B.T15_SENDPANELQTY, 0)			AS  T15_SENDPANELQTY
                 , NVL(B.T17_SENDPANELQTY, 0)			AS  T17_SENDPANELQTY
                 , NVL(B.T20_SENDPANELQTY, 0)			AS  T20_SENDPANELQTY
                 , NVL(B.T22_SENDPANELQTY, 0)			AS  T22_SENDPANELQTY
                 , NVL(B.T00_SENDPANELQTY, 0)			AS  T00_SENDPANELQTY
                 , NVL(B.T03_SENDPANELQTY, 0)			AS  T03_SENDPANELQTY
                 , NVL(B.T05_SENDPANELQTY, 0)			AS  T05_SENDPANELQTY
	    FROM  
	    (
 				SELECT
                          PN.DICTIONARYNAME AS PROCESSSEGMENTNAME
                        , OP.PROCESSSEGMENTID     
                        , MIN(TO_NUMBER(OP.USERSEQUENCE))   AS USERSEQUENCE                                          
                  FROM   BAS_OPERATION OP
              	  INNER JOIN BAS_ROUTING                  RT  ON OP.ENTERPRISEID        = RT.ENTERPRISEID
                                                         AND OP.ASSEMBLYROUTINGID   = RT.ASSEMBLYROUTINGID
                  INNER JOIN BAS_PROCESSPATH               PP  ON  RT.MAINPRODUCTID        = PP.PROCESSDEFID
                                                            AND RT.MAINPRODUCTVERSION   = PP.PROCESSDEFVERSION
                                                            AND OP.PROCESSSEGMENTID     = PP.PROCESSSEGMENTID      
                    INNER JOIN BAS_PROCESSDEFINITION PSD ON  PP.PROCESSDEFID = PSD.PROCESSDEFID
                                                        AND PP.PROCESSDEFVERSION = PSD.PROCESSDEFVERSION
                    INNER JOIN BAS_PRODUCTDEFINITION PD  ON  PSD.PROCESSDEFID = PD.PROCESSDEFID
                                                        AND PSD.PROCESSDEFVERSION = PD.PROCESSDEFVERSION  
                    INNER JOIN MFM_WORKDONEPRODUCTREL		REL	ON	PD.PRODUCTDEFID = REL.PRODUCTDEFID
                                                                    AND	PD.PRODUCTDEFVERSION = REL.PRODUCTDEFVERSION  
                                                                    AND REL.VALIDSTATE = 'Valid'                                                                                                 
                  LEFT OUTER JOIN BAS_PROCESSSEGMENTEXT    PG  ON PG.PROCESSSEGMENTID    = OP.PROCESSSEGMENTID 
                                                    AND PG.ENTERPRISEID        = OP.ENTERPRISEID
                  LEFT OUTER JOIN CMD_DICTIONARY           PN  ON PN.DICTIONARYID        = PG.PROCESSSEGMENTNAME
                                                           AND PN.LANGUAGETYPE        = #{LANGUAGETYPE} 			
				   WHERE RT.ENTERPRISEID  =  #{ENTERPRISEID}
                      AND	OP.VALIDSTATE = 'Valid'
                      AND	PP.VALIDSTATE = 'Valid'	 
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					  AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE REL.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if> 	
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹
					--AND REL.PRODUCTDEFGROUPNAME IS NOT NULL
					AND REL.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
					
			GROUP BY
					PN.DICTIONARYNAME
				  , OP.PROCESSSEGMENTID				                    				  
	    ) A,
		(
		
		SELECT
			    LWR.PROCESSSEGMENTNAME
			,   LWR.PROCESSSEGMENTID 
            ,   MIN(TO_NUMBER(SSG.SORT))   				AS SORT
			,	SUM(LWR.D1_BASEPANELQTY)					AS D1_BASEPANELQTY
			,   SUM(LWR.BASEPANELQTY)						AS  BASEPANELQTY
			,   SUM(LWR.WIPPANELQTY)						AS  WIPPANELQTY
			,   SUM(LWR.D2_SENDPANELQTY)					AS  D2_SENDPANELQTY
			,   SUM(LWR.D1_SENDPANELQTY)					AS  D1_SENDPANELQTY
			,   SUM(LWR.SENDPANELQTY)						AS  SENDPANELQTY
			,   SUM(LWR.T08_SENDPANELQTY)				AS  T08_SENDPANELQTY
			,   SUM(LWR.T10_SENDPANELQTY)				AS  T10_SENDPANELQTY
			,   SUM(LWR.T12_SENDPANELQTY)				AS  T12_SENDPANELQTY
			,   SUM(LWR.T15_SENDPANELQTY)				AS  T15_SENDPANELQTY
			,   SUM(LWR.T17_SENDPANELQTY)				AS  T17_SENDPANELQTY
			,   SUM(LWR.T20_SENDPANELQTY)				AS  T20_SENDPANELQTY
			,   SUM(LWR.T22_SENDPANELQTY)				AS  T22_SENDPANELQTY
			,   SUM(LWR.T00_SENDPANELQTY)				AS  T00_SENDPANELQTY
			,   SUM(LWR.T03_SENDPANELQTY)				AS  T03_SENDPANELQTY
			,   SUM(LWR.T05_SENDPANELQTY)				AS  T05_SENDPANELQTY	
		FROM
		(
			-- 전일 기초
			SELECT
				    WS.PRODUCTDEFCLASSGROUPNAME
				,   WS.PROCESSSEGMENTNAME
				,   WS.PROCESSSEGMENTID 
				,   WS.PROCESSSEGMENTVERSION
				,	PANELQTY	AS D1_BASEPANELQTY
				,   0				AS  BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM(
				SELECT 
					    PD.PRODUCTDEFCLASSGROUPNAME
					,   BP.PROCESSSEGMENTNAME
					,   BP.PROCESSSEGMENTID 
					,   BP.PROCESSSEGMENTVERSION						
					,	WS.PANELQTY
				FROM PCM_WIPSUMMARYPERDAILY		WS
				INNER JOIN BAS_PROCESSSEGMENT		BP	ON	WS.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
																AND	WS.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION                																
				INNER JOIN MFM_WORKDONEPRODUCTREL		PD	ON	WS.PRODUCTDEFID = PD.PRODUCTDEFID
																AND	WS.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
																AND PD.VALIDSTATE = 'Valid'
				WHERE 1=1
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND		WS.TXNTIME = TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') - 2 , 'YYYY-MM-DD')
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
				
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
					
			)	WS			 
			 UNION ALL
			-- 금일기초
			SELECT
				    WS.PRODUCTDEFCLASSGROUPNAME
				,   WS.PROCESSSEGMENTNAME
				,   WS.PROCESSSEGMENTID 
				,   WS.PROCESSSEGMENTVERSION				
				,	0			    AS D1_BASEPANELQTY
				,	PANELQTY	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM(
				SELECT 
					    PD.PRODUCTDEFCLASSGROUPNAME
					,   BP.PROCESSSEGMENTNAME
					,   BP.PROCESSSEGMENTID 
					,   BP.PROCESSSEGMENTVERSION						
					,	WS.PANELQTY
				FROM PCM_WIPSUMMARYPERDAILY		WS
				INNER JOIN BAS_PROCESSSEGMENT		BP	ON	WS.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
																AND	WS.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
				INNER JOIN MFM_WORKDONEPRODUCTREL		PD	ON	WS.PRODUCTDEFID = PD.PRODUCTDEFID
																AND	WS.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
																AND PD.VALIDSTATE = 'Valid'
				WHERE 1=1
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
				    AND		WS.TXNTIME = TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') - 1 , 'YYYY-MM-DD')
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
					
			)	WS
			 UNION ALL
			-- 재공
			SELECT  
				    PD.PRODUCTDEFCLASSGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION				
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   L.PANELQTY				         	AS WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM    PCM_LOT    L
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	L.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	L.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION	                                 
			INNER JOIN MFM_WORKDONEPRODUCTREL 	PD  ON  L.PRODUCTDEFID = PD.PRODUCTDEFID
													AND L.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION    
													AND PD.VALIDSTATE = 'Valid'                                
			WHERE   1 = 1
			AND     L.LOTSTATE IN ('InProduction', 'InTransit')
			AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
			AND     COALESCE(L.ISHOLD, 'N') = 'N'
			AND		COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- D - 2 실적
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,	LWR.SENDPANELQTY		AS D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') - 2, 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') - 1, 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS') 
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
				
			 UNION ALL
			-- D - 1 실적
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') - 1, 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') , 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS') 
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>	
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
			UNION ALL
			-- 실적
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT},1,8) || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS') 
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 08:30 ~ 10:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0            	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '083000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '103000', 'YYYYMMDDHH24MISS') 
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
			UNION ALL
			-- 실적 10:30 ~ 12:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0            	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,	0		        AS T08_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '103000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '123000', 'YYYYMMDDHH24MISS') 
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 12:30 ~ 15:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '123000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '153000', 'YYYYMMDDHH24MISS') 
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 15:30 ~ 17:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '153000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '173000', 'YYYYMMDDHH24MISS') 
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 17:30 ~ 20:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '173000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '203000', 'YYYYMMDDHH24MISS') 
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 20:30 ~ 22:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '203000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '223000', 'YYYYMMDDHH24MISS') 
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 22:30 ~ 00:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '223000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '003000', 'YYYYMMDDHH24MISS') 
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 00:30 ~ 03:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '003000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '033000', 'YYYYMMDDHH24MISS') 
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 03:30 ~ 05:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '033000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '053000', 'YYYYMMDDHH24MISS') 
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 05:30 ~ 08:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '053000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '083000', 'YYYYMMDDHH24MISS') 
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         -- 품목그룹  
					-----------------------------------------------
				
			) LWR
            LEFT OUTER JOIN MFM_PROCESSSEGMENT SSG 	ON LWR.PROCESSSEGMENTID = SSG.PROCESSSEGMENTID
                                                   AND LWR.PRODUCTDEFCLASSGROUPNAME = SSG.PRODUCTDEFCLASSGROUPNAME
                                                   AND SSG.VALIDSTATE = 'Valid' 
			GROUP BY 
						   LWR.PROCESSSEGMENTNAME
						,   LWR.PROCESSSEGMENTID 			
		   ) B	
		   WHERE 1 = 1
			  AND A.PROCESSSEGMENTID      = B.PROCESSSEGMENTID(+)
		  ORDER BY NVL(TO_NUMBER(B.SORT), TO_NUMBER(A.USERSEQUENCE))
	</select>
	
	
   <!--
		설		명	: 제품군별 주요공정 조회
		생	성	자	: 김성현
		생	성	일	: 2021. 05. 24 
		수  정   이  력	:
	-->	
	<select id="selectProductGrpProductdefList" parameterType="map" resultType="hashmap">
		-- selectProductGrpProductdefList
		SELECT
                   A.PROCESSSEGMENTNAME
                 , A.PROCESSSEGMENTID
				 , B.SORT
                 , NVL(B.D1_BASEPANELQTY, 0)            AS D1_BASEPANELQTY
                 , NVL(B.BASEPANELQTY, 0)               AS BASEPANELQTY
                 , NVL(B.WIPPANELQTY, 0)		        AS  WIPPANELQTY
                 , NVL(B.D2_SENDPANELQTY, 0)		    AS  D2_SENDPANELQTY
                 , NVL(B.D1_SENDPANELQTY, 0)		    AS  D1_SENDPANELQTY
                 , NVL(B.SENDPANELQTY, 0)	            AS  SENDPANELQTY
                 , NVL(B.T08_SENDPANELQTY, 0)			AS  T08_SENDPANELQTY
                 , NVL(B.T10_SENDPANELQTY, 0)			AS  T10_SENDPANELQTY
                 , NVL(B.T12_SENDPANELQTY, 0)			AS  T12_SENDPANELQTY
                 , NVL(B.T15_SENDPANELQTY, 0)			AS  T15_SENDPANELQTY
                 , NVL(B.T17_SENDPANELQTY, 0)			AS  T17_SENDPANELQTY
                 , NVL(B.T20_SENDPANELQTY, 0)			AS  T20_SENDPANELQTY
                 , NVL(B.T22_SENDPANELQTY, 0)			AS  T22_SENDPANELQTY
                 , NVL(B.T00_SENDPANELQTY, 0)			AS  T00_SENDPANELQTY
                 , NVL(B.T03_SENDPANELQTY, 0)			AS  T03_SENDPANELQTY
                 , NVL(B.T05_SENDPANELQTY, 0)			AS  T05_SENDPANELQTY
	    FROM  
	    (
 				SELECT
                          PN.DICTIONARYNAME AS PROCESSSEGMENTNAME
                        , OP.PROCESSSEGMENTID     
                        , MIN(TO_NUMBER(OP.USERSEQUENCE))   AS USERSEQUENCE                                                       
                  FROM   BAS_OPERATION OP
              	  INNER JOIN BAS_ROUTING                  RT  ON OP.ENTERPRISEID        = RT.ENTERPRISEID
                                                         AND OP.ASSEMBLYROUTINGID   = RT.ASSEMBLYROUTINGID
                  INNER JOIN BAS_PROCESSPATH               PP  ON  RT.MAINPRODUCTID        = PP.PROCESSDEFID
                                                            AND RT.MAINPRODUCTVERSION   = PP.PROCESSDEFVERSION
                                                            AND OP.PROCESSSEGMENTID     = PP.PROCESSSEGMENTID       
                    INNER JOIN BAS_PROCESSDEFINITION PSD ON  PP.PROCESSDEFID = PSD.PROCESSDEFID
                                                        AND PP.PROCESSDEFVERSION = PSD.PROCESSDEFVERSION
                    INNER JOIN BAS_PRODUCTDEFINITION PD  ON  PSD.PROCESSDEFID = PD.PROCESSDEFID
                                                        AND PSD.PROCESSDEFVERSION = PD.PROCESSDEFVERSION  
                    INNER JOIN MFM_WORKDONEPRODUCTREL		REL	ON	PD.PRODUCTDEFID = REL.PRODUCTDEFID
                                                                    AND	PD.PRODUCTDEFVERSION = REL.PRODUCTDEFVERSION      
                                                                    AND REL.VALIDSTATE = 'Valid'                                                                                            
                  LEFT OUTER JOIN BAS_PROCESSSEGMENTEXT    PG  ON PG.PROCESSSEGMENTID    = OP.PROCESSSEGMENTID 
                                                    AND PG.ENTERPRISEID        = OP.ENTERPRISEID
                  LEFT OUTER JOIN CMD_DICTIONARY           PN  ON PN.DICTIONARYID        = PG.PROCESSSEGMENTNAME
                                                           AND PN.LANGUAGETYPE        = #{LANGUAGETYPE} 			
				   WHERE RT.ENTERPRISEID  = #{ENTERPRISEID}
                      AND	OP.VALIDSTATE = 'Valid'
                      AND	PP.VALIDSTATE = 'Valid'	
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE REL.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>   
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND REL.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND REL.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			GROUP BY
					PN.DICTIONARYNAME
				  , OP.PROCESSSEGMENTID			                    			  
	    ) A,
		(
		SELECT
			    LWR.PROCESSSEGMENTNAME
			,   LWR.PROCESSSEGMENTID 
            ,   MIN(TO_NUMBER(SSG.SORT))   				AS SORT
			,	SUM(LWR.D1_BASEPANELQTY)					AS D1_BASEPANELQTY
			,   SUM(LWR.BASEPANELQTY)						AS  BASEPANELQTY
			,   SUM(LWR.WIPPANELQTY)						AS  WIPPANELQTY
			,   SUM(LWR.D2_SENDPANELQTY)					AS  D2_SENDPANELQTY
			,   SUM(LWR.D1_SENDPANELQTY)					AS  D1_SENDPANELQTY
			,   SUM(LWR.SENDPANELQTY)						AS  SENDPANELQTY
			,   SUM(LWR.T08_SENDPANELQTY)				AS  T08_SENDPANELQTY
			,   SUM(LWR.T10_SENDPANELQTY)				AS  T10_SENDPANELQTY
			,   SUM(LWR.T12_SENDPANELQTY)				AS  T12_SENDPANELQTY
			,   SUM(LWR.T15_SENDPANELQTY)				AS  T15_SENDPANELQTY
			,   SUM(LWR.T17_SENDPANELQTY)				AS  T17_SENDPANELQTY
			,   SUM(LWR.T20_SENDPANELQTY)				AS  T20_SENDPANELQTY
			,   SUM(LWR.T22_SENDPANELQTY)				AS  T22_SENDPANELQTY
			,   SUM(LWR.T00_SENDPANELQTY)				AS  T00_SENDPANELQTY
			,   SUM(LWR.T03_SENDPANELQTY)				AS  T03_SENDPANELQTY
			,   SUM(LWR.T05_SENDPANELQTY)				AS  T05_SENDPANELQTY				
		FROM
		(		
			-- 전일 기초
			SELECT
				    WS.PRODUCTDEFGROUPNAME
				,   WS.PROCESSSEGMENTNAME
				,   WS.PROCESSSEGMENTID 
				,   WS.PROCESSSEGMENTVERSION						
				,	PANELQTY	AS D1_BASEPANELQTY
				,   0				AS  BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM(
				SELECT 
					    PD.PRODUCTDEFGROUPNAME AS PRODUCTDEFGROUPNAME
					,   BP.PROCESSSEGMENTNAME
					,   BP.PROCESSSEGMENTID 
					,   BP.PROCESSSEGMENTVERSION						
					,	WS.PANELQTY
				FROM PCM_WIPSUMMARYPERDAILY		WS
				INNER JOIN BAS_PROCESSSEGMENT		BP	ON	WS.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
																AND	WS.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
				INNER JOIN MFM_WORKDONEPRODUCTREL		PD	ON	WS.PRODUCTDEFID = PD.PRODUCTDEFID
																AND	WS.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
																AND PD.VALIDSTATE = 'Valid'
				WHERE 1=1
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND		WS.TXNTIME = TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') - 2 , 'YYYY-MM-DD')
				</if>
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
					
			)	WS
			UNION ALL
			-- 금일기초
			SELECT
				    WS.PRODUCTDEFGROUPNAME
				,   WS.PROCESSSEGMENTNAME
				,   WS.PROCESSSEGMENTID 
				,   WS.PROCESSSEGMENTVERSION						
				,	0			    AS D1_BASEPANELQTY
				,	PANELQTY	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM(
				SELECT 
					    PD.PRODUCTDEFGROUPNAME
					,   BP.PROCESSSEGMENTNAME
					,   BP.PROCESSSEGMENTID 
					,   BP.PROCESSSEGMENTVERSION							
					,	WS.PANELQTY
				FROM PCM_WIPSUMMARYPERDAILY		WS
				INNER JOIN BAS_PROCESSSEGMENT		BP	ON	WS.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
																AND	WS.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
				INNER JOIN MFM_WORKDONEPRODUCTREL		PD	ON	WS.PRODUCTDEFID = PD.PRODUCTDEFID
																AND	WS.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
																AND PD.VALIDSTATE = 'Valid'
				WHERE 1=1
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
				    AND		WS.TXNTIME = TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') - 1 , 'YYYY-MM-DD')
				</if>
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>
				
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
					
			)	WS
			UNION ALL
			-- 재공
			SELECT  
				    PD.PRODUCTDEFGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION						
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   L.PANELQTY				         	AS WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM    PCM_LOT                  	L 
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	L.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	L.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION			
			INNER JOIN MFM_WORKDONEPRODUCTREL 	PD  ON  L.PRODUCTDEFID = PD.PRODUCTDEFID
													AND L.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION   
													AND PD.VALIDSTATE = 'Valid'                                 
			WHERE   1 = 1
			AND     L.LOTSTATE IN ('InProduction', 'InTransit')
			AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
			AND     COALESCE(L.ISHOLD, 'N') = 'N'
			AND		COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>	
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- D - 2 실적
			SELECT
					PD.PRODUCTDEFGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,	LWR.SENDPANELQTY		AS D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION	
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') - 2, 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') - 1, 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS') 
				</if>
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
					
			UNION ALL
			-- D - 1 실적
			SELECT
					PD.PRODUCTDEFGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') - 1, 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') , 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS') 
				</if>
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적
			SELECT
					PD.PRODUCTDEFGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT},1,8) || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS') 
				</if>
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>	
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 08:30 ~ 10:30
			SELECT
					PD.PRODUCTDEFGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0            	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '083000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '103000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 10:30 ~ 12:30
			SELECT
					PD.PRODUCTDEFGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0            	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,	0		        AS T08_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '103000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '123000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
					
			UNION ALL
			-- 실적 12:30 ~ 15:30
			SELECT
					PD.PRODUCTDEFGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '123000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '153000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 15:30 ~ 17:30
			SELECT
					PD.PRODUCTDEFGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '153000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '173000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 17:30 ~ 20:30
			SELECT
					PD.PRODUCTDEFGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '173000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '203000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 20:30 ~ 22:30
			SELECT
					PD.PRODUCTDEFGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '203000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '223000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 22:30 ~ 00:30
			SELECT
					PD.PRODUCTDEFGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '223000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '003000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 00:30 ~ 03:30
			SELECT
					PD.PRODUCTDEFGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '003000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '033000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 03:30 ~ 05:30
			SELECT
					PD.PRODUCTDEFGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '033000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '053000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>
					
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 05:30 ~ 08:30
			SELECT
					PD.PRODUCTDEFGROUPNAME
				,   BP.PROCESSSEGMENTNAME
				,   BP.PROCESSSEGMENTID 
				,   BP.PROCESSSEGMENTVERSION					
				,	0			    AS D1_BASEPANELQTY
				,	0           	AS BASEPANELQTY
				,   0				AS  WIPPANELQTY
				,   0				AS  D2_SENDPANELQTY
				,   0				AS  D1_SENDPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '053000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '083000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 제품군그룹
				<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
					AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			) LWR
            LEFT OUTER JOIN MFM_PROCESSSEGMENT SSG 	ON LWR.PROCESSSEGMENTID = SSG.PROCESSSEGMENTID
                                                   AND LWR.PRODUCTDEFGROUPNAME = SSG.PRODUCTDEFGROUPNAME
                                                   AND SSG.VALIDSTATE = 'Valid'
			GROUP BY 
						   LWR.PROCESSSEGMENTNAME
						,   LWR.PROCESSSEGMENTID 		
	   ) B	
	   WHERE 1 = 1
	      AND A.PROCESSSEGMENTID      = B.PROCESSSEGMENTID(+)
	  ORDER BY NVL(TO_NUMBER(B.SORT), TO_NUMBER(A.USERSEQUENCE))
	</select>
		

    <!--
		설		명	: 품목별 주요공정 상세 조회
		생	성	자	: 김성현
		생	성	일	: 2021. 05. 24 
		수  정   이  력	:
	-->
	<select id="selectItemGrpProductdefDetailList" parameterType="map" resultType="hashmap">
		-- selectItemGrpProductdefDetailList
		SELECT
				WR.AREAID                              AS AREAID
			,   DC2.DICTIONARYNAME				AS AREANAME  
			,   DC1.DICTIONARYNAME				AS PROCESSSEGMENTNAME  -- 공정명
			,   WR.PRODUCTDEFID                    AS PRODUCTDEFID
			,   WR.PRODUCTDEFNAME               AS PRODUCTDEFNAME
			,   SUM(WR.WIPPANELQTY)				AS  WIPPANELQTY
			,   SUM(WR.SENDPANELQTY)		        AS  SENDPANELQTY
			,   SUM(WR.T08_SENDPANELQTY)		AS  T08_SENDPANELQTY
			,   SUM(WR.T10_SENDPANELQTY)		AS  T10_SENDPANELQTY
			,   SUM(WR.T12_SENDPANELQTY)		AS  T12_SENDPANELQTY
			,   SUM(WR.T15_SENDPANELQTY)		AS  T15_SENDPANELQTY
			,   SUM(WR.T17_SENDPANELQTY)		AS  T17_SENDPANELQTY
			,   SUM(WR.T20_SENDPANELQTY)		AS  T20_SENDPANELQTY
			,   SUM(WR.T22_SENDPANELQTY)		AS  T22_SENDPANELQTY
			,   SUM(WR.T00_SENDPANELQTY)		AS  T00_SENDPANELQTY
			,   SUM(WR.T03_SENDPANELQTY)		AS  T03_SENDPANELQTY
			,   SUM(WR.T05_SENDPANELQTY)		AS  T05_SENDPANELQTY
		FROM
		(
			-- 재공
			SELECT  
					PD.PRODUCTDEFCLASSGROUPNAME
				,   L.AREAID
				,   BP.PROCESSSEGMENTNAME
				,   PD.PRODUCTDEFID
				,   PT.PRODUCTDEFNAME
				,   L.PANELQTY				         	AS WIPPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM    PCM_LOT    L			
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	L.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	L.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION	                                 
			INNER JOIN MFM_WORKDONEPRODUCTREL 	PD  ON  L.PRODUCTDEFID = PD.PRODUCTDEFID
													AND L.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION    
													AND PD.VALIDSTATE = 'Valid'
			INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	L.PRODUCTDEFID = PT.PRODUCTDEFID
														AND	L.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION									                                
			WHERE   1 = 1
			AND     L.LOTSTATE IN ('InProduction', 'InTransit')
			AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
			AND     COALESCE(L.ISHOLD, 'N') = 'N'
			AND		COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				-- 공정명
				<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
					AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
				</if> 
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
				
			UNION ALL
			-- 실적
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   LWR.AREAID
				,   BP.PROCESSSEGMENTNAME
				,   PD.PRODUCTDEFID
				,   PT.PRODUCTDEFNAME
				,   0				AS  WIPPANELQTY
				,	LWR.SENDPANELQTY		AS SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
														AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION														
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT},1,8) || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS') 
				</if>
				-- 공정명
				<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
					AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>		
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
			UNION ALL
			-- 실적 08:30 ~ 10:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   LWR.AREAID
				,   BP.PROCESSSEGMENTNAME
				,   PD.PRODUCTDEFID
				,   PT.PRODUCTDEFNAME
				,   0				AS  WIPPANELQTY
				,   0				AS  SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
														AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION														
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '083000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '103000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 공정명
				<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
					AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>		
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
		    UNION ALL
			-- 실적 10:30 ~ 12:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   LWR.AREAID
				,   BP.PROCESSSEGMENTNAME
				,   PD.PRODUCTDEFID
				,   PT.PRODUCTDEFNAME
				,   0				AS  WIPPANELQTY
				,   0				AS  SENDPANELQTY
				,	0		        AS T08_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
														AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION														
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '103000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '123000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 공정명
				<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
					AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>		
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
					
			UNION ALL
			-- 실적 12:30 ~ 15:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   LWR.AREAID
				,   BP.PROCESSSEGMENTNAME
				,   PD.PRODUCTDEFID
				,   PT.PRODUCTDEFNAME
				,   0				AS  WIPPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
														AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION														
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '123000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '153000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 공정명
				<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
					AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>		
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 15:30 ~ 17:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   LWR.AREAID
				,   BP.PROCESSSEGMENTNAME
				,   PD.PRODUCTDEFID
				,   PT.PRODUCTDEFNAME
				,   0				AS  WIPPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
														AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION														
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '153000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '173000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 공정명
				<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
					AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>			
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 17:30 ~ 20:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   LWR.AREAID
				,   BP.PROCESSSEGMENTNAME
				,   PD.PRODUCTDEFID
				,   PT.PRODUCTDEFNAME
				,   0				AS  WIPPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
														AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION														
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '173000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '203000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 공정명
				<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
					AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>		
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 20:30 ~ 22:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   LWR.AREAID
				,   BP.PROCESSSEGMENTNAME
				,   PD.PRODUCTDEFID
				,   PT.PRODUCTDEFNAME
				,   0				AS  WIPPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
														AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION														
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '203000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '223000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 공정명
				<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
					AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>	
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
						
			UNION ALL
			-- 실적 22:30 ~ 00:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   LWR.AREAID
				,   BP.PROCESSSEGMENTNAME
				,   PD.PRODUCTDEFID
				,   PT.PRODUCTDEFNAME
				,   0				AS  WIPPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
														AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION														
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '223000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '003000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 공정명
				<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
					AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>		
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
					
			UNION ALL
			-- 실적 00:30 ~ 03:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   LWR.AREAID
				,   BP.PROCESSSEGMENTNAME
				,   PD.PRODUCTDEFID
				,   PT.PRODUCTDEFNAME
				,   0				AS  WIPPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
														AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION														
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '003000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '033000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 공정명
				<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
					AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>	
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
						
			UNION ALL
			-- 실적 03:30 ~ 05:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   LWR.AREAID
				,   BP.PROCESSSEGMENTNAME
				,   PD.PRODUCTDEFID
				,   PT.PRODUCTDEFNAME
				,   0				AS  WIPPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T03_SENDPANELQTY
				,   0				AS  T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
														AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION														
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '033000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '053000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 공정명
				<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
					AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>		
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
			UNION ALL
			-- 실적 05:30 ~ 08:30
			SELECT
					PD.PRODUCTDEFCLASSGROUPNAME
				,   LWR.AREAID
				,   BP.PROCESSSEGMENTNAME
				,   PD.PRODUCTDEFID
				,   PT.PRODUCTDEFNAME
				,   0				AS  WIPPANELQTY
				,   0				AS  SENDPANELQTY
				,   0				AS  T08_SENDPANELQTY
				,   0				AS  T10_SENDPANELQTY
				,   0				AS  T12_SENDPANELQTY
				,   0				AS  T15_SENDPANELQTY
				,   0				AS  T17_SENDPANELQTY
				,   0				AS  T20_SENDPANELQTY
				,   0				AS  T22_SENDPANELQTY
				,   0				AS  T00_SENDPANELQTY
				,   0				AS  T03_SENDPANELQTY
				,	LWR.SENDPANELQTY		AS T05_SENDPANELQTY
			FROM	PCM_LOTWORKRESULT LWR
			INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
															AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
			INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
													AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
													AND PD.VALIDSTATE = 'Valid'
			INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
														AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION														
			LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
			WHERE 1=1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
				AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
				AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
				<if test="STANDARD_DT != null and STANDARD_DT !='' ">
					AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '053000', 'YYYYMMDDHH24MISS') 
					AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '083000', 'YYYYMMDDHH24MISS') 
				</if>
				-- 공정명
				<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
					AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
				</if>
				--품목그룹
				<if test="PRODUCTDEFCLASSGROUPNAME != null and PRODUCTDEFCLASSGROUPNAME !=''">
					AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFCLASSGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFCLASSGROUPNAME LIKE LMP.VALUE)	 
				</if>
				
					-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (품목그룹만)
					--AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
					AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
					-----------------------------------------------
				
		) WR

		LEFT OUTER JOIN	BAS_AREA			BA	ON	WR.AREAID = BA.AREAID    
		LEFT OUTER JOIN	CMD_DICTIONARY			DC1	ON	WR.PROCESSSEGMENTNAME = DC1.DICTIONARYID
													AND	DC1.LANGUAGETYPE = #{LANGUAGETYPE}	
		LEFT OUTER JOIN	CMD_DICTIONARY			DC2	ON	BA.AREANAME = DC2.DICTIONARYID
													AND	DC2.LANGUAGETYPE = #{LANGUAGETYPE}																										              	
	   GROUP BY 
	   			WR.AREAID
			,   DC2.DICTIONARYNAME				
			,   DC1.DICTIONARYNAME				
			,   WR.PRODUCTDEFID
			,   WR.PRODUCTDEFNAME             
	   ORDER BY 
	   			WR.AREAID
			,   DC2.DICTIONARYNAME				
			,   DC1.DICTIONARYNAME				
			,   WR.PRODUCTDEFID
			,   WR.PRODUCTDEFNAME  
	</select>

		
    <!--
		설		명	: 제품군별 주요공정 상세 조회
		생	성	자	: 김성현
		생	성	일	: 2021. 05. 24 
		수  정   이  력	:
	-->
	<select id="selectProductGrpProductdefDetailList" parameterType="map" resultType="hashmap">
	-- selectProductGrpProductdefDetailList
			SELECT
				   
					WR.AREAID								AS AREAID
				,   DC2.DICTIONARYNAME				AS AREANAME  
				,   DC1.DICTIONARYNAME				AS PROCESSSEGMENTNAME  -- 공정명
				,   WR.PRODUCTDEFID						AS PRODUCTDEFID
				,   WR.PRODUCTDEFNAME               AS PRODUCTDEFNAME
				,   SUM(WR.WIPPANELQTY)				AS  WIPPANELQTY
				,   SUM(WR.SENDPANELQTY)		        AS  SENDPANELQTY
				,   SUM(WR.T08_SENDPANELQTY)		AS  T08_SENDPANELQTY
				,   SUM(WR.T10_SENDPANELQTY)		AS  T10_SENDPANELQTY
				,   SUM(WR.T12_SENDPANELQTY)		AS  T12_SENDPANELQTY
				,   SUM(WR.T15_SENDPANELQTY)		AS  T15_SENDPANELQTY
				,   SUM(WR.T17_SENDPANELQTY)		AS  T17_SENDPANELQTY
				,   SUM(WR.T20_SENDPANELQTY)		AS  T20_SENDPANELQTY
				,   SUM(WR.T22_SENDPANELQTY)		AS  T22_SENDPANELQTY
				,   SUM(WR.T00_SENDPANELQTY)		AS  T00_SENDPANELQTY
				,   SUM(WR.T03_SENDPANELQTY)		AS  T03_SENDPANELQTY
				,   SUM(WR.T05_SENDPANELQTY)		AS  T05_SENDPANELQTY
			FROM
			(
				-- 재공
				SELECT  
						PD.PRODUCTDEFGROUPNAME
					,   L.AREAID
					,   BP.PROCESSSEGMENTNAME
					,   PD.PRODUCTDEFID
					,   PT.PRODUCTDEFNAME                 
					,   L.PANELQTY				         	AS WIPPANELQTY
					,   0				AS  SENDPANELQTY
					,   0				AS  T08_SENDPANELQTY
					,   0				AS  T10_SENDPANELQTY
					,   0				AS  T12_SENDPANELQTY
					,   0				AS  T15_SENDPANELQTY
					,   0				AS  T17_SENDPANELQTY
					,   0				AS  T20_SENDPANELQTY
					,   0				AS  T22_SENDPANELQTY
					,   0				AS  T00_SENDPANELQTY
					,   0				AS  T03_SENDPANELQTY
					,   0				AS  T05_SENDPANELQTY
				FROM    PCM_LOT                  	L            
				INNER JOIN BAS_PROCESSSEGMENT		BP	ON	L.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
																AND	L.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION			
				INNER JOIN MFM_WORKDONEPRODUCTREL 	PD  ON  L.PRODUCTDEFID = PD.PRODUCTDEFID
														AND L.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION     
														AND PD.VALIDSTATE = 'Valid'
				INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	L.PRODUCTDEFID = PT.PRODUCTDEFID
															AND	L.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION															                               
				WHERE   1 = 1
				AND     L.LOTSTATE IN ('InProduction', 'InTransit')
				AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
				AND     COALESCE(L.ISHOLD, 'N') = 'N'
				AND	  COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
					-- 공정명
					<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
						AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
					</if>               
					-- 제품군그룹
					<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
						AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
					</if>		
					
						-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
						AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
						--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
						-----------------------------------------------
						
				UNION ALL
				-- 실적
				SELECT
						PD.PRODUCTDEFGROUPNAME
					,   LWR.AREAID
					,   BP.PROCESSSEGMENTNAME
					,   PD.PRODUCTDEFID
					,   PT.PRODUCTDEFNAME                 
					,   0				AS  WIPPANELQTY
					,	LWR.SENDPANELQTY		AS SENDPANELQTY
					,   0				AS  T08_SENDPANELQTY
					,   0				AS  T10_SENDPANELQTY
					,   0				AS  T12_SENDPANELQTY
					,   0				AS  T15_SENDPANELQTY
					,   0				AS  T17_SENDPANELQTY
					,   0				AS  T20_SENDPANELQTY
					,   0				AS  T22_SENDPANELQTY
					,   0				AS  T00_SENDPANELQTY
					,   0				AS  T03_SENDPANELQTY
					,   0				AS  T05_SENDPANELQTY                
				FROM	PCM_LOTWORKRESULT LWR        
				INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
																AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
				INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
														AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
														AND PD.VALIDSTATE = 'Valid'
				INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
															AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION															
				LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
				WHERE 1=1
					AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
					AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
					AND     COALESCE(L.ISHOLD, 'N') = 'N'
					AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
					AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
					AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
				
					<if test="STANDARD_DT != null and STANDARD_DT !='' ">
						AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT},1,8) || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS')
						AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYY-MM-DD') || ' ' || PCM_SHIFTTIME_FN(L.PLANTID), 'YYYY-MM-DD HH24:MI:SS') 
					</if>
					-- 공정명
					<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
						AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
					</if>   
					-- 제품군그룹
					<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
						AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
					</if>		
					
						-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
						AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
						--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
						-----------------------------------------------
						
				UNION ALL
				-- 실적 08:30 ~ 10:30
				SELECT
						PD.PRODUCTDEFGROUPNAME
					,   LWR.AREAID
					,   BP.PROCESSSEGMENTNAME
					,   PD.PRODUCTDEFID
					,   PT.PRODUCTDEFNAME                 
					,   0				AS  WIPPANELQTY
					,   0				AS  SENDPANELQTY
					,	LWR.SENDPANELQTY		AS T08_SENDPANELQTY
					,   0				AS  T10_SENDPANELQTY
					,   0				AS  T12_SENDPANELQTY
					,   0				AS  T15_SENDPANELQTY
					,   0				AS  T17_SENDPANELQTY
					,   0				AS  T20_SENDPANELQTY
					,   0				AS  T22_SENDPANELQTY
					,   0				AS  T00_SENDPANELQTY
					,   0				AS  T03_SENDPANELQTY
					,   0				AS  T05_SENDPANELQTY                
				FROM	PCM_LOTWORKRESULT LWR         
				INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
																AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
				INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
														AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
														AND PD.VALIDSTATE = 'Valid'
				INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
															AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION															
				LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
				WHERE 1=1
					AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
					AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
					AND     COALESCE(L.ISHOLD, 'N') = 'N'
					AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
					AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
					AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
					
					<if test="STANDARD_DT != null and STANDARD_DT !='' ">
						AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '083000', 'YYYYMMDDHH24MISS') 
						AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '103000', 'YYYYMMDDHH24MISS') 
					</if>
					-- 공정명
					<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
						AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
					</if>   
					
					-- 제품군그룹
					<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
						AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
					</if>			
					
						-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
						AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
						--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
						-----------------------------------------------
								   
				UNION ALL
				-- 실적 10:30 ~ 12:30
				SELECT
						PD.PRODUCTDEFGROUPNAME
					,   LWR.AREAID
					,   BP.PROCESSSEGMENTNAME
					,   PD.PRODUCTDEFID
					,   PT.PRODUCTDEFNAME                 
					,   0				AS  WIPPANELQTY
					,   0				AS  SENDPANELQTY
					,	0		        AS T08_SENDPANELQTY
					,	LWR.SENDPANELQTY		AS T10_SENDPANELQTY
					,   0				AS  T12_SENDPANELQTY
					,   0				AS  T15_SENDPANELQTY
					,   0				AS  T17_SENDPANELQTY
					,   0				AS  T20_SENDPANELQTY
					,   0				AS  T22_SENDPANELQTY
					,   0				AS  T00_SENDPANELQTY
					,   0				AS  T03_SENDPANELQTY
					,   0				AS  T05_SENDPANELQTY                
				FROM	PCM_LOTWORKRESULT LWR       
				INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
																AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
				INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
														AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
														AND PD.VALIDSTATE = 'Valid'
				INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
															AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION																
				LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
				WHERE 1=1
					AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
					AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
					AND     COALESCE(L.ISHOLD, 'N') = 'N'
					AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
					AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
					AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
					
					<if test="STANDARD_DT != null and STANDARD_DT !='' ">
						AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '103000', 'YYYYMMDDHH24MISS') 
						AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '123000', 'YYYYMMDDHH24MISS') 
					</if>
					-- 공정명
					<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
						AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
					</if>   				
					-- 제품군그룹
					<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
						AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
					</if>		
					
						-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
						AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
						--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
						-----------------------------------------------
								   
				UNION ALL
				-- 실적 12:30 ~ 15:30
				SELECT
						PD.PRODUCTDEFGROUPNAME
					,   LWR.AREAID
					,   BP.PROCESSSEGMENTNAME
					,   PD.PRODUCTDEFID
					,   PT.PRODUCTDEFNAME                 
					,   0				AS  WIPPANELQTY
					,   0				AS  SENDPANELQTY
					,   0				AS  T08_SENDPANELQTY
					,   0				AS  T10_SENDPANELQTY
					,	LWR.SENDPANELQTY		AS T12_SENDPANELQTY
					,   0				AS  T15_SENDPANELQTY
					,   0				AS  T17_SENDPANELQTY
					,   0				AS  T20_SENDPANELQTY
					,   0				AS  T22_SENDPANELQTY
					,   0				AS  T00_SENDPANELQTY
					,   0				AS  T03_SENDPANELQTY
					,   0				AS  T05_SENDPANELQTY                
				FROM	PCM_LOTWORKRESULT LWR            
				INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
																AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
				INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
														AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
														AND PD.VALIDSTATE = 'Valid'
				INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
															AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION															
				LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
				WHERE 1=1
					AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
					AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
					AND     COALESCE(L.ISHOLD, 'N') = 'N'
					AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
					AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
					AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
					
					<if test="STANDARD_DT != null and STANDARD_DT !='' ">
						AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '123000', 'YYYYMMDDHH24MISS') 
						AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '153000', 'YYYYMMDDHH24MISS') 
					</if>
					-- 공정명
					<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
						AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
					</if>   				
					-- 제품군그룹
					<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
						AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
					</if>					
					
						-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
						AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
						--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
						-----------------------------------------------
					 
				UNION ALL
				-- 실적 15:30 ~ 17:30
				SELECT
						PD.PRODUCTDEFGROUPNAME
					,   LWR.AREAID
					,   BP.PROCESSSEGMENTNAME
					,   PD.PRODUCTDEFID
					,   PT.PRODUCTDEFNAME                 
					,   0				AS  WIPPANELQTY
					,   0				AS  SENDPANELQTY
					,   0				AS  T08_SENDPANELQTY
					,   0				AS  T10_SENDPANELQTY
					,   0				AS  T12_SENDPANELQTY
					,	LWR.SENDPANELQTY		AS T15_SENDPANELQTY
					,   0				AS  T17_SENDPANELQTY
					,   0				AS  T20_SENDPANELQTY
					,   0				AS  T22_SENDPANELQTY
					,   0				AS  T00_SENDPANELQTY
					,   0				AS  T03_SENDPANELQTY
					,   0				AS  T05_SENDPANELQTY                
				FROM	PCM_LOTWORKRESULT LWR         
				INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
																AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
				INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
														AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
														AND PD.VALIDSTATE = 'Valid'
				INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
															AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION															
				LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
				WHERE 1=1
					AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
					AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
					AND     COALESCE(L.ISHOLD, 'N') = 'N'
					AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
					AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
					AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
					
					<if test="STANDARD_DT != null and STANDARD_DT !='' ">
						AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '153000', 'YYYYMMDDHH24MISS') 
						AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '173000', 'YYYYMMDDHH24MISS') 
					</if>
					-- 공정명
					<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
						AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
					</if>   				
					-- 제품군그룹
					<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
						AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
					</if>		
					
						-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
						AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
						--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
						-----------------------------------------------
									  
				UNION ALL
				-- 실적 17:30 ~ 20:30
				SELECT
						PD.PRODUCTDEFGROUPNAME
					,   LWR.AREAID
					,   BP.PROCESSSEGMENTNAME
					,   PD.PRODUCTDEFID
					,   PT.PRODUCTDEFNAME                 
					,   0				AS  WIPPANELQTY
					,   0				AS  SENDPANELQTY
					,   0				AS  T08_SENDPANELQTY
					,   0				AS  T10_SENDPANELQTY
					,   0				AS  T12_SENDPANELQTY
					,   0				AS  T15_SENDPANELQTY
					,	LWR.SENDPANELQTY		AS T17_SENDPANELQTY
					,   0				AS  T20_SENDPANELQTY
					,   0				AS  T22_SENDPANELQTY
					,   0				AS  T00_SENDPANELQTY
					,   0				AS  T03_SENDPANELQTY
					,   0				AS  T05_SENDPANELQTY                
				FROM	PCM_LOTWORKRESULT LWR          
				INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
																AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
				INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
														AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
														AND PD.VALIDSTATE = 'Valid'
				INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
															AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION															
				LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
				WHERE 1=1
					AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
					AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
					AND     COALESCE(L.ISHOLD, 'N') = 'N'
					AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
					AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
					AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
					
					<if test="STANDARD_DT != null and STANDARD_DT !='' ">
						AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '173000', 'YYYYMMDDHH24MISS') 
						AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '203000', 'YYYYMMDDHH24MISS') 
					</if>
					-- 공정명
					<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
						AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
					</if>   				
					-- 제품군그룹
					<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
						AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
					</if>	
					
						-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
						AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
						--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
						-----------------------------------------------
									   
				UNION ALL
				-- 실적 20:30 ~ 22:30
				SELECT
						PD.PRODUCTDEFGROUPNAME
					,   LWR.AREAID
					,   BP.PROCESSSEGMENTNAME
					,   PD.PRODUCTDEFID
					,   PT.PRODUCTDEFNAME                 
					,   0				AS  WIPPANELQTY
					,   0				AS  SENDPANELQTY
					,   0				AS  T08_SENDPANELQTY
					,   0				AS  T10_SENDPANELQTY
					,   0				AS  T12_SENDPANELQTY
					,   0				AS  T15_SENDPANELQTY
					,   0				AS  T17_SENDPANELQTY
					,	LWR.SENDPANELQTY		AS T20_SENDPANELQTY
					,   0				AS  T22_SENDPANELQTY
					,   0				AS  T00_SENDPANELQTY
					,   0				AS  T03_SENDPANELQTY
					,   0				AS  T05_SENDPANELQTY
				FROM	PCM_LOTWORKRESULT LWR           
				INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
																AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
				INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
														AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
														AND PD.VALIDSTATE = 'Valid'
				INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
															AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION															
				LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
				WHERE 1=1
					AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
					AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
					AND     COALESCE(L.ISHOLD, 'N') = 'N'
					AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
					AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
					AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
					
					<if test="STANDARD_DT != null and STANDARD_DT !='' ">
						AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '203000', 'YYYYMMDDHH24MISS') 
						AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '223000', 'YYYYMMDDHH24MISS') 
					</if>			 
					-- 공정명
					<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
						AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
					</if>   				
					-- 제품군그룹
					<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
						AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
					</if>		
					
						-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
						AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
						--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
						-----------------------------------------------
								  
				UNION ALL
				-- 실적 22:30 ~ 00:30
				SELECT
						PD.PRODUCTDEFGROUPNAME
					,   LWR.AREAID
					,   BP.PROCESSSEGMENTNAME
					,   PD.PRODUCTDEFID
					,   PT.PRODUCTDEFNAME                 
					,   0				AS  WIPPANELQTY
					,   0				AS  SENDPANELQTY
					,   0				AS  T08_SENDPANELQTY
					,   0				AS  T10_SENDPANELQTY
					,   0				AS  T12_SENDPANELQTY
					,   0				AS  T15_SENDPANELQTY
					,   0				AS  T17_SENDPANELQTY
					,   0				AS  T20_SENDPANELQTY
					,	LWR.SENDPANELQTY		AS T22_SENDPANELQTY
					,   0				AS  T00_SENDPANELQTY
					,   0				AS  T03_SENDPANELQTY
					,   0				AS  T05_SENDPANELQTY                
				FROM	PCM_LOTWORKRESULT LWR         
				INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
																AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
				INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
														AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
														AND PD.VALIDSTATE = 'Valid'
				INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
															AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION															
				LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
				WHERE 1=1
					AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
					AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
					AND     COALESCE(L.ISHOLD, 'N') = 'N'
					AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
					AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
					AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
					
					<if test="STANDARD_DT != null and STANDARD_DT !='' ">
						AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(SUBSTR(#{STANDARD_DT}, 1, 8) || '223000', 'YYYYMMDDHH24MISS') 
						AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '003000', 'YYYYMMDDHH24MISS') 
					</if>
					-- 공정명
					<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
						AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
					</if>   				
					-- 제품군그룹
					<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
						AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
					</if>	
					
						-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
						AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
						--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
						-----------------------------------------------
									   
				UNION ALL
				-- 실적 00:30 ~ 03:30
				SELECT
						PD.PRODUCTDEFGROUPNAME
					,   LWR.AREAID
					,   BP.PROCESSSEGMENTNAME
					,   PD.PRODUCTDEFID
					,   PT.PRODUCTDEFNAME                 
					,   0				AS  WIPPANELQTY
					,   0				AS  SENDPANELQTY
					,   0				AS  T08_SENDPANELQTY
					,   0				AS  T10_SENDPANELQTY
					,   0				AS  T12_SENDPANELQTY
					,   0				AS  T15_SENDPANELQTY
					,   0				AS  T17_SENDPANELQTY
					,   0				AS  T20_SENDPANELQTY
					,   0				AS  T22_SENDPANELQTY
					,	LWR.SENDPANELQTY		AS T00_SENDPANELQTY
					,   0				AS  T03_SENDPANELQTY
					,   0				AS  T05_SENDPANELQTY                
				FROM	PCM_LOTWORKRESULT LWR         
				INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
																AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
				INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
														AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
														AND PD.VALIDSTATE = 'Valid'
				INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
															AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION															
				LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
				WHERE 1=1
					AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
					AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
					AND     COALESCE(L.ISHOLD, 'N') = 'N'
					AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
					AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
					AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
					
					<if test="STANDARD_DT != null and STANDARD_DT !='' ">
						AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '003000', 'YYYYMMDDHH24MISS') 
						AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '033000', 'YYYYMMDDHH24MISS') 
					</if>
					-- 공정명
					<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
						AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
					</if>   				
					-- 제품군그룹
					<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
						AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
					</if>		
					
						-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
						AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
						--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
						-----------------------------------------------
								 
				UNION ALL
				-- 실적 03:30 ~ 05:30
				SELECT
						PD.PRODUCTDEFGROUPNAME
					,   LWR.AREAID
					,   BP.PROCESSSEGMENTNAME
					,   PD.PRODUCTDEFID
					,   PT.PRODUCTDEFNAME                 
					,   0				AS  WIPPANELQTY
					,   0				AS  SENDPANELQTY
					,   0				AS  T08_SENDPANELQTY
					,   0				AS  T10_SENDPANELQTY
					,   0				AS  T12_SENDPANELQTY
					,   0				AS  T15_SENDPANELQTY
					,   0				AS  T17_SENDPANELQTY
					,   0				AS  T20_SENDPANELQTY
					,   0				AS  T22_SENDPANELQTY
					,   0				AS  T00_SENDPANELQTY
					,	LWR.SENDPANELQTY		AS T03_SENDPANELQTY
					,   0				AS  T05_SENDPANELQTY                
				FROM	PCM_LOTWORKRESULT LWR           
				INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
																AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
				INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
														AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
														AND PD.VALIDSTATE = 'Valid'
				INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
															AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION															
				LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
				WHERE 1=1
					AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
					AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
					AND     COALESCE(L.ISHOLD, 'N') = 'N'
					AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
					AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
					AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
					
					<if test="STANDARD_DT != null and STANDARD_DT !='' ">
						AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '033000', 'YYYYMMDDHH24MISS') 
						AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '053000', 'YYYYMMDDHH24MISS') 
					</if> 
					-- 공정명
					<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
						AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
					</if>   
					-- 제품군그룹
					<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
						AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
					</if>		
					
						-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
						AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
						--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
						-----------------------------------------------
									  
				UNION ALL
				-- 실적 05:30 ~ 08:30
				SELECT
						PD.PRODUCTDEFGROUPNAME
					,   LWR.AREAID
					,   BP.PROCESSSEGMENTNAME
					,   PD.PRODUCTDEFID
					,   PT.PRODUCTDEFNAME                 
					,   0				AS  WIPPANELQTY
					,   0				AS  SENDPANELQTY
					,   0				AS  T08_SENDPANELQTY
					,   0				AS  T10_SENDPANELQTY
					,   0				AS  T12_SENDPANELQTY
					,   0				AS  T15_SENDPANELQTY
					,   0				AS  T17_SENDPANELQTY
					,   0				AS  T20_SENDPANELQTY
					,   0				AS  T22_SENDPANELQTY
					,   0				AS  T00_SENDPANELQTY
					,   0				AS  T03_SENDPANELQTY
					,	LWR.SENDPANELQTY		AS T05_SENDPANELQTY                
				FROM	PCM_LOTWORKRESULT LWR          
				INNER JOIN BAS_PROCESSSEGMENT		BP	ON	LWR.PROCESSSEGMENTID = BP.PROCESSSEGMENTID
																AND	LWR.PROCESSSEGMENTVERSION = BP.PROCESSSEGMENTVERSION
				INNER JOIN	MFM_WORKDONEPRODUCTREL     PD  ON  LWR.PRODUCTDEFID = PD.PRODUCTDEFID
														AND LWR.PRODUCTDEFVERSION = PD.PRODUCTDEFVERSION
														AND PD.VALIDSTATE = 'Valid'
				INNER JOIN BAS_PRODUCTDEFINITION		PT	ON	LWR.PRODUCTDEFID = PT.PRODUCTDEFID
															AND	LWR.PRODUCTDEFVERSION = PT.PRODUCTDEFVERSION															
				LEFT OUTER JOIN PCM_LOT				 L 	ON LWR.LOTID = L.LOTID
				WHERE 1=1
					AND     L.LOTSTATE IN ('InProduction', 'InTransit', 'Finished')
					AND     COALESCE(L.ISDEFECTED, 'N') = 'N'
					AND     COALESCE(L.ISHOLD, 'N') = 'N'
					AND	   COALESCE(L.LOTCREATEDTYPE, ' ') <![CDATA[<>]]> 'Return'
					AND	   COALESCE(LWR.RESULTTYPE, 'NORMAL')	NOT IN ('SKIP')
					AND	   LWR.SENDPCSQTY <![CDATA[>]]> 0	
					
					<if test="STANDARD_DT != null and STANDARD_DT !='' ">
						AND LWR.SENDTIME <![CDATA[>=]]> TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '053000', 'YYYYMMDDHH24MISS') 
						AND LWR.SENDTIME <![CDATA[<]]>  TO_TIMESTAMP(TO_CHAR(TO_DATE(SUBSTR(#{STANDARD_DT},1,8), 'YYYYMMDD') + 1, 'YYYYMMDD') || '083000', 'YYYYMMDDHH24MISS') 
					</if>
					-- 공정명
					<if test="PROCESSSEGMENTID != null and PROCESSSEGMENTID !=''">
						AND BP.PROCESSSEGMENTID = #{PROCESSSEGMENTID}
					</if>   				
					-- 제품군그룹
					<if test="PRODUCTDEFGROUPNAME != null and PRODUCTDEFGROUPNAME !=''">
						AND EXISTS (SELECT 1 FROM UFN_SELECTSTRINGTOSPLIT(#{PRODUCTDEFGROUPNAME}, ',')	LMP WHERE PD.PRODUCTDEFGROUPNAME LIKE LMP.VALUE)	
					</if>	
					
						-----------------------------------------------[추가](21.07.26) 제품구룹, 품목그룹  (제품그룹만)
						AND PD.PRODUCTDEFGROUPNAME IS NOT NULL						-- 제품그룹
						--AND PD.PRODUCTDEFCLASSGROUPNAME IS NOT NULL         	-- 품목그룹  
						-----------------------------------------------
									   
			) WR
			LEFT OUTER JOIN	BAS_AREA			BA	ON	WR.AREAID = BA.AREAID    
			LEFT OUTER JOIN	CMD_DICTIONARY			DC1	ON	WR.PROCESSSEGMENTNAME = DC1.DICTIONARYID
														AND	DC1.LANGUAGETYPE = #{LANGUAGETYPE}                                                  
			LEFT OUTER JOIN	CMD_DICTIONARY			DC2	ON	BA.AREANAME = DC2.DICTIONARYID
														AND	DC2.LANGUAGETYPE = #{LANGUAGETYPE}																										             	
	   GROUP BY 
	   			WR.AREAID
			,   DC2.DICTIONARYNAME				
			,   DC1.DICTIONARYNAME				
			,   WR.PRODUCTDEFID
			,   WR.PRODUCTDEFNAME             
	   ORDER BY 
	   			WR.AREAID
			,   DC2.DICTIONARYNAME				
			,   DC1.DICTIONARYNAME				
			,   WR.PRODUCTDEFID
			,   WR.PRODUCTDEFNAME 
	</select>
		

</mapper>
