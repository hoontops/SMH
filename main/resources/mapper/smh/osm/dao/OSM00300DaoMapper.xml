<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    파일명       : Claim공정별 기준금액
    설명          : Claim공정별 기준금액
    작성자       : 진성하
    최초작성일 : 2021.04.10
<< 개정이력(Modification Information) >>
      수정일              수정자      수정내용
     2021.04.10      진성하     최초  생성
     2021.06.23		김진현	 공장, 마감여부 수정 
-->

<mapper namespace="smh.osm.dao.OSM00300Dao">
    <select id="GetOutsourcedClaimPeriodConfirmation" parameterType="map"  resultType="hashmap">
	/* "smh.osm.dao.OSM00300Dao.GetOutsourcedClaimPeriodConfirmation"  */
	SELECT 
			CASE WHEN COALESCE(OCM.VALIDSTATE,'Invalid') =  'Valid'   THEN 'Y' 
			     ELSE 'N' END                   AS CLAIMYN                  -- 마감포함
		,	'LOTCLAIMDEFECT'                    AS WORKGUBUN
		,	'DefectScrap'                       AS CLAIMTYPE                -- Claim유형
		,	QDR.TXNHISTKEY                      AS LOTHISTKEY
		,	QDR.DEFINETIME                                                  -- 확정일
		,	SLD.CREATEDTIME                     AS OCCURTIME                 --발생일
		,	0                                   AS CLAIMSEQUENCE
		,	DPS.DICTIONARYNAME                  AS PROCESSSEGMENTNAME        --대공정
		,	DPC.DICTIONARYNAME                  AS PROCESSSEGMENTCLASSNAME   --공정명
		,	DAR.DICTIONARYNAME                  AS REASONAREANAME             --작업장
		,	MVD.VENDORNAME                      AS OSPVENDORNAME              --업체명
		,	SLD.PRODUCTDEFID                                                  --품목코드
		,	SLD.PRODUCTDEFVERSION 
		,	SPD.PRODUCTDEFNAME                                                --품목명
		,	QDR.LOTID                                                         -- LOT NO
		,	SLD.DEFECTCODE                                                    --불량코드
		,	DRC.DICTIONARYNAME                  AS  DEFECTNAME                --불량명
		,	CASE WHEN OCM.LOTID  IS NULL THEN SLD.DEFECTQTY  
		         ELSE OCM.DEFECTQTY    END      AS  DEFECTQTY                 --불량수
		,	CASE WHEN OCM.LOTID  IS NULL THEN PQS.PCSAMOUNT   
		         ELSE OCM.CLAIMPRICE   END      AS CLAIMPRICE                 --불량단가
		,	CASE WHEN OCM.LOTID  IS NULL THEN TRUNC(SLD.DEFECTQTY * PQS.PCSAMOUNT)
		         ELSE TRUNC(OCM.DEFECTAMOUNT) END      AS  DEFECTAMOUNT              --불량금액
		--,	OCM.REDUCEQTY                       AS  OSPREDUCEQTY              --감면수
		,	OCM.REDUCEQTY                       AS  REDUCEQTY              --감면수(21.06.22) 명칭 통일 수정
		,	OCM.REDUCEQTYAMOUNT                                               --수량감면액
		--,	OCM.REDUCERATE                      AS  OSPREDUCERATE             --감면율
		,	OCM.REDUCERATE                      AS  REDUCERATE             --감면율(21.06.22) 몇칭 통일 수정
		,	OCM.REDUCERATEAMOUNT                                              --비율감면액
		,	CASE WHEN OCM.LOTID  IS NULL THEN TRUNC(SLD.DEFECTQTY * PQS.PCSAMOUNT)
		         ELSE TRUNC(OCM.CLAIMAMOUNT) END AS CLAIMAMOUNT                --CLAIM금액
		,	OCM.PROCESSSEGMENTID                                              --발견공정
		,	DPP.DICTIONARYNAME                  AS  FINDPROCESSSEGMENTNAME    --발견공정
		,	URC.USERNAME                        AS  CREATORNAME               --입력자
		,	URC.USERNAME                        AS  DEFINEUSERNAME            --확정자
		,	OCM.DESCRIPTION
		,	SLD.ENTERPRISEID
		,	SLD.PLANTID
		,	SLD.PROCESSPATHID
		,	SLD.PROCESSSEGMENTID
		,	SLD.AREAID
		,	SLD.REASONSEGMENTID
		,	SLD.REASONAREAID
		,	SLD.REASONCONSUMABLELOTID
		,	OCM.PERIODID                  AS PERIODID
		,	COALESCE(PED.PERIODSTATE,'Open')   AS PERIODSTATE
		,	CASE WHEN OCM.PERIODID IS null             THEN 'N' 
			     ELSE 'Y' 
			END AS  ISCLOSE	
		,	PED.PERIODNAME 
		,	OCM.CLOSEUSER
		,	'' as CHK
		,   QDR.TXNHISTKEY
		
		-- (21.07.01) - 품질관리>불량품관리>불량품 현황조회 참조
		,   SLD.QCSEGMENTID||SLD.DEFECTCODE                     		 	AS JOINCODE            -- 불량코드+품질공정 (주석과는 내용 다름 -> 품질공정+불량코드)
        ,   DRC.DICTIONARYNAME||'-'||QSD.DICTIONARYNAME      	 	AS JOINNAME           -- 불량코드명+품질공정명
	FROM       QAM_QCLOTDEFECTRESULT             QDR 
	INNER JOIN PCM_LOTDEFECT                     SLD  ON  SLD.TXNHISTKEY              = QDR.TXNHISTKEY
	                                                 AND SLD.LOTID                   = QDR.LOTID
	LEFT OUTER JOIN PCM_LOTWORKRESULT            SLH  ON  SLH.LOTID                   = SLD.LOTID  
	                                                 AND SLH.TXNHISTKEY              = SLD.TXNHISTKEY 
	LEFT OUTER JOIN PCM_LOT                      SLT  ON  SLT.LOTID                   = SLD.LOTID
	INNER JOIN BAS_PRODUCTDEFINITION             SPD  ON  SPD.PRODUCTDEFID            = SLD.PRODUCTDEFID
	                                                 AND SPD.PRODUCTDEFVERSION       = SLD.PRODUCTDEFVERSION 
	INNER JOIN BAS_AREA                          SAR  ON  SAR.AREAID                  = SLD.REASONAREAID  
	                                                 AND SAR.OWNTYPE         IN (
																					SELECT LOOKUP_CODE 
																					FROM CMD_LOOKUP_VALUES SCD
																					WHERE  SCD.LOOKUP_TYPE = #{PERIODTYPEOSP}
																				) 
	LEFT OUTER JOIN CMD_DICTIONARY               DAR  ON  DAR.DICTIONARYID            = SAR.AREANAME
	                                                 AND DAR.LANGUAGETYPE            = #{SESSION_LANGUAGETYPE}
	LEFT OUTER JOIN BAS_VENDOR                   MVD  ON  MVD.VENDORID                = SAR.VENDORID
	                                                 AND MVD.PLANTID                 = SAR.PLANTID
	LEFT OUTER JOIN BAS_PROCESSSEGMENT           SPS  ON  SPS.PROCESSSEGMENTID        = SLD.REASONSEGMENTID 
	                                                 AND SPS.PROCESSSEGMENTVERSION   = SLD.PROCESSSEGMENTVERSION
	LEFT OUTER JOIN CMD_DICTIONARY               DPS  ON  DPS.DICTIONARYID            = SPS.PROCESSSEGMENTNAME
	                                                 AND DPS.LANGUAGETYPE            = #{SESSION_LANGUAGETYPE}
	LEFT OUTER JOIN BAS_PROCESSSEGMENTCLASS      SPC  ON  SPC.PROCESSSEGMENTCLASSID   = SPS.PROCESSSEGMENTCLASSID 
	LEFT OUTER JOIN CMD_DICTIONARY               DPC  ON  DPC.DICTIONARYID            = SPC.PROCESSSEGMENTCLASSNAME
	                                                 AND DPC.LANGUAGETYPE            = #{SESSION_LANGUAGETYPE}
	LEFT OUTER JOIN BAS_PROCESSSEGMENT           SPP  ON  SPP.PROCESSSEGMENTID        = SLD.PROCESSSEGMENTID 
	                                                 AND SPP.PROCESSSEGMENTVERSION   = SLD.PROCESSSEGMENTVERSION
	LEFT OUTER JOIN CMD_DICTIONARY               DPP  ON  DPP.DICTIONARYID            = SPP.PROCESSSEGMENTNAME
	                                                 AND DPP.LANGUAGETYPE            = #{SESSION_LANGUAGETYPE} 
	LEFT OUTER JOIN BAS_PRODUCTQUOTATIONSEGMENT  PQS  ON  PQS.PRODUCTDEFID            = SLD.PRODUCTDEFID
	                                                 AND PQS.PRODUCTDEFVERSION       = SLD.PRODUCTDEFVERSION
	                                                 AND PQS.PROCESSDEFID            = SPD.PROCESSDEFID
	                                                 AND PQS.PROCESSDEFVERSION       = SPD.PROCESSDEFVERSION
	                                                 AND PQS.PROCESSSEGMENTID        = SLD.PROCESSSEGMENTID 
	                                                 AND PQS.PROCESSSEGMENTVERSION   = SLD.PROCESSSEGMENTVERSION
	                                                 AND PQS.VALIDSTATE              = 'Valid'
	LEFT OUTER JOIN BAS_DEFECTCODE               SDC  ON  SDC.DEFECTCODE              = SLD.DEFECTCODE
	LEFT OUTER JOIN CMD_DICTIONARY               DRC  ON  DRC.DICTIONARYID            = SDC.DICTIONARYID
	                                                 AND DRC.LANGUAGETYPE            =#{SESSION_LANGUAGETYPE}
	LEFT OUTER JOIN OSM_OSPCLAIM                 OCM  ON  OCM.LOTHISTKEY              = QDR.TXNHISTKEY
	                                                 AND OCM.LOTID                   = QDR.LOTID  
	LEFT OUTER JOIN BAS_PERIOD                   PED  ON  PED.ENTERPRISEID            = OCM.ENTERPRISEID
								 	                 AND PED.PLANTID                 = OCM.PLANTID
								 	                 AND PED.PERIODID                = OCM.PERIODID 	
	LEFT OUTER JOIN CMD_USER_V                     URC  ON  URC.USERID                  = SLD.CREATOR 
	LEFT OUTER JOIN CMD_USER_V                     URD  ON  URD.USERID                  = QDR.DEFINEUSER 
	
	
	-- (21.07.01) - 품질관리>불량품관리>불량품 현황조회 참조 (추가)
    LEFT OUTER JOIN QAM_QCSEGMENTDEFINITION   QS   	ON   QS.QCSEGMENTID                 	= SLD.QCSEGMENTID
    LEFT OUTER JOIN CMD_DICTIONARY            QSD  		ON   QSD.DICTIONARYID               	= QS.QCSEGMENTNAME
                                                    						AND  QSD.LANGUAGETYPE               = #{SESSION_LANGUAGETYPE}
	
	WHERE   1=1 
	AND		NOT EXISTS (SELECT 'X'
						FROM	BAS_CONSUMABLEDEFINITION COF
						WHERE	COF.CONSUMABLEDEFID = SLD.REASONCONSUMABLELOTID )
	AND		QDR.STATUS          IN ('Confirm', 'DeadlineComplete')
	AND 	SLD.PLANTID          = #{PLANTID}
	
	<if test="PERIOD_PERIODFR != null and PERIOD_PERIODFR !=''"> 
		AND 	SLD.CREATEDTIME  >= TO_DATE( #{PERIOD_PERIODFR},'YYYYMMDD')
	</if>
	<if test="PERIOD_PERIOTO != null and PERIOD_PERIOTO !=''">
		AND 	SLD.CREATEDTIME <![CDATA[<]]>  TO_DATE( #{PERIOD_PERIOTO},'YYYYMMDD')
	</if>
	<if test="PERIODNAME != null and PERIODNAME !=''"> 
		AND 	PED.PERIODNAME  = #{PERIODNAME}
	</if>
	<if test="FACTORYID != null and FACTORYID !=''"> 
		AND 	SAR.FACTORYID  = #{FACTORYID}
	</if>
	<if test="AREAID != null and AREAID !=''"> 
		AND 	SLD.REASONAREAID  = #{AREAID}
	</if>
	<if test="OSPVENDORID != null and OSPVENDORID !=''"> 
		AND 	SAR.VENDORID  = #{OSPVENDORID}
	</if>
	<if test="OSPVENDORNAME != null and OSPVENDORNAME !=''"> 
		AND 	 MVD.VENDORNAME    LIKE #{OSPVENDORNAME}||'%'
	</if>
	<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''"> 
		AND 	 SLD.PRODUCTDEFID    = #{PRODUCTDEFID}||'%'
	</if>
	<if test="LOTTYPE != null and LOTTYPE !='' and '*'.equals(LOTTYPE)"> 
		AND 	SLT.LOTTYPE  = #{LOTTYPE}
	</if>
	<if test="LOTID != null and LOTID !='' and !'*'.equals(LOTID)"> 
		AND 	QDR.LOTID   = #{LOTID}
	</if>
	<if test="REDUCEYESNO != null and REDUCEYESNO !='' and 'Y'.equals(REDUCEYESNO)"> 
		AND 	OCM.REDUCEQTYAMOUNT + OCM.REDUCERATEAMOUNT   > 0
	</if>
	<if test="REDUCEYESNO != null and REDUCEYESNO !='' and 'N'.equals(REDUCEYESNO)"> 
		AND 	OCM.REDUCEQTYAMOUNT + OCM.REDUCERATEAMOUNT    = 0
	</if>
	<if test="CLOSEYESNO != null and CLOSEYESNO !='' and (CLOSEYESNO eq 'Y'.toString())"> 
	
		AND 	OCM.PERIODID IS  NOT null
	</if>
	<if test="CLOSEYESNO != null and CLOSEYESNO !='' and (CLOSEYESNO eq 'N'.toString())"> 
		AND 	OCM.PERIODID IS null
	</if>
	
	UNION ALL
	SELECT 
			CASE WHEN OEA.PERIODID IS NULL THEN 'N'
			     ELSE 'Y' END  AS CLAIMYN--마감포함
		,	'ETCCLAIMAMOUNT'   AS WORKGUBUN
		,	OEA.CLAIMTYPE      AS CLAIMTYPE -- Claim유형
		,	''                 AS TXNHISTKEY
		,	OEA.CLAIMDATE      AS DEFINETIME      -- 확정일
		--  ,	NULL               AS OCCURTIME --발생일
		
		,	OEA.CLAIMDATE               AS OCCURTIME --발생일			(21.06.22) 확정일 = 발생일 기타의 경우
		
		,	OEA.CLAIMSEQUENCE  AS CLAIMSEQUENCE
		,	''                 AS REASONPROCESSSEGMENTNAME       --대공정
		,	''                 AS REASONPROCESSSEGMENTCLASSNAME --공정명
		,	DAC.DICTIONARYNAME AS REASONAREANAME                --작업장
		,	MVD.VENDORNAME     AS VENDORNAME--업체명
		,	OEA.PRODUCTDEFID                      --품목코드
		,	OEA.PRODUCTDEFVERSION 
		,	SPD.PRODUCTDEFNAME  --품목명
		,	OEA.ETCLOTID       AS LOTID 
		,	''                 AS DEFECTCODE--불량코드
		,	''                 AS DEFECTNAME               --불량명
		,	NULL               AS DEFECTQTY--불량수
		,	NULL               AS CLAIMPRICE--불량단가
		,	OEA.AMOUNT         AS DEFECTAMOUNT --불량금액
		,	NULL               AS REDUCEQTY  --감면수
		,	NULL               AS REDUCEQTYAMOUNT --수량감면액
		,	NULL               AS REDUCERATE --감면율
		,	NULL               AS REDUCERATEAMOUNT --비율감면액
		,	OEA.AMOUNT         AS CLAIMAMOUNT    --CLAIM금액
		,	NULL               AS PROCESSSEGMENTID --발견공정
		,	NULL               AS PROCESSSEGMENTNAME 
		,	URR.USERNAME       AS CLAIMUSERNAME  --입력자
		,	NULL               AS DEFINEUSERNAME --확정자
		,	NULL               AS DESCRIPTION
		,	OEA.ENTERPRISEID
		,	OEA.PLANTID
		,	NULL               AS PROCESSPATHID
		,	NULL               AS PROCESSSEGMENTID
		,	NULL               AS AREAID
		,	NULL               AS REASONSEGMENTID
		,	OEA.AREAID         AS REASONAREAID
		,	NULL               AS REASONCONSUMABLELOTID
		,	OEA.PERIODID      AS PERIODID
		,	COALESCE(PED.PERIODSTATE,'Open')    AS PERIODSTATE
		,	CASE WHEN OEA.PERIODID IS null             THEN 'N' 
			     ELSE 'Y' 
			END AS  ISCLOSE	
		,	PED.PERIODNAME 
		,	OEA.CLOSEUSER
		,	'' as CHK
		,   '' as TXNHISTKEY
		-- (21.07.01) - 추가
		,  ''                       AS JOINCODE            		-- 불량코드+품질공정 (주석과는 내용 다름 -> 품질공정+불량코드)
        ,  ''                       AS JOINNAME              	-- 불량코드명+품질공정명
	FROM            OSM_OSPETCCLAIMAMOUNT        OEA 
	LEFT OUTER JOIN BAS_PRODUCTDEFINITION        SPD  ON  SPD.PRODUCTDEFID           = OEA.PRODUCTDEFID
	                                                 AND SPD.PRODUCTDEFVERSION      = OEA.PRODUCTDEFVERSION 
	
	LEFT OUTER JOIN CMD_USER_V                     URR  ON  URR.USERID                 = OEA.CLAIMUSER
	LEFT OUTER JOIN BAS_AREA                     SAR  ON  SAR.AREAID                 = OEA.AREAID  
	LEFT OUTER JOIN BAS_VENDOR	                MVD  ON  MVD.VENDORID               = OEA.VENDORID
	                                                 AND MVD.PLANTID                = OEA.PLANTID
	LEFT OUTER JOIN CMD_DICTIONARY	            DAC  ON  DAC.DICTIONARYID           = SAR.AREANAME
	                                                 AND DAC.LANGUAGETYPE           =#{SESSION_LANGUAGETYPE}     
	LEFT OUTER JOIN BAS_PERIOD                   PED  ON  PED.ENTERPRISEID            = OEA.ENTERPRISEID
								 	                 AND PED.PLANTID                 = OEA.PLANTID
								 	                 AND PED.PERIODID                = OEA.PERIODID 	
	WHERE 1=1   
	AND		OEA.VALIDSTATE     =  'Valid'    
	AND		OEA.PLANTID        = #{PLANTID}  
	
	-- [21.07.01] to 기간 설정
	<if test="PERIOD_PERIODFR != null and PERIOD_PERIODFR !=''"> 
		AND 	OEA.CLAIMDATE  <![CDATA[>=]]> TO_TIMESTAMP( #{PERIOD_PERIODFR},'YYYYMMDDHH24MISS')
	</if>
	<if test="PERIOD_PERIOTO != null and PERIOD_PERIOTO !=''"> 
		AND 	OEA.CLAIMDATE  <![CDATA[<]]> TO_TIMESTAMP( #{PERIOD_PERIOTO},'YYYYMMDDHH24MISS')
	</if>
	<if test="OSPVENDORID != null and OSPVENDORID !=''"> 
		AND 	OEA.VENDORID  = #{OSPVENDORID}
	</if>
	<if test="PERIODNAME != null and PERIODNAME !=''"> 
		AND 	PED.PERIODNAME  = #{PERIODNAME}
	</if>
	<if test="OSPVENDORNAME != null and OSPVENDORNAME !=''"> 
		AND 	 MVD.VENDORNAME    LIKE #{OSPVENDORNAME}||'%'
	</if>
	<if test="AREAID != null and AREAID !=''"> 
		AND 	OEA.AREAID  = #{AREAID}
	</if>
	<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''"> 
		AND 	 OEA.PRODUCTDEFID    = #{PRODUCTDEFID}||'%'
	</if>
	<if test="LOTID != null and LOTID !=''"> 
		AND 	OEA.ETCLOTID   = #{LOTID}
	</if>
	<if test="CLOSEYESNO != null and CLOSEYESNO !='' and (CLOSEYESNO eq 'Y'.toString())"> 
		AND 	OEA.PERIODID IS NOT NULL
	</if>
	<if test="CLOSEYESNO != null and CLOSEYESNO !='' and (CLOSEYESNO eq 'N'.toString())"> 
		AND 	OEA.PERIODID  IS NULL
	</if>

    </select>   

    <select id="GetClaimClosePeriodPopup" parameterType="map"  resultType="hashmap">
	/* "smh.osm.dao.OSM00300Dao.GetClaimClosePeriodPopup"  */
     SELECT	Z.*	  
      FROM	  
        (	  
          SELECT Y.*	  
               , ROWNUM RNUM	  
               , LAST_VALUE(ROWNUM) OVER (ORDER BY ROWNUM ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) AS TOTAL_ROWS	  
            FROM	  
               (	
	SELECT
			CPR.PERIODID
		,	CPR.PERIODNAME  
		,	CPR.PERIODTYPE
		,	CPR.ENTERPRISEID
		,	CPR.PLANTID
		,	CPR.FACTORYID
		,	CPR.STARTDATE
		,	CPR.ENDDATE
		,	CPR.STARTTIME
		,	CPR.ENDTIME
		,	CPR.DESCRIPTION
		,	CPR.PERIODSTATE
		, '' as CHK
	FROM	BAS_PERIOD	                    CPR                              --재고 실사기간등록
	WHERE	CPR.VALIDSTATE     = 'Valid'
	AND		CPR.PERIODTYPE     =  #{PERIODTYPE}
	AND		CPR.PLANTID        = #{PLANTID}
	AND		CPR.ENTERPRISEID   = #{SESSION_ENTERPRISEID}
	AND		CPR.PERIODNAME  LIKE #{CLOSEYM}||'%'
	ORDER BY CPR.PERIODNAME desc
	             ) Y	  
	          WHERE 1=1	  
	          ) Z	  
	 WHERE 1=1	
	<if test="PAGE_NUMBER != null and PAGE_NUMBER !=''"> 
	   AND Z.RNUM <![CDATA[ > ]]>  ( #{PAGE_NUMBER} - 1) *  #{PAGE_SIZE}   
	   AND Z.RNUM <![CDATA[ <= ]]>  #{PAGE_NUMBER} *  #{PAGE_SIZE}	          
	</if>	 

    </select>       
    
    <!-- 외주Claim 등록 -->
    <insert id="insertOsmOspclaim" parameterType="map">
    /* "smh.osm.dao.OSM00300Dao.insertOsmOspclaim"  */
    INSERT INTO OSM_OSPCLAIM( 
        LOTID  
        ,LOTHISTKEY  
        ,DEFINETIME  
        ,OCCURTIME  
        ,PROCESSPATHID  
        ,PROCESSSEGMENTID  
        ,AREAID  
        ,DEFECTCODE  
        ,REASONSEGMENTID  
        ,REASONAREAID  
        ,REASONCONSUMABLELOTID  
        ,DEFECTQTY  
        ,CLAIMPRICE  
        ,DEFECTAMOUNT  
        ,REDUCEQTY  
        ,REDUCEQTYAMOUNT  
        ,REDUCERATE  
        ,REDUCERATEAMOUNT  
        ,CLAIMAMOUNT  
        ,CLAIMTYPE  
        ,PERIODID  
        ,ENTERPRISEID  
        ,PLANTID  
        ,DESCRIPTION  
        ,CREATOR  
        ,CREATEDTIME  
        ,MODIFIER  
        ,MODIFIEDTIME  
        ,LASTTXNHISTKEY  
        ,LASTTXNID  
        ,LASTTXNUSER  
        ,LASTTXNTIME  
        ,LASTTXNCOMMENT  
        ,VALIDSTATE        ) 
    VALUES( 
        #{LOTID}  
        ,#{LOTHISTKEY}  
        ,#{DEFINETIME}		--,sysdate    -- [21.08.02] 화면에 조회 된 내용으로변경
        ,#{OCCURTIME}		--,sysdate    -- [21.08.02] 화면에 조회 된 내용으로변경
        ,#{PROCESSPATHID}  
        ,#{PROCESSSEGMENTID}  
        ,#{AREAID}  
        ,#{DEFECTCODE}  
        ,#{REASONSEGMENTID}  
        ,#{REASONAREAID}  
        ,#{REASONCONSUMABLELOTID}  
        ,#{DEFECTQTY}  
        ,#{CLAIMPRICE}  
        ,#{DEFECTAMOUNT}  
        ,#{REDUCEQTY}  
        ,#{REDUCEQTYAMOUNT}  
        ,#{REDUCERATE}  
        ,#{REDUCERATEAMOUNT}  
        ,#{CLAIMAMOUNT}  
        ,#{CLAIMTYPE}  
        ,#{PERIODID}  
        ,#{ENTERPRISEID}  
        ,#{PLANTID}  
        ,#{DESCRIPTION}  
        ,#{CREATOR}  
        ,SYSDATE  
        ,#{MODIFIER}  
        ,SYSDATE  
        ,#{LASTTXNHISTKEY}  
        ,#{LASTTXNID}  
        ,#{LASTTXNUSER}  
        ,SYSDATE  
        ,#{LASTTXNCOMMENT}  
        ,#{VALIDSTATE}    )
    </insert>

    <!-- 외주Claim 변경 -->
    <update id="updateOsmOspclaim" parameterType="map" >
    /* "smh.osm.dao.OSM00300Dao.updateOsmOspclaim"  */
    UPDATE OSM_OSPCLAIM 
    SET 
        DEFINETIME = sysdate     
        ,OCCURTIME = sysdate     
        ,PROCESSPATHID = #{PROCESSPATHID}     
        ,PROCESSSEGMENTID = #{PROCESSSEGMENTID}     
        ,AREAID = #{AREAID}     
        ,DEFECTCODE = #{DEFECTCODE}     
        ,REASONSEGMENTID = #{REASONSEGMENTID}     
        ,REASONAREAID = #{REASONAREAID}     
        ,REASONCONSUMABLELOTID = #{REASONCONSUMABLELOTID}     
        ,DEFECTQTY = #{DEFECTQTY}     
        ,CLAIMPRICE = #{CLAIMPRICE}     
        ,DEFECTAMOUNT = #{DEFECTAMOUNT}     
        ,REDUCEQTY = #{REDUCEQTY}     
        ,REDUCEQTYAMOUNT = #{REDUCEQTYAMOUNT}     
        ,REDUCERATE = #{REDUCERATE}     
        ,REDUCERATEAMOUNT = #{REDUCERATEAMOUNT}     
        ,CLAIMAMOUNT = #{CLAIMAMOUNT}     
        ,CLAIMTYPE = #{CLAIMTYPE}     
        ,PERIODID = #{PERIODID}     
        ,PLANTID = #{PLANTID}     
        ,DESCRIPTION = #{DESCRIPTION}             
        ,CREATEDTIME = #{CREATEDTIME}     
        ,MODIFIER = #{MODIFIER}     
        ,MODIFIEDTIME = SYSDATE     
        ,LASTTXNHISTKEY = #{LASTTXNHISTKEY}     
        ,LASTTXNID = #{LASTTXNID}     
        ,LASTTXNUSER = #{LASTTXNUSER}     
        ,LASTTXNTIME = SYSDATE     
        ,LASTTXNCOMMENT = #{LASTTXNCOMMENT}     
        ,VALIDSTATE = #{VALIDSTATE}
    WHERE LOTHISTKEY = #{LOTHISTKEY}
    AND LOTID = #{LOTID}
    </update>

    <!-- 외주Claim 삭제 -->
    <update id="updateOsmOspclaimClose" parameterType="map" > 
    /* "smh.osm.dao.OSM00300Dao.updateOsmOspclaimClose"  */
    UPDATE OSM_OSPCLAIM 
    SET 
        DEFINETIME = sysdate     
        ,OCCURTIME = sysdate     
        ,PROCESSPATHID = #{PROCESSPATHID}     
        ,PROCESSSEGMENTID = #{PROCESSSEGMENTID}     
        ,AREAID = #{AREAID}     
        ,DEFECTCODE = #{DEFECTCODE}     
        ,REASONSEGMENTID = #{REASONSEGMENTID}     
        ,REASONAREAID = #{REASONAREAID}     
        ,REASONCONSUMABLELOTID = #{REASONCONSUMABLELOTID}     
        ,DEFECTQTY = #{DEFECTQTY}     
        ,CLAIMPRICE = #{CLAIMPRICE}     
        ,DEFECTAMOUNT = #{DEFECTAMOUNT}     
        ,REDUCEQTY = #{REDUCEQTY}     
        ,REDUCEQTYAMOUNT = #{REDUCEQTYAMOUNT}     
        ,REDUCERATE = #{REDUCERATE}     
        ,REDUCERATEAMOUNT = #{REDUCERATEAMOUNT}     
        ,CLAIMAMOUNT = #{CLAIMAMOUNT}     
        ,CLAIMTYPE = #{CLAIMTYPE}     
        ,PERIODID = #{PERIODID}     
        ,ENTERPRISEID = #{ENTERPRISEID}     
        ,PLANTID = #{PLANTID}     
        ,DESCRIPTION = #{DESCRIPTION}             
        ,CREATEDTIME = #{CREATEDTIME}     
        ,MODIFIER = #{MODIFIER}     
        ,MODIFIEDTIME = SYSDATE     
        ,LASTTXNHISTKEY = #{LASTTXNHISTKEY}     
        ,LASTTXNID = #{LASTTXNID}     
        ,LASTTXNUSER = #{LASTTXNUSER}     
        ,LASTTXNTIME = SYSDATE     
        ,LASTTXNCOMMENT = #{LASTTXNCOMMENT}     
        ,VALIDSTATE = #{VALIDSTATE}
    WHERE LOTHISTKEY = #{LOTHISTKEY}
    AND LOTID = #{LOTID}
    </update>

    <!-- 외주Claim 상세조회-->
    <select id="selectOsmOspclaim" parameterType="map" resultType="hashmap">
        /* "smh.osm.dao.OSM00300Dao.selectOsmOspclaim"  */
    SELECT 
        A.LOTID	 
        ,A.LOTHISTKEY	 
        ,A.DEFINETIME	 
        ,A.OCCURTIME	 
        ,A.PROCESSPATHID	 
        ,A.PROCESSSEGMENTID	 
        ,A.AREAID	 
        ,A.DEFECTCODE	 
        ,A.REASONSEGMENTID	 
        ,A.REASONAREAID	 
        ,A.REASONCONSUMABLELOTID	 
        ,A.DEFECTQTY	 
        ,A.CLAIMPRICE	 
        ,A.DEFECTAMOUNT	 
        ,A.REDUCEQTY	 
        ,A.REDUCEQTYAMOUNT	 
        ,A.REDUCERATE	 
        ,A.REDUCERATEAMOUNT	 
        ,A.CLAIMAMOUNT	 
        ,A.CLAIMTYPE	 
        ,A.PERIODID	 
        ,A.ENTERPRISEID	 
        ,A.PLANTID	 
        ,A.DESCRIPTION	 
        ,A.CREATOR	 
        ,A.CREATEDTIME	 
        ,A.MODIFIER	 
        ,A.MODIFIEDTIME	 
        ,A.LASTTXNHISTKEY	 
        ,A.LASTTXNID	 
        ,A.LASTTXNUSER	 
        ,A.LASTTXNTIME	 
        ,A.LASTTXNCOMMENT	 
        ,A.VALIDSTATE	 
    FROM	OSM_OSPCLAIM A 
    WHERE A.LOTHISTKEY = #{LOTHISTKEY}
    AND	A.LOTID = #{LOTID}
    </select>
    
    <select id="GetCheckPeriodCloseOsp" parameterType="map"  resultType="hashmap">
	/* "smh.osm.dao.OSM00300Dao.GetCheckPeriodCloseOsp"  */
	SELECT
			 OAD.PERIODSTATE  AS PERIODSTATE
	FROM 	BAS_PERIOD    OAD
	WHERE	OAD.VALIDSTATE       =  'Valid'
	AND		OAD.PLANTID          = #{PLANTID}
	AND		OAD.PERIODID         = #{PERIODID}	 

    </select>       				    
    <select id="GetOutsourcedClaimConfirmationCheck" parameterType="map"  resultType="hashmap">
	/* "smh.osm.dao.OSM00300Dao.GetOutsourcedClaimConfirmationCheck"  */
	SELECT 
			QDR.STATUS
	FROM  QAM_QCLOTDEFECTRESULT                  QDR 
	WHERE	1=1 
	AND		QDR.LOTID        = #{LOTID}
	AND		QDR.TXNHISTKEY   = #{TXNHISTKEY}
	AND		QDR.STATUS          IN ('Confirm', 'DeadlineComplete')

    </select>     
    
    <select id="GetFactoryListByCsm" parameterType="map"  resultType="hashmap">
	/* "smh.osm.dao.OSM00300Dao.GetFactoryListByCsm"  */
    -- (21.06.23) 전체 조회 추가
    SELECT    '' 						AS FACTORYID 	
           ,(
            SELECT 	DICTIONARYNAME
              FROM 	CMD_DICTIONARY
             WHERE 	1 = 1
               AND 	DICTIONARYID 		= 'ALLVIEWS'        -- 전체조회
               AND 	LANGUAGETYPE 	= #{SESSION_LANGUAGETYPE}
            ) 							AS FACTORYNAME
            
        FROM DUAL
    
    UNION ALL
    
    
    SELECT  ARA.AREAID           	AS FACTORYID
      ,  DIC.DICTIONARYNAME   		AS FACTORYNAME
    FROM      BAS_AREA            	ARA
    INNER JOIN CMD_DICTIONARY   DIC   ON   ARA.AREANAME        = DIC.DICTIONARYID
                                     AND   DIC.LANGUAGETYPE    = #{SESSION_LANGUAGETYPE}
    WHERE  ARA.VALIDSTATE     	= 'Valid'
    AND    ARA.AREATYPE      		= 'Factory'
    AND    ARA.PLANTID           	= #{PLANTID}
    ORDER BY FACTORYID DESC      
    </select>    
    
    <!-- 외주기타Claim비용 변경 -->
    <update id="updateOsmOspetcclaimamount" parameterType="map" >
    UPDATE OSM_OSPETCCLAIMAMOUNT 
    SET 
        PERIODID = #{PERIODID}     
        ,MODIFIER = #{MODIFIER}     
        ,MODIFIEDTIME = SYSDATE     
    WHERE CLAIMDATE = #{DEFINETIME}   -- (21.06.22) 수정 CLAIMDATE -> DEFINETIME  
    AND CLAIMSEQUENCE = #{CLAIMSEQUENCE}
    AND ENTERPRISEID = #{ENTERPRISEID}
    AND PLANTID = #{PLANTID}
    </update>

    <select id="GetCheckClaimClosePeriodPopup" parameterType="map"  resultType="hashmap">
	/* "smh.osm.dao.OSM00300Dao.GetCheckClaimClosePeriodPopup"  */
	SELECT
			NVL(MAX(CPR.PERIODID),'') AS PERIODID
	FROM	BAS_PERIOD	                    CPR                              --재고 실사기간등록
	WHERE	1=1 
	AND 	CPR.PERIODTYPE     = #{PERIODTYPE} 
	AND 	CPR.PLANTID        = #{PLANTID}
	AND 	CPR.PERIODNAME     = #{PERIODNAME}
	
    </select>    

    <!-- 기간정보 등록 -->
    <insert id="insertBasPeriod" parameterType="map">
    INSERT INTO BAS_PERIOD( 
        PERIODID  
        ,FACTORYID  
        ,PLANTID  
        ,ENTERPRISEID  
        ,PERIODNAME  
        ,PERIODTYPE  
        ,STARTDATE  
        ,ENDDATE  
        ,STARTTIME  
        ,ENDTIME  
        ,MAJORSTARTDATE  
        ,MAJORENDDATE  
        ,MAJORSTARTTIME  
        ,MAJORENDTIME  
        ,DESCRIPTION  
        ,PERIODSTATE  
        ,CREATOR  
        ,CREATEDTIME  
        ,MODIFIER  
        ,MODIFIEDTIME  
        ,LASTTXNHISTKEY  
        ,LASTTXNID  
        ,LASTTXNUSER  
        ,LASTTXNTIME  
        ,LASTTXNCOMMENT  
        ,VALIDSTATE        ) 
    VALUES( 
        ( SELECT
		      #{PERIODNAME}||LPAD(NVL(TO_NUMBER(SUBSTR(MAX(CPR.PERIODID),7,4)),0)+1,4,'0') AS PERIODID
		  FROM  BAS_PERIOD CPR                             
		  WHERE CPR.PERIODID LIKE #{PERIODNAME}||'%') 
        ,#{FACTORYID}  
        ,#{PLANTID}  
        ,#{SESSION_ENTERPRISEID}  
        ,substr(#{PERIODNAME},1,4)||'-'||substr(#{PERIODNAME},5,2)  
        ,#{PERIODTYPE}  
        ,#{STARTDATE}  
        ,#{ENDDATE}  
        ,#{STARTTIME}  
        ,#{ENDTIME}  
        ,#{MAJORSTARTDATE}  
        ,#{MAJORENDDATE}  
        ,#{MAJORSTARTTIME}  
        ,#{MAJORENDTIME}  
        ,#{DESCRIPTION}  
        ,#{PERIODSTATE}  
        ,#{CREATOR}  
        ,SYSDATE  
        ,#{MODIFIER}  
        ,SYSDATE  
        ,#{LASTTXNHISTKEY}  
        ,#{LASTTXNID}  
        ,#{LASTTXNUSER}  
        ,SYSDATE  
        ,#{LASTTXNCOMMENT}  
        ,#{VALIDSTATE}    )
    </insert>

    <!-- 기간정보 변경 -->
    <update id="updateBasPeriod" parameterType="map" >
    UPDATE BAS_PERIOD 
    SET 
        PERIODNAME = #{PERIODNAME}     
        ,PERIODTYPE = #{PERIODTYPE}     
        ,DESCRIPTION = #{DESCRIPTION}     
        ,PERIODSTATE = #{PERIODSTATE}             
        ,MODIFIER = #{MODIFIER}     
        ,MODIFIEDTIME = SYSDATE     
        ,LASTTXNHISTKEY = #{LASTTXNHISTKEY}     
        ,LASTTXNID = #{LASTTXNID}     
        ,LASTTXNUSER = #{LASTTXNUSER}     
        ,LASTTXNTIME = SYSDATE     
        ,LASTTXNCOMMENT = #{LASTTXNCOMMENT}     
        ,VALIDSTATE = #{VALIDSTATE}
    WHERE PERIODID = #{PERIODID}
    </update>

    <!-- 기간정보 삭제 -->
    <update id="deleteBasPeriod" parameterType="map" > 
    update BAS_PERIOD 
    set VALIDSTATE = 'Invalid'
    WHERE PERIODID = #{PERIODID}
    </update>
    
    <!--
		설		명	: Claim 비용 마감 - 저장전 PERIODNAME 중복 데이터 확인
		생	성	자	: 김진현 
		생	성	일	: 2021-06-24 
		수  정   이  력	:
	-->	
	 <select id="GetCheckClaimClosePeriodDup" parameterType="map"  resultType="hashmap">
		/* "smh.osm.dao.OSM00300Dao.GetCheckClaimClosePeriodDup"  */
		SELECT  CASE WHEN COUNT(CPR.PERIODNAME) = 0
			             THEN 'Y'
						 ELSE  'N'				-- 이미 존재하면 저장 불가
						 END
					AS CHK_PERIODNAME
				
		FROM	BAS_PERIOD	                    CPR                              --재고 실사기간등록
		WHERE	1=1 
		AND 	CPR.PERIODTYPE     	= #{PERIODTYPE} 
		AND 	CPR.PLANTID        	= #{PLANTID}
		AND 	CPR.PERIODNAME     	= substr(#{PERIODNAME},1,4)||'-'||substr(#{PERIODNAME},5,2)
	
    </select>
    
    <!--
		설		명	: Claim 비용 마감 - 저장시 BAS_PERIOD 의 type 확인 Close 인 경우 저장 불가 / PERIODID 가 존재 하는 것만
		생	성	자	: 김진현 
		생	성	일	: 2021-06-24 
		수  정   이  력	:
	-->
	<select id="selectPeriodTypeCheck" parameterType="map" resultType="hashmap">
			/* selectPeriodTypeCheck -  Claim 비용 마감 - 저장시 BAS_PERIOD 의 type 확인 Close 인 경우 저장 불가 / PERIODID 가 존재 하는 것만 */
			 SELECT  MAX(CPR.PERIODSTATE) AS PERIODSTATE
			   FROM  BAS_PERIOD CPR
			  WHERE  1 = 1
				AND     CPR.VALIDSTATE     	= 'Valid'
				AND		CPR.PERIODTYPE     	= 'Claim'			-- 일단 고정
				AND		CPR.PLANTID        	= #{PLANTID}
				--AND		CPR.ENTERPRISEID   	= ENTERPRISEID
				AND		CPR.PERIODID     		= #{PERIODID}
	</select>
	
	
	<!--
		설		명	: Claim 비용 마감 - 조회시 메인 상단 마감년월 값 있는 경우 마감 상태 재조회
		생	성	자	: 김진현 
		생	성	일	: 2020-07-01
		수  정   이  력	:
	-->
	<select id="selectChkPeriodState" parameterType="map" resultType="hashmap">	
				
				/*selectChkPeriodState - Claim 비용 마감 - 조회시 메인 상단 마감년월 값 있는 경우 마감 상태 재조회*/
				SELECT
						DISTINCT CPR.PERIODSTATE
					
				FROM	BAS_PERIOD	                    CPR                              --재고 실사기간등록
				WHERE	CPR.VALIDSTATE     	= 'Valid'
				AND		CPR.PERIODTYPE     	= #{PERIODTYPE}
				AND		CPR.PLANTID        	= #{PLANTID}
				AND		CPR.ENTERPRISEID   	= #{SESSION_ENTERPRISEID}
				AND		CPR.PERIODNAME  	= #{CLOSEYM}
				ORDER BY CPR.PERIODNAME desc
    </select>
    
    
    				    
</mapper>
