<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="smh.bas.dao.BAS03700Dao">

   <!-- BOM 소요량 조회-->
    <select id="selectBasBOMList" parameterType="map" resultType="hashmap">
    	/*selectBasBOMList*/
	   WITH	BOMLIST	(   
			TOPASSEMBLYITEMID
		,	TOPASSEMBLYITEMVERSION
		,	TOPBOMID
		,	PARENTSASSEMBLYITEMID
		,	PARENTSASSEMBLYITEMVERSION
		,	PARETNSBOMID
		,	PLANTID
		,	ASSEMBLYITEMID
		,	ASSEMBLYITEMVERSION
		,	BOMID
		,	UOM
		,	ASSEMBLYQTY
		,	ASSEMBLYCALQTY
		,	SITE
		,	PROCESSSEGMENTNAME
		,	USERSEQUENCE
		,	COMPONENTSEQUENCE
		,	BOMSEQUENCE
		,	LVL
		,	PCSPNL
		,	CONNECTPCSPNL
		,	PCSMM
		)	AS (
			SELECT
					TOP.ASSEMBLYITEMID	AS	TOPASSEMBLYITEMID
				,	TOP.ASSEMBLYITEMVERSION		AS	TOPASSEMBLYITEMVERSION
				,	TOP.ASSEMBLYBOMID			AS TOPBOMID
				,	''							AS PARENTSASSEMBLYITEMID
				,	''							AS PARENTSASSEMBLYITEMVERSION
				,	TOP.ASSEMBLYBOMID			AS PARENTSBOMID
				,	TOP.PLANTID					AS PLANTID
				,	TOP.ASSEMBLYITEMID			AS ASSEMBLYITEMID
				,	TOP.ASSEMBLYITEMVERSION		AS ASSEMBLYITEMVERSION
				,	TOP.ASSEMBLYBOMID			AS BOMID
				,	TOP.ASSEMBLYITEMUOM			AS UOM
				,	CAST(1 AS FLOAT)			AS ASSEMBLYQTY
				,	CAST(1 AS FLOAT)			AS ASSEMBLYCALQTY
				,	TOP.PLANTID					AS SITE
				,	''							AS PROCESSSEGMENTNAME
				,	''							AS USERSEQUENCE
				,	0							AS COMPONENTSEQUENCE
				,	'0000'			AS BOMSEQUENCE
				,	1							AS LVL
				,	SPC.PCSPNL					AS PCSPNL
				,	CEIL(SPC.PCSPNL)					AS CONNECTPCSPNL
				,	SPC.PCSMM					AS PCSMM
			FROM	BAS_ASSEMBLYBILLOFMATERIAL	TOP 
			LEFT OUTER JOIN BAS_PRODUCTITEMSPEC 	SPC	ON	TOP.ASSEMBLYITEMID = SPC.ITEMID
														AND TOP.ASSEMBLYITEMVERSION = SPC.ITEMVERSION
	<if test="PRODUCTDEFID != null and PRODUCTDEFID !=''"> 
			WHERE TOP.ASSEMBLYITEMID=#{PRODUCTDEFID} AND TOP.ASSEMBLYITEMVERSION=#{PRODUCTDEFVERSION}
	</if>
		UNION ALL
			SELECT
					BOL.TOPASSEMBLYITEMID
				,	BOL.TOPASSEMBLYITEMVERSION
				,	BOL.TOPBOMID
				,	BOM.ASSEMBLYITEMID			AS PARENTSASSEMBLYITEMID
				,	BOM.ASSEMBLYITEMVERSION		AS PARENTSASSEMBLYITEMVERSION
				,	BOM.ASSEMBLYBOMID			AS PARENTSBOMID
				,	COMP.PLANTID				AS PLANTID
				,	COMP.COMPONENTITEMID		AS ASSEMBLYITEMID
				,	COMP.COMPONENTITEMVERSION	AS ASSEMBLYITEMVERSION
				,	COMP.COMPONENTBOMID			AS BOMID
				,	COMP.COMPONENTUOM			AS UOM
				,	COMP.COMPONENTQTY			AS ASSEMBLYQTY
				,	BOL.ASSEMBLYQTY * COMP.COMPONENTQTY	AS ASSEMBLYCALQTY
				,	OPR.PLANTID					AS SITE
				,	DIC.DICTIONARYNAME		AS PROCESSSEGMENTNAME
				,	OPR.USERSEQUENCE			AS USERSEQUENCE
				,	COMP.COMPONENTSEQUENCE		AS COMPONENTSEQUENCE
				,	CASE WHEN BOL.BOMSEQUENCE != '0000'  THEN LPAD(BOL.BOMSEQUENCE,4,'0')||'+'|| LPAD(OPR.USERSEQUENCE,4,'0') || '+' || LPAD(COMP.COMPONENTSEQUENCE,4,'0') 
				    ELSE  LPAD(OPR.USERSEQUENCE,4,'0') || '+' || LPAD(COMP.COMPONENTSEQUENCE,4,'0') 
				    END AS BOMSEQUENCE
				,	BOL.LVL +1					AS LVL
				,	SPC.PCSPNL					AS PCSPNL
				,	CASE WHEN SUBSTR(COMP.COMPONENTITEMID,1,1) ='2' THEN CEIL(SPC.PCSPNL	* COMP.COMPONENTQTY)	
				         ELSE NULL END AS CONNECTPCSPNL
				,	SPC.PCSMM
			FROM BAS_BOMCOMPONENT COMP
			INNER JOIN BAS_ASSEMBLYBILLOFMATERIAL	BOM	ON	COMP.ASSEMBLYBOMID = BOM.ASSEMBLYBOMID
														AND	COMP.ENTERPRISEID	=	BOM.ENTERPRISEID
			INNER JOIN BAS_OPERATION				OPR	ON	OPR.OPERATIONID = COMP.OPERATIONID
														AND OPR.VALIDSTATE='Valid'
			INNER JOIN BOMLIST						BOL	ON	BOM.ASSEMBLYITEMID = BOL.ASSEMBLYITEMID
														AND	BOM.ASSEMBLYITEMVERSION = BOL.ASSEMBLYITEMVERSION
			LEFT OUTER JOIN BAS_PRODUCTITEMSPEC		SPC	ON	BOL.ASSEMBLYITEMID = SPC.ITEMID
														AND BOL.ASSEMBLYITEMVERSION = SPC.ITEMVERSION
			LEFT OUTER JOIN BAS_PROCESSSEGMENT		PRS	ON	OPR.PROCESSSEGMENTID = PRS.PROCESSSEGMENTID
			LEFT OUTER JOIN CMD_DICTIONARY			DIC	ON	PRS.PROCESSSEGMENTNAME = DIC.DICTIONARYID
														AND LANGUAGETYPE = #{LANGUAGETYPE}
		)
		SELECT
				IM1.ITEMNAME		AS TOPITEMNAME
			,	IM2.ITEMNAME		AS PARENTSITEMNAME
			,	IM3.ITEMNAME		AS ITEMNAME
			,	BL.*
		FROM BOMLIST BL
		LEFT OUTER JOIN BAS_ITEMMASTER IM1 	ON BL.TOPASSEMBLYITEMID = IM1.ITEMID
										  	AND BL.TOPASSEMBLYITEMVERSION = IM1.ITEMVERSION
		LEFT OUTER JOIN BAS_ITEMMASTER IM2	ON BL.PARENTSASSEMBLYITEMID = IM2.ITEMID
											AND BL.PARENTSASSEMBLYITEMVERSION = IM2.ITEMVERSION
		LEFT OUTER JOIN BAS_ITEMMASTER IM3	ON BL.ASSEMBLYITEMID = IM3.ITEMID
											AND BL.ASSEMBLYITEMVERSION = IM3.ITEMVERSION
		ORDER BY BL.TOPASSEMBLYITEMID, BL.TOPASSEMBLYITEMVERSION , BL.BOMSEQUENCE
    </select>    
    <!-- 대용량 Excel-->
     <select id="selectBasBOMListExcel" parameterType="map" resultType="hashmap">
    	/*selectBasBOMListExcel*/
	   WITH	BOMLIST	(   
			TOPASSEMBLYITEMID
		,	TOPASSEMBLYITEMVERSION
		,	TOPBOMID
		,	PARENTSASSEMBLYITEMID
		,	PARENTSASSEMBLYITEMVERSION
		,	PARETNSBOMID
		,	PLANTID
		,	ASSEMBLYITEMID
		,	ASSEMBLYITEMVERSION
		,	BOMID
		,	UOM
		,	ASSEMBLYQTY
		,	ASSEMBLYCALQTY
		,	SITE
		,	PROCESSSEGMENTNAME
		,	USERSEQUENCE
		,	COMPONENTSEQUENCE
		,	BOMSEQUENCE
		,	LVL
		,	PCSPNL
		,	CONNECTPCSPNL
		,	PCSMM
		)	AS (
			SELECT
					TOP.ASSEMBLYITEMID	AS	TOPASSEMBLYITEMID
				,	TOP.ASSEMBLYITEMVERSION		AS	TOPASSEMBLYITEMVERSION
				,	TOP.ASSEMBLYBOMID			AS TOPBOMID
				,	''							AS PARENTSASSEMBLYITEMID
				,	''							AS PARENTSASSEMBLYITEMVERSION
				,	TOP.ASSEMBLYBOMID			AS PARENTSBOMID
				,	TOP.PLANTID					AS PLANTID
				,	TOP.ASSEMBLYITEMID			AS ASSEMBLYITEMID
				,	TOP.ASSEMBLYITEMVERSION		AS ASSEMBLYITEMVERSION
				,	TOP.ASSEMBLYBOMID			AS BOMID
				,	TOP.ASSEMBLYITEMUOM			AS UOM
				,	CAST(1 AS FLOAT)			AS ASSEMBLYQTY
				,	CAST(1 AS FLOAT)			AS ASSEMBLYCALQTY
				,	TOP.PLANTID					AS SITE
				,	''							AS PROCESSSEGMENTNAME
				,	''							AS USERSEQUENCE
				,	0							AS COMPONENTSEQUENCE
				,	'0000'			AS BOMSEQUENCE
				,	1							AS LVL
				,	SPC.PCSPNL					AS PCSPNL
				,	CEIL(SPC.PCSPNL)					AS CONNECTPCSPNL
				,	SPC.PCSMM					AS PCSMM
			FROM	BAS_ASSEMBLYBILLOFMATERIAL	TOP 
			LEFT OUTER JOIN BAS_PRODUCTITEMSPEC 	SPC	ON	TOP.ASSEMBLYITEMID = SPC.ITEMID
														AND TOP.ASSEMBLYITEMVERSION = SPC.ITEMVERSION
			INNER JOIN BAS_PRODUCTDEFINITION		PRD	ON	TOP.ASSEMBLYITEMID = PRD.PRODUCTDEFID
														AND TOP.ASSEMBLYITEMVERSION = PRD.PRODUCTDEFVERSION
														AND PRD.PRODUCTCLASSID='Product'
		UNION ALL		
			SELECT
					BOL.TOPASSEMBLYITEMID
				,	BOL.TOPASSEMBLYITEMVERSION
				,	BOL.TOPBOMID
				,	BOM.ASSEMBLYITEMID			AS PARENTSASSEMBLYITEMID
				,	BOM.ASSEMBLYITEMVERSION		AS PARENTSASSEMBLYITEMVERSION
				,	BOM.ASSEMBLYBOMID			AS PARENTSBOMID
				,	COMP.PLANTID				AS PLANTID
				,	COMP.COMPONENTITEMID		AS ASSEMBLYITEMID
				,	COMP.COMPONENTITEMVERSION	AS ASSEMBLYITEMVERSION
				,	COMP.COMPONENTBOMID			AS BOMID
				,	COMP.COMPONENTUOM			AS UOM
				,	COMP.COMPONENTQTY			AS ASSEMBLYQTY
				,	BOL.ASSEMBLYQTY * COMP.COMPONENTQTY	AS ASSEMBLYCALQTY
				,	OPR.PLANTID					AS SITE
				,	DIC.DICTIONARYNAME		AS PROCESSSEGMENTNAME
				,	OPR.USERSEQUENCE			AS USERSEQUENCE
				,	COMP.COMPONENTSEQUENCE		AS COMPONENTSEQUENCE
				,	CASE WHEN BOL.BOMSEQUENCE != '0000'  THEN LPAD(BOL.BOMSEQUENCE,4,'0')||'+'|| LPAD(OPR.USERSEQUENCE,4,'0') || '+' || LPAD(COMP.COMPONENTSEQUENCE,4,'0') 
				    ELSE  LPAD(OPR.USERSEQUENCE,4,'0') || '+' || LPAD(COMP.COMPONENTSEQUENCE,4,'0') 
				    END AS BOMSEQUENCE
				,	BOL.LVL +1					AS LVL
				,	SPC.PCSPNL					AS PCSPNL
				,	CASE WHEN SUBSTR(COMP.COMPONENTITEMID,1,1) ='2' THEN CEIL(SPC.PCSPNL	* COMP.COMPONENTQTY)	
				         ELSE NULL END AS CONNECTPCSPNL
				,	SPC.PCSMM
			FROM BAS_BOMCOMPONENT COMP
			INNER JOIN BAS_ASSEMBLYBILLOFMATERIAL	BOM	ON	COMP.ASSEMBLYBOMID = BOM.ASSEMBLYBOMID
														AND	COMP.ENTERPRISEID	=	BOM.ENTERPRISEID
			INNER JOIN BAS_OPERATION				OPR	ON	OPR.OPERATIONID = COMP.OPERATIONID
														AND OPR.VALIDSTATE='Valid'
			INNER JOIN BOMLIST						BOL	ON	BOM.ASSEMBLYITEMID = BOL.ASSEMBLYITEMID
														AND	BOM.ASSEMBLYITEMVERSION = BOL.ASSEMBLYITEMVERSION
			LEFT OUTER JOIN BAS_PRODUCTITEMSPEC		SPC	ON	BOL.ASSEMBLYITEMID = SPC.ITEMID
														AND BOL.ASSEMBLYITEMVERSION = SPC.ITEMVERSION
			LEFT OUTER JOIN BAS_PROCESSSEGMENT		PRS	ON	OPR.PROCESSSEGMENTID = PRS.PROCESSSEGMENTID
			LEFT OUTER JOIN CMD_DICTIONARY			DIC	ON	PRS.PROCESSSEGMENTNAME = DIC.DICTIONARYID
														AND LANGUAGETYPE = 'ko_KR'
		)
      SELECT 
      		TOPASSEMBLYITEMID
      	,	TOPASSEMBLYITEMVERSION
      	,	TOPITEMNAME
      	,	SITE
      	,	USERSEQUENCE
      	,	PROCESSSEGMENTNAME
      	,	PARENTSASSEMBLYITEMID
      	,	PARENTSASSEMBLYITEMVERSION
      	,	PARENTSITEMNAME
      	,	LVL
      	,	ASSEMBLYITEMID
      	,	ASSEMBLYITEMVERSION
      	,	ITEMNAME
      	,	ASSEMBLYQTY
      	,	ASSEMBLYCALQTY 
      	,	UOM
      	,	PCSPNL
      	,	CONNECTPCSPNL
      	,	PCSMM
      FROM (
                SELECT ROWNUM AS RNUM, T.* FROM (
		SELECT
				IM1.ITEMNAME		AS TOPITEMNAME
			,	IM2.ITEMNAME		AS PARENTSITEMNAME
			,	IM3.ITEMNAME		AS ITEMNAME
		    ,	BL.* 
		FROM BOMLIST BL
		LEFT OUTER JOIN BAS_ITEMMASTER IM1 	ON BL.TOPASSEMBLYITEMID = IM1.ITEMID
										  	AND BL.TOPASSEMBLYITEMVERSION = IM1.ITEMVERSION
		LEFT OUTER JOIN BAS_ITEMMASTER IM2	ON BL.PARENTSASSEMBLYITEMID = IM2.ITEMID
											AND BL.PARENTSASSEMBLYITEMVERSION = IM2.ITEMVERSION
		LEFT OUTER JOIN BAS_ITEMMASTER IM3	ON BL.ASSEMBLYITEMID = IM3.ITEMID
											AND BL.ASSEMBLYITEMVERSION = IM3.ITEMVERSION
		ORDER BY BL.TOPASSEMBLYITEMID, BL.TOPASSEMBLYITEMVERSION , BL.BOMSEQUENCE
		) T
		WHERE 1=1 
        <if test= "P_END != null and P_END != ''">
             AND  ROWNUM <![CDATA[<= ]]> #{P_END}
        </if>
        ) WHERE 1=1
        <if test= "P_START != null and P_START != ''">
        AND  RNUM >= #{P_START}
        </if>
 
    </select>    
	<!-- 대용량 Excel 다운로드를 위한 전체 row수 Check-->
	<select id="selectBasAllCount" parameterType="map" resultType="hashmap">
		WITH	BOMLIST	(   
			TOPASSEMBLYITEMID
		,	TOPASSEMBLYITEMVERSION
		,	TOPBOMID
		,	PARENTSASSEMBLYITEMID
		,	PARENTSASSEMBLYITEMVERSION
		,	PARETNSBOMID
		,	PLANTID
		,	ASSEMBLYITEMID
		,	ASSEMBLYITEMVERSION
		,	BOMID
		,	UOM
		,	ASSEMBLYQTY
		,	ASSEMBLYCALQTY
		,	SITE
		,	PROCESSSEGMENTNAME
		,	USERSEQUENCE
		,	COMPONENTSEQUENCE
		,	BOMSEQUENCE
		,	LVL
		,	PCSPNL
		,	CONNECTPCSPNL
		,	PCSMM
		)	AS (
			SELECT
					TOP.ASSEMBLYITEMID	AS	TOPASSEMBLYITEMID
				,	TOP.ASSEMBLYITEMVERSION		AS	TOPASSEMBLYITEMVERSION
				,	TOP.ASSEMBLYBOMID			AS TOPBOMID
				,	''							AS PARENTSASSEMBLYITEMID
				,	''							AS PARENTSASSEMBLYITEMVERSION
				,	TOP.ASSEMBLYBOMID			AS PARENTSBOMID
				,	TOP.PLANTID					AS PLANTID
				,	TOP.ASSEMBLYITEMID			AS ASSEMBLYITEMID
				,	TOP.ASSEMBLYITEMVERSION		AS ASSEMBLYITEMVERSION
				,	TOP.ASSEMBLYBOMID			AS BOMID
				,	TOP.ASSEMBLYITEMUOM			AS UOM
				,	CAST(1 AS FLOAT)			AS ASSEMBLYQTY
				,	CAST(1 AS FLOAT)			AS ASSEMBLYCALQTY
				,	TOP.PLANTID					AS SITE
				,	''							AS PROCESSSEGMENTNAME
				,	''							AS USERSEQUENCE
				,	0							AS COMPONENTSEQUENCE
				,	'0000'			AS BOMSEQUENCE
				,	1							AS LVL
				,	SPC.PCSPNL					AS PCSPNL
				,	CEIL(SPC.PCSPNL)					AS CONNECTPCSPNL
				,	SPC.PCSMM					AS PCSMM
			FROM	BAS_ASSEMBLYBILLOFMATERIAL	TOP 
			left outer JOIN BAS_PRODUCTITEMSPEC 	SPC	ON	TOP.ASSEMBLYITEMID = SPC.ITEMID
														AND TOP.ASSEMBLYITEMVERSION = SPC.ITEMVERSION
			INNER JOIN BAS_PRODUCTDEFINITION		PRD	ON	TOP.ASSEMBLYITEMID = PRD.PRODUCTDEFID
														AND TOP.ASSEMBLYITEMVERSION = PRD.PRODUCTDEFVERSION
														AND PRD.PRODUCTCLASSID='Product'											
		UNION ALL
			SELECT
					BOL.TOPASSEMBLYITEMID
				,	BOL.TOPASSEMBLYITEMVERSION
				,	BOL.TOPBOMID
				,	BOM.ASSEMBLYITEMID			AS PARENTSASSEMBLYITEMID
				,	BOM.ASSEMBLYITEMVERSION		AS PARENTSASSEMBLYITEMVERSION
				,	BOM.ASSEMBLYBOMID			AS PARENTSBOMID
				,	COMP.PLANTID				AS PLANTID
				,	COMP.COMPONENTITEMID		AS ASSEMBLYITEMID
				,	COMP.COMPONENTITEMVERSION	AS ASSEMBLYITEMVERSION
				,	COMP.COMPONENTBOMID			AS BOMID
				,	COMP.COMPONENTUOM			AS UOM
				,	COMP.COMPONENTQTY			AS ASSEMBLYQTY
				,	BOL.ASSEMBLYQTY * COMP.COMPONENTQTY	AS ASSEMBLYCALQTY
				,	OPR.PLANTID					AS SITE
				,	DIC.DICTIONARYNAME		AS PROCESSSEGMENTNAME
				,	OPR.USERSEQUENCE			AS USERSEQUENCE
				,	COMP.COMPONENTSEQUENCE		AS COMPONENTSEQUENCE
				,	CASE WHEN BOL.BOMSEQUENCE != '0000'  THEN LPAD(BOL.BOMSEQUENCE,4,'0')||'+'|| LPAD(OPR.USERSEQUENCE,4,'0') || '+' || LPAD(COMP.COMPONENTSEQUENCE,4,'0') 
				    ELSE  LPAD(OPR.USERSEQUENCE,4,'0') || '+' || LPAD(COMP.COMPONENTSEQUENCE,4,'0') 
				    END AS BOMSEQUENCE
				,	BOL.LVL +1					AS LVL
				,	SPC.PCSPNL					AS PCSPNL
				,	CEIL(SPC.PCSPNL	* COMP.COMPONENTQTY)	AS CONNECTPCSPNL
				,	SPC.PCSMM
			FROM BAS_BOMCOMPONENT COMP
			INNER JOIN BAS_ASSEMBLYBILLOFMATERIAL	BOM	ON	COMP.ASSEMBLYBOMID = BOM.ASSEMBLYBOMID
														AND	COMP.ENTERPRISEID	=	BOM.ENTERPRISEID
			INNER JOIN BAS_OPERATION				OPR	ON	OPR.OPERATIONID = COMP.OPERATIONID
														AND OPR.VALIDSTATE='Valid'
			INNER JOIN BOMLIST						BOL	ON	BOM.ASSEMBLYITEMID = BOL.ASSEMBLYITEMID
														AND	BOM.ASSEMBLYITEMVERSION = BOL.ASSEMBLYITEMVERSION
			LEFT OUTER JOIN BAS_PRODUCTITEMSPEC		SPC	ON	BOL.ASSEMBLYITEMID = SPC.ITEMID
														AND BOL.ASSEMBLYITEMVERSION = SPC.ITEMVERSION
			LEFT OUTER JOIN BAS_PROCESSSEGMENT		PRS	ON	OPR.PROCESSSEGMENTID = PRS.PROCESSSEGMENTID
			LEFT OUTER JOIN CMD_DICTIONARY			DIC	ON	PRS.PROCESSSEGMENTNAME = DIC.DICTIONARYID
														AND LANGUAGETYPE = 'ko-KR'
		)
		SELECT
				count(1) 	AS ALLCOUNT
		FROM BOMLIST BL
		LEFT OUTER JOIN BAS_ITEMMASTER IM1 	ON BL.TOPASSEMBLYITEMID = IM1.ITEMID
										  	AND BL.TOPASSEMBLYITEMVERSION = IM1.ITEMVERSION
		LEFT OUTER JOIN BAS_ITEMMASTER IM2	ON BL.PARENTSASSEMBLYITEMID = IM2.ITEMID
											AND BL.PARENTSASSEMBLYITEMVERSION = IM2.ITEMVERSION
		LEFT OUTER JOIN BAS_ITEMMASTER IM3	ON BL.ASSEMBLYITEMID = IM3.ITEMID
											AND BL.ASSEMBLYITEMVERSION = IM3.ITEMVERSION
		ORDER BY BL.TOPASSEMBLYITEMID, BL.TOPASSEMBLYITEMVERSION , BL.BOMSEQUENCE
	</select>

</mapper>
