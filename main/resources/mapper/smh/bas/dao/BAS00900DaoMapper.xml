<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="smh.bas.dao.BAS00900Dao">
	<sql id="insertDictionary">
	BAS_COMMON_PKG.GENERATE_DICTIONARY
	</sql>

   <select id="selectReasonClassList" parameterType="map" resultType="hashmap">	    
	    	/* smh.bas.dao.BAS00900Dao.selectReasonClassList */
<if test="CMB_TYPE != null and CMB_TYPE != '' and !(CMB_TYPE eq ''.toString())  and !(CMB_TYPE eq 'VAL'.toString()) "> 
    SELECT
         NULL AS REASONCODECLASSID
        ,#{CMB_TYPE} AS REASONCODECLASSNAME_KR
        ,#{CMB_TYPE} AS REASONCODECLASSNAME_US
        ,#{CMB_TYPE} AS REASONCODECLASSNAME_CN
		,#{CMB_TYPE} AS REASONCODECLASSNAME_VN
        ,NULL	
        ,NULL
        ,NULL
        ,NULL
        ,NULL
        ,NULL
        ,NULL
        ,NULL
        ,NULL
        ,NULL
        ,#{CMB_TYPE} AS REASONCODECLASSNAME      
        ,NULL AS REASONCODECLASSNAME_KEY
                ,0 AS SEQ
                ,NULL AS CHK
    FROM DUAL
    UNION ALL
    </if>
    
		SELECT RC.REASONCODECLASSID
					,	D1.DICTIONARYNAME			AS REASONCODECLASSNAME_KR
					,	D2.DICTIONARYNAME			AS REASONCODECLASSNAME_US
					,	D3.DICTIONARYNAME			AS REASONCODECLASSNAME_CN
					,	D4.DICTIONARYNAME			AS REASONCODECLASSNAME_VN
					,	RC.DESCRIPTION
					,	RC.ENTERPRISEID
					,	RC.PLANTID
          			,	RC.REASONCODECLASSTYPE
					,	RC.PARENTREASONCODECLASSID
					,	U1.USER_NM		      AS CREATOR
			          , TO_CHAR(RC.CREATEDTIME, 'YYYY-MM-DD HH24:MI:SS') AS CREATEDTIME
			          , U2.USER_NM          AS MODIFIER
			          , TO_CHAR(RC.MODIFIEDTIME, 'YYYY-MM-DD HH24:MI:SS') AS MODIFIEDTIME
			          , RC.VALIDSTATE
			          , DIC.DICTIONARYNAME		AS REASONCODECLASSNAME
			          , RC.REASONCODECLASSNAME		AS REASONCODECLASSNAME_KEY
			          ,1 AS SEQ
					  ,NULL AS CHK
        FROM   BAS_REASONCODECLASS      RC
        LEFT OUTER JOIN CMD_DICTIONARY     D1  ON  RC.REASONCODECLASSNAME = D1.DICTIONARYID
                            AND D1.LANGUAGETYPE = 'ko-KR'
        LEFT OUTER JOIN CMD_DICTIONARY     D2  ON  RC.REASONCODECLASSNAME = D2.DICTIONARYID
                            AND D2.LANGUAGETYPE = 'en-US'
        LEFT OUTER JOIN CMD_DICTIONARY     D3  ON  RC.REASONCODECLASSNAME = D3.DICTIONARYID
                            AND D3.LANGUAGETYPE = 'zh-CN'
        LEFT OUTER JOIN CMD_DICTIONARY     D4  ON   RC.REASONCODECLASSNAME = D4.DICTIONARYID
                            AND D4.LANGUAGETYPE = 'vi-VN'
        LEFT OUTER JOIN CMD_DICTIONARY     DIC  ON  RC.REASONCODECLASSNAME = DIC.DICTIONARYID
                            AND DIC.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}
        LEFT OUTER JOIN CMD_USERS        U1  ON  RC.CREATOR = U1.USER_ID
        LEFT OUTER JOIN CMD_USERS        U2  ON  RC.MODIFIER = U2.USER_ID
        WHERE 1 = 1
		<choose>
	          <when test="CHK_REASONCODECLASSID != null and REASONCODECLASSID !='' ">
	          		AND   RC.REASONCODECLASSID = #{CHK_REASONCODECLASSID}
	          </when>
	          <otherwise>
		        <if test="REASONCODECLASSTYPE != null and REASONCODECLASSTYPE !='' ">
		        	AND    RC.REASONCODECLASSTYPE = #{REASONCODECLASSTYPE}
		        </if>        
	          	<if test="REASONCODECLASSID != null and REASONCODECLASSID !='' ">
		        	AND   RC.REASONCODECLASSID = #{REASONCODECLASSID}
		        </if>
		        <if test="VALIDSTATE != null and VALIDSTATE !='' ">
		        AND   RC.VALIDSTATE = #{VALIDSTATE}
		        </if>
	          		
	          </otherwise>
	    </choose>        
     ORDER BY SEQ,REASONCODECLASSID ASC
    </select>
    
    
     <select id="selectReasonList" parameterType="map" resultType="hashmap">	    
	    	/* smh.bas.dao.BAS00900Dao.selectReasonList */
		    	SELECT R.REASONCODEID
					,	D1.DICTIONARYNAME			AS REASONCODENAME_KR
					,	D2.DICTIONARYNAME			AS REASONCODENAME_US
					,	D3.DICTIONARYNAME			AS REASONCODENAME_CN
					,	D4.DICTIONARYNAME			AS REASONCODENAME_VN
					,	R.DESCRIPTION
					,	R.ENTERPRISEID
					,	R.PLANTID
					,	R.REASONCODECLASSID
					,	R.DISPLAYSEQUENCE
					,	U1.USER_NM 				AS CREATOR					
					, TO_CHAR(R.CREATEDTIME, 'YYYY-MM-DD HH24:MI:SS') AS CREATEDTIME
					,	U2.USER_NM 				AS MODIFIER					
					, TO_CHAR(R.MODIFIEDTIME, 'YYYY-MM-DD HH24:MI:SS') AS MODIFIEDTIME
					,	R.VALIDSTATE  
					,	NULL AS CHK
					,   R.REASONCODENAME AS	REASONCODENAME_KEY 
        FROM   BAS_REASONCODE  R
        LEFT OUTER JOIN CMD_DICTIONARY     D1  ON  R.REASONCODENAME = D1.DICTIONARYID
                            AND D1.LANGUAGETYPE = 'ko-KR'
        LEFT OUTER JOIN CMD_DICTIONARY     D2  ON  R.REASONCODENAME = D2.DICTIONARYID
                            AND D2.LANGUAGETYPE = 'en-US'
        LEFT OUTER JOIN CMD_DICTIONARY     D3  ON  R.REASONCODENAME = D3.DICTIONARYID
                            AND D3.LANGUAGETYPE = 'zh-CN'
        LEFT OUTER JOIN CMD_DICTIONARY     D4  ON   R.REASONCODENAME = D4.DICTIONARYID
                            AND D4.LANGUAGETYPE = 'vi-VN'
        LEFT OUTER JOIN CMD_USERS        U1  ON   R.CREATOR = U1.USER_ID
        LEFT OUTER JOIN CMD_USERS        U2  ON   R.MODIFIER = U2.USER_ID
        WHERE  1 = 1
        <if test="REASONCODECLASSID != null and REASONCODECLASSID !='' ">
        	AND   R.REASONCODECLASSID = #{REASONCODECLASSID}
        </if>                
        <if test="VALIDSTATE != null and VALIDSTATE !='' ">
        	<!-- AND   R.VALIDSTATE = #{VALIDSTATE} -->
        </if>
       ORDER BY R.REASONCODEID ASC
    </select>
    
     <select id="getParentReasonCodeClassId" parameterType="map" resultType="hashmap">	    
	    	/* smh.bas.dao.BAS00900Dao.getParentReasonCodeClassId */
		SELECT 	R.REASONCODECLASSID	AS CODE
    				,D1.DICTIONARYNAME		AS NAME
        FROM   BAS_REASONCODECLASS      R
        LEFT OUTER JOIN CMD_DICTIONARY     D1  ON  R.REASONCODECLASSNAME = D1.DICTIONARYID
                            AND D1.LANGUAGETYPE = #{SESSION_LANGUAGETYPE}        
        WHERE 1 = 1
				
        <if test="TXTREASONCODECLASSIDNAME != null and TXTREASONCODECLASSIDNAME !='' ">
        	AND		(UPPER(R.REASONCODECLASSID) LIKE UPPER('%' || #{TXTREASONCODECLASSIDNAME} || '%')
					OR		UPPER(D1.DICTIONARYNAME) LIKE UPPER('%' || #{TXTREASONCODECLASSIDNAME} || '%') )				
        </if>
        <if test="REASONCODECLASSID != null and REASONCODECLASSID !='' ">
        	AND   R.REASONCODECLASSID != #{REASONCODECLASSID}
        </if>                
        AND 	R.VALIDSTATE = 'Valid'
		ORDER BY R.REASONCODECLASSID
    </select>
    
   
    <select id="selectReasonChk" parameterType="map" resultType="hashmap">	    
	    	/* smh.bas.dao.BAS00900Dao.selectReasonChk */
		SELECT   REASONCODEID  
		 FROM   BAS_REASONCODE R
		WHERE   REASONCODECLASSID = #{CHK_REASONCODECLASSID}
    </select>
    
        <select id="selectReasonCodeChk" parameterType="map" resultType="hashmap">	    
	    	/* smh.bas.dao.BAS00900Dao.selectReasonCodeChk */
		SELECT   REASONCODEID  
		 FROM   BAS_REASONCODE R
		WHERE   REASONCODEID = #{REASONCODEID}
    </select>
    
    <select id="selectReasonChildChk" parameterType="map" resultType="hashmap">	    
	    	/* smh.bas.dao.BAS00900Dao.selectReasonChildChk */
			SELECT	REASONCODECLASSID
					,	REASONCODECLASSNAME
				FROM	BAS_REASONCODECLASS			
				WHERE	1 = 1				
				AND		PARENTREASONCODECLASSID = #{CHK_REASONCODECLASSID}
				AND 	VALIDSTATE = 'Valid'		
    </select>
    
  <insert id="insertReasonClass" parameterType="map">
  DECLARE
  BEGIN
    INSERT /* smh.bas.dao.BAS00900Dao.insertReasonClass */	INTO BAS_REASONCODECLASS
		     	(REASONCODECLASSID
				,REASONCODECLASSNAME
				,ENTERPRISEID
				,PLANTID
				,REASONCODECLASSTYPE
				,PARENTREASONCODECLASSID
				,DESCRIPTION
				,CREATOR
				,CREATEDTIME
				,MODIFIER
				,MODIFIEDTIME
				,LASTTXNHISTKEY
				,LASTTXNID
				,LASTTXNUSER
				,LASTTXNTIME
				,LASTTXNCOMMENT
				,VALIDSTATE
				)
			VALUES
				(#{REASONCODECLASSID}
				,#{REASONCODECLASSNAME_KEY}
				,#{SESSION_ENTERPRISEID}
				,#{SESSION_SITETYPE}
				,#{REASONCODECLASSTYPE}
				,#{PARENTREASONCODECLASSID}
				,#{DESCRIPTION}
				,#{CREATOR}
				,SYSDATE
				,#{MODIFIER}
				,SYSDATE
				,#{LASTTXNHISTKEY}
				,#{LASTTXNID}
				,#{CREATOR}
				,SYSDATE
				,#{LASTTXNCOMMENT}
				,#{VALIDSTATE}
			);
		    	
		<!-- 다국어 테이블 저장용 -->							
				IF #{REASONCODECLASSNAME_KR} IS NOT NULL THEN <include refid="insertDictionary" />('BAS_REASONCODECLASS','ko-KR',#{REASONCODECLASSNAME_KEY}, #{CREATOR}, #{REASONCODECLASSNAME_KR}); END IF;
				IF #{REASONCODECLASSNAME_US} IS NOT NULL THEN <include refid="insertDictionary" />('BAS_REASONCODECLASS','en-US',#{REASONCODECLASSNAME_KEY}, #{CREATOR}, #{REASONCODECLASSNAME_US}); END IF;
				IF #{REASONCODECLASSNAME_CN} IS NOT NULL THEN <include refid="insertDictionary" />('BAS_REASONCODECLASS','zh-CN',#{REASONCODECLASSNAME_KEY}, #{CREATOR}, #{REASONCODECLASSNAME_CN}); END IF;
				IF #{REASONCODECLASSNAME_VN} IS NOT NULL THEN <include refid="insertDictionary" />('BAS_REASONCODECLASS','vi-VN',#{REASONCODECLASSNAME_KEY}, #{CREATOR}, #{REASONCODECLASSNAME_VN}); END IF;
			<!-- 다국어 테이블 저장용 -->
		END;
    </insert>  
    
  <update id="updateReasonClass" parameterType="map">
  DECLARE
  BEGIN  		
     /* smh.bas.dao.BAS00900Dao.updateReasonClass */	
     UPDATE BAS_REASONCODECLASS SET
     		 REASONCODECLASSTYPE = #{REASONCODECLASSTYPE}
			,PARENTREASONCODECLASSID = #{PARENTREASONCODECLASSID}								
			,DESCRIPTION = #{DESCRIPTION}	     
			,VALIDSTATE			=#{VALIDSTATE}
			,MODIFIER			=#{MODIFIER}
			,MODIFIEDTIME		=SYSDATE
			,LASTTXNHISTKEY	=#{LASTTXNHISTKEY}
			,LASTTXNID			=#{LASTTXNID}
			,LASTTXNUSER		=#{MODIFIER}
			,LASTTXNTIME		=SYSDATE
	WHERE REASONCODECLASSID = #{REASONCODECLASSID};		    	
			<!-- 다국어 테이블 저장용 -->							
				IF #{REASONCODECLASSNAME_KR} IS NOT NULL THEN <include refid="insertDictionary" />('BAS_REASONCODECLASS','ko-KR',#{REASONCODECLASSNAME_KEY}, #{CREATOR}, #{REASONCODECLASSNAME_KR}); END IF;
				IF #{REASONCODECLASSNAME_US} IS NOT NULL THEN <include refid="insertDictionary" />('BAS_REASONCODECLASS','en-US',#{REASONCODECLASSNAME_KEY}, #{CREATOR}, #{REASONCODECLASSNAME_US}); END IF;
				IF #{REASONCODECLASSNAME_CN} IS NOT NULL THEN <include refid="insertDictionary" />('BAS_REASONCODECLASS','zh-CN',#{REASONCODECLASSNAME_KEY}, #{CREATOR}, #{REASONCODECLASSNAME_CN}); END IF;
				IF #{REASONCODECLASSNAME_VN} IS NOT NULL THEN <include refid="insertDictionary" />('BAS_REASONCODECLASS','vi-VN',#{REASONCODECLASSNAME_KEY}, #{CREATOR}, #{REASONCODECLASSNAME_VN}); END IF;
			<!-- 다국어 테이블 저장용 -->
		END;
    </update>   
    
    <delete id="deleteReasonClass" parameterType="map" >
     /* smh.bas.dao.BAS00900Dao.deleteReasonClass */  
    DECLARE 
    BEGIN
    	DELETE  FROM BAS_REASONCODECLASS	WHERE REASONCODECLASSID = #{CHK_REASONCODECLASSID};
    	
    	DELETE  FROM CMD_DICTIONARY 			WHERE DICTIONARYID = #{REASONCODECLASSNAME_KEY};
    END;
    </delete>
    
    
      <insert id="insertReason" parameterType="map">
  DECLARE
  BEGIN
    INSERT /* smh.bas.dao.BAS00900Dao.insertReason */	INTO BAS_REASONCODE
		     	(REASONCODEID
				,REASONCODECLASSID
				,REASONCODENAME
				,ENTERPRISEID
				,PLANTID
				,DISPLAYSEQUENCE
				,DESCRIPTION
				,CREATOR
				,CREATEDTIME
				,MODIFIER
				,MODIFIEDTIME
				,LASTTXNHISTKEY
				,LASTTXNID
				,LASTTXNUSER
				,LASTTXNTIME
				,LASTTXNCOMMENT
				,VALIDSTATE
				)
			VALUES
				(#{REASONCODEID}
				,#{REASONCODECLASSID}
				,#{REASONCODENAME_KEY}
				,#{ENTERPRISEID}
				,#{PLANTID}
				,#{DISPLAYSEQUENCE}
				,#{DESCRIPTION}
				,#{CREATOR}
				,SYSDATE
				,#{MODIFIER}
				,SYSDATE
				,#{LASTTXNHISTKEY}
				,#{LASTTXNID}
				,#{CREATOR}
				,SYSDATE
				,#{LASTTXNCOMMENT}
				,#{VALIDSTATE}
			);
		    	
		<!-- 다국어 테이블 저장용 -->							
				IF #{REASONCODENAME_KR} IS NOT NULL THEN <include refid="insertDictionary" />('BAS_REASONCODE','ko-KR',#{REASONCODENAME_KEY}, #{CREATOR}, #{REASONCODENAME_KR}); END IF;
				IF #{REASONCODENAME_US} IS NOT NULL THEN <include refid="insertDictionary" />('BAS_REASONCODE','en-US',#{REASONCODENAME_KEY}, #{CREATOR}, #{REASONCODENAME_US}); END IF;
				IF #{REASONCODENAME_CN} IS NOT NULL THEN <include refid="insertDictionary" />('BAS_REASONCODE','zh-CN',#{REASONCODENAME_KEY}, #{CREATOR}, #{REASONCODENAME_CN}); END IF;
				IF #{REASONCODENAME_VN} IS NOT NULL THEN <include refid="insertDictionary" />('BAS_REASONCODE','vi-VN',#{REASONCODENAME_KEY}, #{CREATOR}, #{REASONCODENAME_VN}); END IF;
			<!-- 다국어 테이블 저장용 -->
		END;
    </insert>  
    
  <update id="updateReason" parameterType="map">
  DECLARE
  BEGIN  		
     /* smh.bas.dao.BAS00900Dao.updateReason */	
     UPDATE BAS_REASONCODE SET
     		 DISPLAYSEQUENCE = #{DISPLAYSEQUENCE}
			,DESCRIPTION 		= #{DESCRIPTION}	     
			,VALIDSTATE			=#{VALIDSTATE}
			,MODIFIER			=#{MODIFIER}
			,MODIFIEDTIME		=SYSDATE
			,LASTTXNHISTKEY	=#{LASTTXNHISTKEY}
			,LASTTXNID			=#{LASTTXNID}
			,LASTTXNUSER		=#{MODIFIER}
			,LASTTXNTIME		=SYSDATE
	WHERE REASONCODEID = #{REASONCODEID};		    	
			<!-- 다국어 테이블 저장용 -->							
				IF #{REASONCODENAME_KR} IS NOT NULL THEN <include refid="insertDictionary" />('BAS_REASONCODE','ko-KR',#{REASONCODENAME_KEY}, #{CREATOR}, #{REASONCODENAME_KR}); END IF;
				IF #{REASONCODENAME_US} IS NOT NULL THEN <include refid="insertDictionary" />('BAS_REASONCODE','en-US',#{REASONCODENAME_KEY}, #{CREATOR}, #{REASONCODENAME_US}); END IF;
				IF #{REASONCODENAME_CN} IS NOT NULL THEN <include refid="insertDictionary" />('BAS_REASONCODE','zh-CN',#{REASONCODENAME_KEY}, #{CREATOR}, #{REASONCODENAME_CN}); END IF;
				IF #{REASONCODENAME_VN} IS NOT NULL THEN <include refid="insertDictionary" />('BAS_REASONCODE','vi-VN',#{REASONCODENAME_KEY}, #{CREATOR}, #{REASONCODENAME_VN}); END IF;
			<!-- 다국어 테이블 저장용 -->
		END;
    </update>   
    
    <delete id="deleteReason" parameterType="map" >
     /* smh.bas.dao.BAS00900Dao.deleteReason */  
    DECLARE 
    BEGIN
    	DELETE  FROM BAS_REASONCODE	WHERE REASONCODEID = #{REASONCODEID};
    	
    	DELETE  FROM CMD_DICTIONARY 	WHERE DICTIONARYID = #{REASONCODENAME_KEY};
    END;
    </delete>
</mapper>