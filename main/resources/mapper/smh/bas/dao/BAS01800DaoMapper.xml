<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="smh.bas.dao.BAS01800Dao">
<!-- 마스터품목(사양) 정보-->

   <!-- 마스터품목(사양) 정보 등록 -->
    <insert id="insertBasItemMaster" parameterType="map">
	    INSERT /* smh.bas.dao.BAS01800Dao.insertBasItemMaster */ INTO BAS_ITEMMASTER
			    (MASTERDATACLASSID
				,ITEMID
				,ITEMVERSION
				,ENTERPRISEID
				,PLANTID
				,MODELCODE
				,ITEMNAME
				,UOMDEFID
				,STATUS
				,CONSUMABLETYPE
				,PRODUCTIONTYPE
				,ITEMTYPE
				,LOTCONTROL
				,CREATOR
				,CREATEDTIME
				,MODIFIER
				,MODIFIEDTIME
				,LASTTXNHISTKEY
				,LASTTXNID
				,LASTTXNUSER
				,LASTTXNTIME
				,LASTTXNCOMMENT
				,VALIDSTATE)
				VALUES
				(
				#{MASTERDATACLASSID}
				,#{ITEMID}
				,#{ITEMVERSION}
				,#{ENTERPRISEID}
				,#{PLANTID}
				,#{MODELCODE}
				,#{ITEMNAME}
				,#{ITEMUOM}
				,#{ITEMSTATUS}
				,#{CONSUMABLETYPE}
				,#{PRODUCTIONTYPE}
				,#{ITEMTYPE}
				,#{LOTCONTROL}
				,#{CREATOR}
				,SYSDATE
				,#{MODIFIER}
				,SYSDATE
				,#{LASTTXNHISTKEY}
				,#{LASTTXNID}
				,#{CREATOR}
				,SYSDATE
				,#{LASTTXNCOMMENT}
				,#{VALIDSTATE}
				)
    </insert>

  <!-- 마스터품목(사양) 정보 등록 -->
    <insert id="insertProductDef" parameterType="map">
	    INSERT /* smh.bas.dao.BAS01800Dao.insertProductDef */ INTO BAS_PRODUCTDEFINITION
			    (PRODUCTDEFID
				,PRODUCTDEFVERSION
				,PRODUCTCLASSID
				,PRODUCTDEFNAME
				,ENTERPRISEID
				,PLANTID
				,PRODUCTDEFTYPE
				,PRODUCTIONTYPE
				,PRODUCTSHAPE
				,LEADTIME
				,UNIT
				,CUSTOMERID
				,LAYER
				,MATERIALCLASS
				,DESCRIPTION
				,CREATOR
				,CREATEDTIME
				,MODIFIER
				,MODIFIEDTIME
				,LASTTXNHISTKEY
				,LASTTXNID
				,LASTTXNUSER
				,LASTTXNTIME
				,LASTTXNCOMMENT
				,VALIDSTATE
				,MATERIALSEQUENCE
				,OWNERFACTORYID)
				VALUES
				(
				 #{PRODUCTDEFID}
				,#{PRODUCTDEFVERSION}
				,#{PRODUCTCLASSID}
				,#{PRODUCTDEFNAME}
				,#{ENTERPRISEID}
				,#{PLANTID}
				,#{PRODUCTDEFTYPE}
				,#{PRODUCTIONTYPE}
				,#{PRODUCTSHAPE}
				,#{LEADTIME}
				,#{ITEMUOM}
				,#{CUSTOMERID}
				,#{LAYER}				
				,#{MATERIALCLASS}
				,#{DESCRIPTION}
				,#{CREATOR}
				,SYSDATE
				,#{MODIFIER}
				,SYSDATE
				,#{LASTTXNHISTKEY}
				,#{LASTTXNID}
				,#{CREATOR}
				,SYSDATE
				,#{LASTTXNCOMMENT}
				,#{VALIDSTATE}
				,#{MATERIALSEQUENCE}
				,#{OWNERFACTORYID}				
				)
    </insert>
    
<!-- 마스터품목(사양) Spec 정보 등록 -->
    <insert id="insertProductSpec" parameterType="map">
	    INSERT /* smh.bas.dao.BAS01800Dao.insertProductSpec */ INTO BAS_PRODUCTITEMSPEC
			    (ITEMID
				,ITEMVERSION
				,ENTERPRISEID
				,PLANTID
				,PRODUCTTYPE
				,FACTORYID
				,CUSTOMERID
				,CUSTOMERNAME
				,LAYER
				,PRODUCTRATING
				,JOBTYPE
				,PRODUCTIONTYPE
				,CREATOR
				,CREATEDTIME
				,MODIFIER
				,MODIFIEDTIME
				,LASTTXNHISTKEY
				,LASTTXNID
				,LASTTXNUSER
				,LASTTXNTIME
				,VALIDSTATE
				,ITEMACCOUNT
				,ITEMKIND)
				VALUES
				(
				 #{ITEMID}
				,#{ITEMVERSION}
				,#{ENTERPRISEID}
				,#{PLANTID}
				,#{PRODUCTTYPE}
				,#{FACTORYID}
				,#{CUSTOMERID}
				,#{CUSTOMERNAME}
				,#{LAYER}
				,#{PRODUCTRATING}
				,#{JOBTYPE}
				,#{PRODUCTIONTYPE}
				,#{CREATOR}
				,SYSDATE
				,#{MODIFIER}
				,SYSDATE
				,#{LASTTXNHISTKEY}
				,#{LASTTXNID}
				,#{MODIFIER}
				,SYSDATE
				,#{VALIDSTATE}
				,#{ITEMACCOUNT}
				,#{ITEMKIND}
				)
    </insert>
    
<!-- 마스터품목(사양) Class 정보 등록 -->
    <insert id="insertProductClass" parameterType="map">
	    INSERT /* smh.bas.dao.BAS01800Dao.insertProductClass */ INTO BAS_PRODUCTCLASS
			   (PRODUCTCLASSID
				,PRODUCTCLASSNAME
				,DESCRIPTION
				,ENTERPRISEID
				,PLANTID
				,PRODUCTCLASSTYPE
				,PARENTPRODUCTCLASSID
				,CREATOR
				,CREATEDTIME
				,MODIFIER
				,MODIFIEDTIME
				,LASTTXNHISTKEY
				,LASTTXNID
				,LASTTXNUSER
				,LASTTXNTIME
				,LASTTXNCOMMENT
				,VALIDSTATE)
				VALUES
				(
				 NVL(#{PRODUCTCLASSID}, '***')
				,#{PRODUCTCLASSNAME}
				,#{DESCRIPTION}
				,#{ENTERPRISEID}
				,#{PLANTID}
				,#{PRODUCTCLASSTYPE}
				,#{PARENTPRODUCTCLASSID}
				,#{CREATOR}
				,SYSDATE
				,#{MODIFIER}
				,SYSDATE
				,#{LASTTXNHISTKEY}
				,#{LASTTXNID}
				,#{MODIFIER}
				,SYSDATE
				,#{LASTTXNCOMMENT}
				,#{VALIDSTATE}
				)
    </insert>
    <!-- 마스터품목(사양) 정보 변경 -->
    <update id="updateBasItemMaster" parameterType="map" >
	    UPDATE /* smh.bas.dao.BAS01800Dao.updateBasItemMaster */ BAS_MASTERDATACLASS 
	    SET 
	         MASTERDATACLASSNAME = #{MASTERDATACLASSNAME}     
	        ,ITEMOWNER = #{ITEMOWNER}     
	        ,MESITEMTYPE = #{MESITEMTYPE}     
	        ,DESCRIPTION = #{DESCRIPTION}                     
	        ,MODIFIER = #{MODIFIER}     
	        ,MODIFIEDTIME = SYSDATE     
	        ,LOTCONTROL = #{LOTCONTROL}
	        <!-- ,LASTTXNHISTKEY = #{LASTTXNHISTKEY}     
	        ,LASTTXNID = #{LASTTXNID}     
	        ,LASTTXNUSER = #{LASTTXNUSER}     
	        ,LASTTXNTIME = #{LASTTXNTIME}     
	        ,LASTTXNCOMMENT = #{LASTTXNCOMMENT}  -->     
	        ,VALIDSTATE = #{VALIDSTATE}
	    WHERE ENTERPRISEID = #{ENTERPRISEID}
	    AND   MASTERDATACLASSID = #{MASTERDATACLASSID}
    </update>

    <!-- 마스터품목(사양) 정보 삭제 -->
    <update id="deleteBasItemMaster" parameterType="map" > 
	    DELETE /* smh.bas.dao.BAS01800Dao.deleteBasItemMaster */ FROM BAS_MASTERDATACLASS 
	    WHERE ENTERPRISEID = #{ENTERPRISEID}
	    AND MASTERDATACLASSID = #{MASTERDATACLASSID}
    </update>

    <!-- 마스터품목(사양) 정보 조회-->
    <select id="selectBasItemMasterList" parameterType="map" resultType="hashmap">
   		<![CDATA[
			SELECT /* smh.bas.dao.BAS01800Dao.selectBasItemMasterList */
				            NULL AS CHK
				          ,  IM.ITEMID
				          ,  IM.ITEMVERSION
				          ,  IM.ENTERPRISEID
				          ,  CUSER.PLANTID
				          ,  IM.MASTERDATACLASSID       /*  품목유형 */
				          ,  IM.ITEMNAME                    /*  품명 */
				          ,  IM.UOMDEFID                       AS ITEMUOM /*  품목단위 */
				          ,  IM.NEWREQUEST
				          ,  IM.ENGINEERINGCHANGE
				          ,  IM.IMPLEMENTATIONDATE
				          ,  IM.STATUS                         AS ITEMSTATUS 
				          ,  IM.PRODUCTIONTYPE                 
				          ,  IM.ITEMTYPE
				          ,   PIS.LAYER                       /*  층 */
				          ,  IM.COSTCATEGORY
				          ,  IM.SALEORDERCATEGORY            /*  판매범주 */
				          ,  IM.INVENTORYCATEGORY            /*  자재범주   */
				          ,  IM.MAKEBUYTYPE                  /*  MAKEBUYTYPE */
				          ,  IM.PLANNER                      /*  계획자 */
				          ,  IM.UNITOFPURCHASING
				          ,  IM.UNITOFSTOCK
				          ,  IM.SPEC
				          ,  IM.PRICE
				          ,  IM.AGING
				          ,  IM.AGINGDAY
				          ,  IM.CYCLECOUNT
				          ,  IM.ENDTYPE
				          ,  IM.LOTCONTROL
				          ,  IM.DESCRIPTION
				          ,  CUSER.USER_NM  CREATOR                      /*  생성자 */
				          ,  TO_CHAR(IM.CREATEDTIME, 'YYYY-MM-DD HH24:MI:SS') AS CREATEDTIME 
				          ,  MUSER.USER_NM  MODIFIER
				          ,  TO_CHAR(IM.MODIFIEDTIME, 'YYYY-MM-DD HH24:MI:SS') AS MODIFIEDTIME
				          ,  IM.LASTTXNHISTKEY
				          ,  IM.LASTTXNID
				          ,  IM.LASTTXNUSER
				          ,  IM.LASTTXNTIME
				          ,  IM.LASTTXNCOMMENT
				          ,  IM.VALIDSTATE
				          ,   IM.LEADTIME
				          ,   IM.TACTTIME
				          ,   PUSER.USER_NM NM_PLANNER      /* 계획자명 */
				          ,   CUSER.USER_NM NM_CREATOR      /*생성자명   */
				          ,   SFMUSER.USER_NM NM_SPECIFICATIO /*사양자명 */
				          ,   IM.CONSUMABLETYPE
				          ,   PIS.CUSTOMERID                /*고객코드 */
				          ,   CUST.CUSTOMERNAME              /*고객명 */
				          ,   PIS.PRODUCTTYPE
				          ,   PIS.PRODUCTRATING  
				          ,   PIS.JOBTYPE
				          /* ,   PIS.PRODUCTIONTYPE  */
				          /* ,   PIS.RTRSHT*/
				          ,   PIS.FACTORYID
				          ,  MDC.IDCLASSID AS IDCLASSIDRULE
				          ,  SL.INPUTLOT   AS ISINPUT /*투입여부 */  
				          /* UFN_COM_SELECTISPRODUCTINPUT(IM.ITEMID, IM.ITEMVERSION)    AS ISINPUT */ /*투입여부 */                          
				        FROM  BAS_ITEMMASTER              IM 
				        INNER JOIN BAS_MASTERDATACLASS MDC    ON   MDC.MASTERDATACLASSID = IM.MASTERDATACLASSID
				        LEFT OUTER JOIN BAS_PRODUCTITEMSPEC PIS     ON  IM.ENTERPRISEID = PIS.ENTERPRISEID
				                                                   AND IM.ITEMID = PIS.ITEMID
				                                                   AND IM.ITEMVERSION = PIS.ITEMVERSION
				        LEFT OUTER JOIN CMD_USERS            PUSER   ON  IM.ENTERPRISEID = PUSER.ENTERPRISEID
				                                                   AND IM.PLANNER =  PUSER.USER_ID  
				        LEFT OUTER JOIN CMD_USERS            CUSER   ON  IM.ENTERPRISEID = CUSER.ENTERPRISEID
				                                                   AND IM.CREATOR =  CUSER.USER_ID                                                 
				        LEFT OUTER JOIN CMD_USERS            MUSER   ON  IM.ENTERPRISEID = CUSER.ENTERPRISEID
				                                                   AND IM.MODIFIER =  MUSER.USER_ID                                                 
				        LEFT OUTER JOIN BAS_CUSTOMER        CUST    ON  PIS.ENTERPRISEID = CUST.ENTERPRISEID 
				                                                   AND PIS.PLANTID = CUST.PLANTID
				                                                   AND PIS.CUSTOMERID =  CUST.CUSTOMERID  
				        LEFT OUTER JOIN CMD_USERS            SFMUSER   ON  PIS.ENTERPRISEID = SFMUSER.ENTERPRISEID
				                                                   AND PIS.SPECIFICATIONMAN =  SFMUSER.USER_ID  
				        LEFT OUTER JOIN ( SELECT PRODUCTDEFID, PRODUCTDEFVERSION , 'Y' AS INPUTLOT
				                            FROM PCM_LOT 
				                           WHERE LOTSTATE <> 'Created'
				                           GROUP BY PRODUCTDEFID, PRODUCTDEFVERSION  ) SL ON SL.PRODUCTDEFID = IM.ITEMID
				                                                                         AND SL.PRODUCTDEFVERSION  = IM.ITEMVERSION                                                  
				        WHERE  1=1         
				        AND MDC.ITEMOWNER = 'Specifications'				        
        ]]>
        
        
        <if test="DETAIL_ITEMID != null and DETAIL_ITEMID !='' ">
        	AND IM.ITEMID = #{DETAIL_ITEMID}
        </if>
        <if test="DETAIL_ITEMVERSION != null and DETAIL_ITEMVERSION !='' ">
        	AND IM.ITEMVERSION = #{DETAIL_ITEMVERSION}
        </if>
	    <if test="ENTERPRISEID != null and ENTERPRISEID !='' "> 
	        AND IM.ENTERPRISEID = #{ENTERPRISEID}
	    </if>    
	    <if test="P_PRODUCTDEFID != null and P_PRODUCTDEFID !='' "> 
		    AND EXISTS
		                        (
	                            SELECT  1
	                            FROM    UFN_SELECTSTRINGTOSPLIT(#{P_PRODUCTDEFID} ||',' , ',')      LMP
	                            WHERE   IM.ITEMID = LMP.VALUE
	                        )	        
	    </if>    
	    <if test="P_PRODUCTDEFNAME != null and P_PRODUCTDEFNAME !='' "> 
		    AND EXISTS
		                        (
	                            SELECT  1
	                            FROM    UFN_SELECTSTRINGTOSPLIT(#{P_PRODUCTDEFNAME} ||',' , ',')      LMP
	                            WHERE   UPPER(IM.ITEMNAME) LIKE UPPER(LMP.VALUE)
	                        )	        
	    </if>
	    <if test="P_ITEMSTATE != null and P_ITEMSTATE !='' ">
	    	  <choose>
		          <when test="P_ITEMSTATE eq 'Active'.toString()">
		          		AND	IM.STATUS = #{P_ITEMSTATE} AND IM.VALIDSTATE = 'Valid'
		          </when>
		          <otherwise>
		          		AND	IM.STATUS = #{P_ITEMSTATE} AND IM.VALIDSTATE = 'Invalid'
		          </otherwise>
	          </choose>	    	
	    </if>
		<if test="CUSTOMER != null and CUSTOMER !='' ">
				AND	PIS.CUSTOMERID = #{CUSTOMER}
		</if>
		<if test="P_PERIOD_PERIODFR != null and P_PERIOD_PERIODFR !='' ">
			<![CDATA[
				AND	IM.CREATEDTIME >= to_timestamp( #{P_PERIOD_PERIODFR} || ' 00:00:00','YYYY-MM-DD HH24:MI:SS')
			]]>
		</if>
		<if test="P_PERIOD_PERIODTO != null and P_PERIOD_PERIODTO !='' ">
			<![CDATA[
				AND	IM.CREATEDTIME <= to_timestamp( #{P_PERIOD_PERIODTO} || ' 23:59:59','YYYY-MM-DD HH24:MI:SS')
			]]>
		</if>
		<if test="P_MODELCODE != null and P_MODELCODE !='' ">
				AND	UPPER(IM.ITEMID) LIKE UPPER('%' || #{P_MODELCODE} || '%')
		</if>

 		<choose>
		          <when test="P_CONDITIONITEM != null and P_CONDITIONITEM !='' ">
			    	  <choose>
				          <when test="P_CONDITIONITEM eq 'SALEORDERCATEGORY'.toString()">
				          		AND	UPPER(IM.SALEORDERCATEGORY) LIKE UPPER('%' || #{P_CONDITIONVALUE} || '%')
				          </when>
				          <when test="P_CONDITIONITEM eq 'INVENTORYCATEGORY'.toString()">
				          		AND	UPPER(IM.INVENTORYCATEGORY) LIKE UPPER('%' || #{P_CONDITIONVALUE} || '%')
				          </when>
				          <!-- <when test="P_CONDITIONITEM eq 'MAKEBUYTYPE'.toString()">
				          		AND	UPPER(IM.MAKEBUYTYPE) LIKE UPPER('%' || #{P_CONDITIONVALUE} || '%')
				          </when> -->
				          <!-- <when test="P_CONDITIONITEM eq 'PLANNER'.toString()">
				          		AND	UPPER(IM.PLANNER) LIKE UPPER('%' || #{P_CONDITIONVALUE} || '%')
				          		OR UPPER(PUSER.USER_NM) LIKE UPPER('%' || #{P_CONDITIONVALUE} || '%')
				          </when> -->
				          <when test="P_CONDITIONITEM eq 'CREATOR'.toString()">
				          		AND	UPPER(IM.CREATOR) LIKE UPPER('%' || #{P_CONDITIONVALUE} || '%')
				          		OR UPPER(CUSER.USER_NM) LIKE UPPER('%' || #{P_CONDITIONVALUE} || '%')
				          </when>
				          <!-- <when test="P_CONDITIONITEM eq 'SPECIFICATIONMAN'.toString()">
				          		AND	UPPER(PIS.SPECIFICATIONMAN) LIKE UPPER('%' || #{P_CONDITIONVALUE} || '%')
				          		OR UPPER(SFMUSER.USER_NM) LIKE UPPER('%' || #{P_CONDITIONVALUE} || '%')
				          </when> -->
			          </choose>
	          </when>
	          <otherwise>
	          	<if test="P_CONDITIONVALUE != null and P_CONDITIONVALUE !='' ">
	          		AND	(
	          					UPPER(IM.SALEORDERCATEGORY) LIKE UPPER('%' || #{P_CONDITIONVALUE} || '%')
	          				OR UPPER(IM.INVENTORYCATEGORY) LIKE UPPER('%' || #{P_CONDITIONVALUE} || '%')
	          				OR (UPPER(IM.CREATOR) LIKE UPPER('%' || #{P_CONDITIONVALUE} || '%')
				          		OR UPPER(CUSER.USER_NM) LIKE UPPER('%' || #{P_CONDITIONVALUE} || '%'))
	          				)
	          	</if>
	          </otherwise>	
	    </choose>		
		<if test="SEARCH != null and SEARCH !='' ">
				AND	UPPER(IM.ITEMID) LIKE UPPER('%' || #{SEARCH} || '%')
		          		OR UPPER(PUSER.ITEMNAME) LIKE UPPER('%' || #{SEARCH} || '%')
		</if>
		<if test="P_PRODUCTDEFTYPE != null and P_PRODUCTDEFTYPE !='' ">
				AND	IM.MASTERDATACLASSID =  #{P_PRODUCTDEFTYPE} 
		</if>		
		<if test="P_LAYER != null and P_LAYER !='' ">
				AND	PIS.LAYER =  #{P_LAYER} 
		</if>			
		ORDER BY IM.ITEMID
    </select>    

    <!-- 마스터품목(사양) 저장 -->
	<select id="saveBasItemMaster"  statementType="CALLABLE" parameterType="map">
		{call   /* smh.bas.dao.BAS01800Dao.saveBasItemMaster */	
				BAS_01800_PKG.SAVE(#{WRK_TP}
										,#{SESSION_ENTERPRISEID}
										,#{SESSION_SITETYPE}
										,#{ITEMID}
										,#{ITEMVERSION}
										,#{ITEMNAME}
										,#{MASTERDATACLASSID}
										,#{CONSUMABLETYPE}
										,#{PRODUCTRATING}
										,#{PRODUCTTYPE}
										,#{LAYER}
										,#{SALEORDERCATEGORY}
										,#{CUSTOMERID}
										,#{CUSTOMERNAME}
										,#{JOBTYPE}										
										,#{PRODUCTIONTYPE}
										,#{ITEMUOM}
										,#{ITEMSTATUS}
										,#{VALIDSTATE}
										,#{CREATOR}
										,#{MODIFIER}
										,#{LASTTXNHISTKEY}
									    ,#{LASTTXNID}
									    ,#{SESSION_LANGUAGETYPE}
									    ,#{MODELCODE}
									    ,#{LOTCONTROL}
										,#{O_RESULT_CODE,mode=OUT,jdbcType=VARCHAR ,javaType=string}
										,#{O_RESULT_MSG,mode=OUT,jdbcType=VARCHAR ,javaType=string}
										)
	     }
    </select>
    
    <!-- 마스터품목(사양) 복사 검증-->
	<select id="copyValidationBasItemMaster"  statementType="CALLABLE" parameterType="map">
		{call   /* smh.bas.dao.BAS01800Dao.copyValidationBasItemMaster */
				BAS_01800_PKG.COPY_VALIDATION( #{ITEMID_TO}
															,#{ITEMREV_TO}
															,#{SESSION_ENTERPRISEID}										
															,#{O_RESULT_CODE,mode=OUT,jdbcType=VARCHAR ,javaType=string}
															,#{O_RESULT_MSG,mode=OUT,jdbcType=VARCHAR ,javaType=string}
															)
	     }
    </select>
    
	<!-- 마스터품목(사양) 복사 -->
	<select id="copyBasItemMaster"  statementType="CALLABLE" parameterType="map">
		{call   /* smh.bas.dao.BAS01800Dao.copyBasItemMaster */
				BAS_01800_PKG.COPY(#{ITEMID_FR}
										  ,#{ITEMREV_FR}
				 						  ,#{ITEMID_TO}
										  ,#{ITEMREV_TO}
										  ,#{SESSION_ENTERPRISEID}
										  ,#{SESSION_SITETYPE}
										  ,#{CREATOR}
										  ,#{MODIFIER}
										  ,#{LASTTXNHISTKEY}
										  ,#{O_RESULT_CODE,mode=OUT,jdbcType=VARCHAR ,javaType=string}
										  ,#{O_RESULT_MSG,mode=OUT,jdbcType=VARCHAR ,javaType=string}
										)
	     }
    </select>
	<!-- 반제품 채번 검증-->
    <select id="selectCompareSemiProductByProduct" parameterType="map" resultType="hashmap">
   			SELECT /* smh.bas.dao.BAS01800Dao.selectCompareSemiProductByProduct */		
					   ITEMID
			 FROM BAS_ITEMMASTER 
			WHERE 1=1
			   AND MASTERDATACLASSID = 'SubAssembly'
			   AND PRODUCTIONTYPE = 'Production'
			   AND VALIDSTATE = 'Valid'	
	    <if test="ENTERPRISEID != null and ENTERPRISEID !='' "> 
	        AND ENTERPRISEID = #{ENTERPRISEID}
	    </if>    
	    <if test="PRODUCTCODEVERSION != null and PRODUCTCODEVERSION !='' "> 
	        AND ITEMVERSION = #{PRODUCTCODEVERSION}
	    </if>    
	    <if test="PRODUCTCODEID != null and PRODUCTCODEID !='' ">
	    	AND SUBSTR(ITEMID, 1, 7) = #{PRODUCTCODEID}
	    </if>
	   </select>    

	<!-- 마스터품목(사양) 신규채번 -->
	<select id="selectNewItemID"  statementType="CALLABLE" parameterType="map">
		/* smh.bas.dao.BAS01800Dao.selectNewItemID */
		{#{O_NEWID,mode=OUT,jdbcType=VARCHAR ,javaType=string} = call BAS_01800_PKG.FN_GET_PRODUCTDEFID(
										   #{CLASSID}
										  ,#{PRODUCTTYPE}
				 						  ,#{CREATOR}
										  ,#{LAYER}
										)
	     }
    </select>
    
 <select id="selectProductDefIDList" parameterType="map" resultType="hashmap">
   			SELECT /* smh.bas.dao.BAS01800Dao.selectProductDefIDList */		
					   PRODUCTDEFID
					   ,PRODUCTDEFVERSION
			 FROM BAS_PRODUCTDEFINITION 
			WHERE 1=1
			   AND PRODUCTDEFID LIKE #{PRODUCTDEFID} || '%'
	    <if test="PRODUCTDEFVERSION != null and PRODUCTDEFVERSION !='' "> 
	        AND PRODUCTDEFVERSION LIKE '%' || #{PRODUCTDEFVERSION} || '%'
	    </if>    
	    ORDER BY PRODUCTDEFID ASC
	   </select>
	   
 <select id="selectProductSpecList" parameterType="map" resultType="hashmap">
   			SELECT /* smh.bas.dao.BAS01800Dao.selectProductSpecList */		
					   ITEMID
			 FROM BAS_PRODUCTITEMSPEC 
			WHERE 1=1
			   AND  ITEMVERSION = #{ITEMVERSION}
	            AND    ENTERPRISEID = #{ENTERPRISEID}
	            AND    ITEMID = #{ITEMID}	    
	   </select>
	   
 <select id="selectProductDefID" parameterType="map" resultType="hashmap"> 
	 SELECT /* smh.bas.dao.BAS01800Dao.selectProductDefID */ 
	                      LASTSERIALNO 
	            FROM   BAS_IDCLASSSERIAL
	            WHERE  1 = 1
	            AND    PREFIX = #{PREFIX}
	            AND    IDCLASSID = #{CLASSID}	    
	   </select>
	   
<!-- ID UPDATE -->
    <update id="saveProductDefID" parameterType="map" >
	    UPDATE /* smh.bas.dao.BAS01800Dao.saveProductDefID */  
	             BAS_IDCLASSSERIAL
        SET    LASTSERIALNO = LASTSERIALNO
              ,CREATEDTIME  = SYSDATE
              ,CREATOR      = #{CREATOR}
        WHERE  1 = 1
          AND    PREFIX = #{PREFIX}
          AND    IDCLASSID = #{CLASSID}	    
    </update>
    
    
<select id="selectProductItemID" parameterType="map" resultType="hashmap">
   			SELECT /* smh.bas.dao.BAS01800Dao.selectProductItemID */		
					   ITEMID
			 FROM BAS_ITEMMASTER 
			WHERE 1=1
			AND ITEMID = #{ITEMID}
			AND ITEMVERSION = #{ITEMVERSION}
			AND ENTERPRISEID = #{ENTERPRISEID}
	   </select>

<select id="selectProductclassList" parameterType="map" resultType="hashmap">
   			SELECT /* smh.bas.dao.BAS01800Dao.selectProductclassList */
						PRODUCTCLASSID
		    		,	PRODUCTCLASSTYPE
				FROM BAS_PRODUCTCLASS
				WHERE   PRODUCTCLASSID = NVL(#{PRODUCTCLASSID},'***')				
	   </select>	   
	   
</mapper>
