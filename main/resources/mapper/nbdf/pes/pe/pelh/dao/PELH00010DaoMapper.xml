<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nbdf.pes.pe.pelh.dao.PELH00010Dao">
    <!-- 페이징 처리 쿼리 부분 시작 -->
    <sql id="head">
        SELECT *
        FROM ( SELECT
                    ROWNUM RNUM
                   ,COUNT(*) OVER() TOT_CNT
                   ,A.*
               FROM (SELECT * FROM (
    </sql>

    <!-- 페이징 처리 쿼리 부분 끝 -->
    <sql id="bottom">
        )
                    ) A
             )
        WHERE RNUM BETWEEN (#{PAGE_NUM} -1) * #{PAGE_SIZE} + 1 AND #{PAGE_NUM} * #{PAGE_SIZE}
    </sql>

    <!-- 로그인, 사용자 정보 조회 -->
    <select id="selectUserInfoList" parameterType="map" resultType="map">
       select /* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.selectUserInfoList */
            /* 사용자 정보 */
        A.ID	
        ,A.USER_ID	
        ,A.USER_PWD	
        ,A.USER_NM	
        ,A.EMP_NO	
        ,A.EMAIL_ADDR	
        ,A.CLPS_CD	
        ,A.JIKWI_CD	
        ,A.CMPN_PHN_NO	
        ,A.MBPH_NO	
        ,A.USE_YN	
        ,nvl(A.PWD_CHANGE_DATE,	to_char(sysdate,'yyyymmdd')) as PWD_CHANGE_DATE 
        ,A.PWD_ERR_CNT	
        ,A.LAST_LGN_IP	
		,to_char(a.LAST_LGN_DTM,'yyyymmdd')as LAST_LGN_DTM
		,to_char(a.LAST_UPDATE_DATE,'yyyymmdd')as LAST_UPDATE_DATE
        ,A.PWD_ERR_DTM	
        ,A.PLANTID	
        ,A.DEPT_CD	
        ,A.DEPT_NM	
        ,A.ENTERPRISEID	
        ,A.NICKNAME	
        ,A.HOMEADDRESS	
        ,A.LANGUAGETYPE	
        ,A.USERSTATE	
        ,A.ISEESLINK	
        ,A.DESCRIPTION	
        ,A.AREARESPONSIBILITY		
        ,a.PERSON_ID
        ,a.ASSIGNMENT_ID							
		from CMD_USERS a
		where 1=1
		<choose>
		  <when test="SESSION_USER_ID != null and SESSION_USER_ID != ''">
			  and a.USER_ID = #{SESSION_USER_ID}
		  </when>
		  <otherwise>
		    <if test="ID == null or ID == '' ">
                and a.USER_ID=#{USER_ID} and a.USER_PWD = #{USER_PWD}<!-- 기본 로그인 정보1 -->
		    </if>
            <if test="ID != null and ID != '' ">
                and a.ID=#{ID} <!-- 기본 로그인 정보2 -->
	        </if>
		  </otherwise>
		</choose>
    </select>

    <!-- 로그인, 사용자 정보 조회 -->
    <select id="selectUserInfoSSOList" parameterType="map" resultType="map">
       select /* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.selectUserInfoSSOList */
            /* 사용자 정보 */
		  a.USER_ID    /*사용자 ID*/
		  ,a.USER_ACNT          /*계정*/
		  ,a.USER_PWD             /*패스워드*/
		  ,a.USER_NM              /*이름*/
		  ,a.EMAIL_ADDR       /*이메일*/
		  ,a.CLPS_CD              /*직급코드*/
		  ,NVL((select MEANING from CMD_LOOKUP_VALUES where LOOKUP_TYPE='CMD_CLPS_CD' and LOOKUP_CODE= CLPS_CD),'직급정보없음') as CLPS_NM     /*직급명*/
		  ,a.JIKWI_CD             /*직위코드*/
		  ,NVL((select MEANING from CMD_LOOKUP_VALUES where LOOKUP_TYPE='CMD_JIKWI_CD' and LOOKUP_CODE= JIKWI_CD),'직위정보없음' )as JIKWI_NM  /*직위명*/
		  ,a.DEPT_CD       /*부서코드*/
		  ,a.CMPN_PHN_NO                  /*사내전화*/
		  ,a.MBPH_NO                          /*휴대전화*/
		  ,a.USER_GUBUN_CD                /*사용자구분코드*/
		  ,(select MEANING from CMD_LOOKUP_VALUES where LOOKUP_TYPE='CMD_USER_SEC' and LOOKUP_CODE = a.USER_GUBUN_CD) as USER_GUBUN_NM   /*사용자구분명*/
		  ,a.JNG_COURS_CD             /*가입경로코드*/
		  ,(select MEANING from CMD_LOOKUP_VALUES where LOOKUP_TYPE='CMD_JNG_COURS' and LOOKUP_CODE = a.JNG_COURS_CD) as JNG_COURS_NM    /*가입경로명*/
		  ,a.PWD_CHANGE_DATE      /*패스워드변경일8자리*/
		  ,a.PWD_ERR_CNT              /*패스워드 오류 횟수*/
		  ,a.USE_YN                       /*사용여부 - 로그인관련 차단항목*/
		  ,a.JOB_APRC_ENBL_YN       /*업무접근가능여부 - 권한관련 차단항목*/
		  ,NVL(#{SESSION_COMPANY_CD}, a.COMPANY_CD) AS COMPANY_CD
		  ,(SELECT MEANING FROM CMD_USERS A,CMD_LOOKUP_VALUES B 
				WHERE USER_ACNT = #{USER_ACNT} 
				AND LOOKUP_TYPE='CMD_USER_COMPANY' 
				AND NVL(#{SESSION_COMPANY_CD}, a.COMPANY_CD) = B.LOOKUP_CODE ) AS COMPANY_NM
		  ,(select USER_BLG_CD from cmd_depts where dept_cd=a.dept_cd) as USER_BLG_CD
		  ,a.CREATED_BY
		  ,a.CREATION_DATE
		  ,a.LAST_UPDATED_BY
		  ,to_char(a.LAST_LGN_DTM,'yyyymmdd')as LAST_LGN_DTM
		  ,to_char(a.LAST_UPDATE_DATE,'yyyymmdd')as LAST_UPDATE_DATE
          ,(SELECT um.security_group
               FROM drcc_user_mst um
                  , cmd_lookup_values lv
             WHERE um.security_group = lv.lookup_code(+)
               AND lv.lookup_type(+) = 'DRCC_SECURITY_GROUP'
               AND um.USER_ACNT = a.user_acnt   ) AS SECURITY_GROUP                            
		  ,c.CTI_ID     													
		  ,c.CTI_PWD
		  ,c.CTI_STATION as CTI_EXTENSION
		  ,DEPT_NM 
		  ,b.TEL_NO AS DEPT_TEL_NO /*부서전화번호*/    													
		  ,b.DEPT_GROUP /*부서그룹*/    													
		  ,BONSA_YN  													
		from CMD_USERS a, CMD_DEPTS b, DRCC_USER_MST c
		where 1=1
		and a.DEPT_CD = b.DEPT_CD(+)
		AND a.USER_ACNT = c.USER_ACNT(+)
		and a.USER_ACNT=#{USER_ACNT}
    </select>
    <!-- 로그인 실패 카운트 증가 -->
    <update id="updatePwdErrCnt" parameterType="map">
        update  /* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.updatePwdErrCnt */
        CMD_USERS
		set  PWD_ERR_CNT= DECODE(trunc((SYSDATE - PWD_ERR_DTM)*24),0,NVL(PWD_ERR_CNT,0) +1,1)
			, PWD_ERR_DTM = SYSDATE
		where USER_ACNT=#{USER_ACNT}

        <!-- <selectKey resultType="int" keyProperty="PWD_ERR_CNT" order="AFTER" >
            select PWD_ERR_CNT from CMD_USERS where USER_ACNT=#{USER_ACNT}
        </selectKey> -->
    </update>

    <!-- 로그인 실패 카운트 조회(selectkey가 null일때 에러발생으로 별도 쿼리 처리) -->
    <select id="selectPwdErrCnt" parameterType="map" resultType="int">
        select PWD_ERR_CNT  from CMD_USERS
        where USER_ACNT=#{USER_ACNT}
        and rownum=1
    </select>

    <!-- 로그인 이력 저장 -->
    <insert id="insertLgnLog" parameterType="map">
        <selectKey resultType="long" keyProperty="LGN_LOG_ID" order="BEFORE">
            select CMD_LGN_LOG_S.nextval from dual
        </selectKey>

        insert /* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.insertLgnLog */
        into CMD_LGN_LOG
        (
	        LGN_LOG_ID, USER_ID, CNCT_IP, LGN_DTM, LOUT_DTM,
	        CNCT_BRWSR, LGN_PORTAL_GUBUN, CREATED_BY, CREATION_DATE, LAST_UPDATED_BY,
	        LAST_UPDATE_DATE
        )
        values
        (
	        #{LGN_LOG_ID}, #{USER_ID}, #{CNCT_IP}, sysdate, #{LOUT_DTM},
	        #{CNCT_BRWSR}, #{LGN_PORTAL_GUBUN}, #{USER_ACNT}, sysdate, #{USER_ACNT},
	        sysdate
         )
    </insert>

    <!-- 사용자의 업무 목록 조회 -->
    <select id="selectUserJobList" parameterType="map" resultType="map">
        select /* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.selectUserJobList */
	        USER_ID, JOB_GUBUN_CD,
	        (select MEANING from CMD_LOOKUP_VALUES where LOOKUP_TYPE='CMD_JOB_GUBUNCD' and LOOKUP_CODE = JOB_GUBUN_CD) as JOB_GUBUN_NM,
	        ORDR
        from CMD_USER_JOB
        where USER_ID = #{USER_ID}
    </select>

    <!-- 사용자의 권한 목록 조회 -->
    <select id="selectUserAuthList" parameterType="map" resultType="map">
		select A.JOB_AUTH_ID, AUTH_NM
		from CMD_USER_AUTH_MPNG A, CMD_JOB_AUTH_MNG C
		where A.JOB_AUTH_ID = C.JOB_AUTH_ID
		AND A.USER_ID = #{USER_ID} 
    </select>

    <!-- 로그아웃시 로그아웃시간 업데이트 -->
    <update id="updateLgnLog" parameterType="map">
        update /* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.updateLgnLog */
        CMD_LGN_LOG
        set
            LOUT_DTM = sysdate,
            LAST_UPDATED_BY = #{gv_userAcnt},
            LAST_UPDATE_DATE = sysdate
        where LGN_LOG_ID = #{gv_loginId}
    </update>

    <!-- 로그인시 정상적으로 로그아웃시키지 않은 로그 갱신-->
    <update id="updateLgnLogInit" parameterType="map">
        update /* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.updateLgnLogInit */
        CMD_LGN_LOG
        set
            LOUT_DTM = sysdate,
            LAST_UPDATED_BY = #{gv_userAcnt},
            LAST_UPDATE_DATE = sysdate
        where USER_ID = #{gv_userId}
        and LOUT_DTM is null
        and LGN_LOG_ID != #{gv_loginId}
    </update>

    <!-- 공통 세션 정보 갱신 -->
    <update id="mergeSessionInfo" parameterType="map">
    	/* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.mergeSessionInfo */
        <selectKey resultType="int" keyProperty="SELECT_COUNT" order="BEFORE" >
            select count(*) from CMD_SESSIONS where SESSION_GUID = #{SESSION_GUID}
        </selectKey>

        <choose>
            <when test="SELECT_COUNT != null and SELECT_COUNT != '' and SELECT_COUNT != '0' ">
            <!-- 
                update CMD_SESSIONS set
                    LGN_LOG_ID = #{LGN_LOG_ID},
					SESSION_GUID = #{SESSION_GUID},
					USER_CRTFC_TKN = #{USER_CRTFC_TKN},
					SSO_CRTFC_TKN = #{SSO_CRTFC_TKN},
					LGN_IP = #{CNCT_IP},
					LST_SCRIN_UT_TIME = sysdate,
					LST_SCRIN_REQ_URI = #{LST_SCRIN_REQ_URI},
					DUP_LGN_TIME = #{DUP_LGN_TIME},
					SESSION_VLD_YN = #{SESSION_VLD_YN},
					LAST_UPDATED_BY = #{USER_ACNT},
					LAST_UPDATE_DATE = sysdate
				where USER_ID=#{USER_ID}
			-->	
			    update CMD_SESSIONS set
                    LGN_LOG_ID = #{LGN_LOG_ID},
					USER_CRTFC_TKN = #{USER_CRTFC_TKN},
					SSO_CRTFC_TKN = #{SSO_CRTFC_TKN},
					LGN_IP = #{CNCT_IP},
					LST_SCRIN_UT_TIME = sysdate,
					LST_SCRIN_REQ_URI = #{LST_SCRIN_REQ_URI},
					DUP_LGN_TIME = #{DUP_LGN_TIME},
					SESSION_VLD_YN = #{SESSION_VLD_YN},
					LAST_UPDATED_BY = #{USER_ID},
					LAST_UPDATE_DATE = sysdate
				where SESSION_GUID = #{SESSION_GUID}
            </when>
            <otherwise>
                insert into CMD_SESSIONS(
	                USER_ID, LGN_LOG_ID, SESSION_GUID, USER_CRTFC_TKN, SSO_CRTFC_TKN,
	                LGN_IP, LST_SCRIN_UT_TIME , LST_SCRIN_REQ_URI, DUP_LGN_TIME, SESSION_VLD_YN,
	                CREATED_BY, CREATION_DATE, LAST_UPDATED_BY, LAST_UPDATE_DATE
                )
                values (
	                #{USER_ID}, #{LGN_LOG_ID}, #{SESSION_GUID}, #{USER_CRTFC_TKN}, #{SSO_CRTFC_TKN},
	                #{CNCT_IP}, sysdate, #{LST_SCRIN_REQ_URI}, #{DUP_LGN_TIME}, #{SESSION_VLD_YN},
	                #{USER_ID}, sysdate, #{USER_ID}, sysdate
                )
            </otherwise>
        </choose>

    </update>

    <!-- 공통 세션 정보 조회 TODO LGN_IP 테이블 수정 후 처리-->
    <select id="selectSessionInfo" parameterType="map" resultType="map">
        select /* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.selectSessionInfo */
             USER_ID, LGN_LOG_ID, SESSION_GUID, USER_CRTFC_TKN, SSO_CRTFC_TKN,
             LGN_IP as CNCT_IP, LST_SCRIN_UT_TIME , LST_SCRIN_REQ_URI, DUP_LGN_TIME, SESSION_VLD_YN
        from CMD_SESSIONS
        where USER_ID = #{USER_ID}
        and rownum = 1
    </select>

    <!-- 세션 정보 로그아웃 -->
    <update id="updateSessionLogout" parameterType="map">
		update /* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.updateSessionLogout */
		CMD_SESSIONS set
		  DUP_LGN_TIME = sysdate,
		  SESSION_VLD_YN = 'N',
		  LAST_UPDATED_BY= #{gv_userAcnt},
		  LAST_UPDATE_DATE = sysdate
		where
		USER_ID = #{gv_userId}
		<if test="CNCT_IP != null and CNCT_IP != '' ">
		  and LGN_IP = #{CNCT_IP}
		</if>
    </update>

    <!-- 사용자의 사용상태를 수정 -->
    <update id="updatePortalUserUseYN" parameterType="map">
        update  /* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.updatePortalUserUseYN */
        CMD_USERS
        set  USE_YN= #{USE_YN}
        where USER_ID=#{USER_ID}
    </update>

    <!-- 사용자의 로그인 이력중 최신1건 조회 -->
    <select id="selectLoginHistory" parameterType="map" resultType="map">
        select /* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.selectLoginHistory */
		  LGN_LOG_ID,USER_ID,CNCT_IP,
		  to_char(LGN_DTM, 'yyyymmdd') as LGN_DTM,
		  CNCT_BRWSR, LGN_PORTAL_GUBUN,CREATED_BY,CREATION_DATE,LAST_UPDATED_BY,LAST_UPDATE_DATE
		from pes_lgn_log
		where portal_user_id = #{USER_ID}
		and rownum =1
		order by lgn_log_id desc
    </select>


    <!-- 로그인 성공 : 비밀번호 실패 카운트 초기화 -->
    <update id="updatePwdErrCntInit" parameterType="map">
	update /* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.updatePwdErrCntInit */
	CMD_USERS
	set PWD_ERR_CNT= 0, LAST_LGN_DTM = sysdate, LAST_LGN_IP = #{CNCT_IP},
	LAST_UPDATED_BY = #{LAST_UPDATED_BY},
	LAST_UPDATE_DATE = sysdate
	where USER_ID=#{USER_ID}
    </update>

    <!-- 비밀번호 변경 -->
    <update id="updateChangeUserPw" parameterType="map">
        /* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.updateUserPw */
        update CMD_USERS set
		  USER_PWD = #{NEW_USER_PWD},
		  PWD_CHANGE_DATE =  to_char(sysdate, 'yyyymmdd'),
		  PWD_ERR_CNT = 0,
		  LAST_UPDATED_BY = #{LAST_UPDATED_BY},
		  LAST_UPDATE_DATE = sysdate
		where USER_ID = #{USER_ID}
    </update>
    
    <select id="selectFNDUser" parameterType="map" resultType="map">
        /* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.selectFNDUser */
        select USER_ID from FND_USER where USER_NAME=#{USER_NAME}
    </select>

    <!-- 비밀번호 이력 저장 -->
    <insert id="insertCmdPwdAltHst" parameterType="map">
        insert /* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.insertCmdPwdAltHst */
        into CMD_PWD_ALT_HST
        (
	        PWD_ALT_HST_ID, USER_ID, USER_PWD, PWD_ALT_DATE
        )
        values
        (
	        CMD_PWD_ALT_HST_S.nextval, #{USER_ID}, #{NEW_USER_PWD}, SYSDATE
         )
    </insert>

    <select id="selectExistPwd" parameterType="map" resultType="int">
        /* com.nbdf.pes.pe.pelh.dao.PELH00010Dao.selectExistPwd */
       select count(*) from (
         SELECT USER_PWD,PWD_ALT_DATE,rownum as rn FROM (
            select * from CMD_PWD_ALT_HST 
            where USER_ID=#{USER_ID} 
            ORDER BY PWD_ALT_DATE DESC
          )
        )
        where rn between 2 and 3
        and USER_PWD=#{NEW_USER_PWD}

    </select>

</mapper>
