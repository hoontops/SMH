<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    파일명       : 공통코드
    설명          : 공통코드 관련 쿼리 정의
    작성자       : 진성하
    최초작성일 : 2017.03.10
<< 개정이력(Modification Information) >>
      수정일              수정자      수정내용
     2017.03.10      진성하     최초  생성
-->

<mapper namespace="com.nbdf.cmd.cm.cmcm.dao.CMD00100Dao">

    <!-- ID 패턴 그룹 등록 -->
    <insert id="insertBasIdclass" parameterType="map">
    INSERT INTO BAS_IDCLASS( 
        IDCLASSID  
        ,IDCLASSNAME  
        ,DESCRIPTION  
        ,ENTERPRISEID  
        ,PLANTID  
        ,LENGTH  
        ,CREATOR  
        ,CREATEDTIME  
        ,MODIFIER  
        ,MODIFIEDTIME  
        ,LASTTXNHISTKEY  
        ,LASTTXNID  
        ,LASTTXNUSER  
        ,LASTTXNTIME  
        ,LASTTXNCOMMENT  
        ,VALIDSTATE        ) 
    VALUES( 
        #{IDCLASSID}  
        ,#{IDCLASSNAME}  
        ,#{DESCRIPTION}  
        ,#{ENTERPRISEID}  
        ,#{PLANTID}  
        ,#{LENGTH}  
        ,#{CREATOR}  
        ,SYSDATE  
        ,#{MODIFIER}  
        ,SYSDATE  
        ,#{LASTTXNHISTKEY}  
        ,#{LASTTXNID}  
        ,#{LASTTXNUSER}  
        ,#{LASTTXNTIME}  
        ,#{LASTTXNCOMMENT}  
        ,#{VALIDSTATE}    )
    </insert>

    <!-- ID 패턴 그룹 변경 -->
    <update id="updateBasIdclass" parameterType="map" >
    UPDATE BAS_IDCLASS 
    SET 
        IDCLASSNAME = #{IDCLASSNAME}     
        ,DESCRIPTION = #{DESCRIPTION}     
        ,ENTERPRISEID = #{ENTERPRISEID}     
        ,PLANTID = #{PLANTID}     
        ,LENGTH = #{LENGTH}                     
        ,MODIFIER = #{MODIFIER}     
        ,MODIFIEDTIME = SYSDATE     
        ,LASTTXNHISTKEY = #{LASTTXNHISTKEY}     
        ,LASTTXNID = #{LASTTXNID}     
        ,LASTTXNUSER = #{LASTTXNUSER}     
        ,LASTTXNTIME = #{LASTTXNTIME}     
        ,LASTTXNCOMMENT = #{LASTTXNCOMMENT}     
        ,VALIDSTATE = #{VALIDSTATE}
    WHERE IDCLASSID = #{IDCLASSID}
    </update>

    <!-- ID 패턴 그룹 삭제 -->
    <update id="deleteBasIdclass" parameterType="map" > 
    UPDATE BAS_IDCLASS 
    SET VALIDSTATE='Invalid'
    WHERE IDCLASSID = #{IDCLASSID}
    </update>

    <!-- ID 패턴 그룹 조회-->
    <select id="selectBasIdclassList" parameterType="map" resultType="hashmap">
    SELECT 
        A.IDCLASSID	
        ,A.IDCLASSNAME	
        ,A.DESCRIPTION	
        ,A.ENTERPRISEID	
        ,A.PLANTID	
        ,A.LENGTH	
        ,CU.USER_NM AS CREATOR	
        ,to_char(A.CREATEDTIME,'yyyymmdd') as CREATEDTIME
        ,CU2.USER_NM AS MODIFIER	
        ,to_char(A.MODIFIEDTIME,'yyyymmdd') as MODIFIEDTIME	
        ,A.VALIDSTATE	
    FROM	BAS_IDCLASS A , CMD_USERS CU , CMD_USERS CU2 
    WHERE 1=1 
    AND A.CREATOR = CU.USER_ID(+)
    AND A.MODIFIER = CU2.USER_ID(+)
    <if test="IDCLASSID != null and IDCLASSID !='' "> 
        AND A.IDCLASSID in (SELECT TRIM(REGEXP_SUBSTR(ORG_DATA, '[^,]+', 1, LEVEL)) AS SPLIT_DATA
							FROM (SELECT #{IDCLASSID} AS ORG_DATA FROM DUAL)
							CONNECT BY INSTR(ORG_DATA, ',', 1, LEVEL - 1) > 0)
    </if>
    <if test="VALIDSTATE != null and VALIDSTATE !='' "> 
        AND A.VALIDSTATE = #{VALIDSTATE}
    </if>
    order by IDCLASSID
    </select>
    
    <!-- ID 정의 등록 -->
    <insert id="insertBasIddefinition" parameterType="map">
    INSERT INTO BAS_IDDEFINITION( 
        IDDEFID  
        ,IDCLASSID  
        ,IDDEFNAME  
        ,DESCRIPTION  
        ,ENTERPRISEID  
        ,PLANTID  
        ,SEQUENCE  
        ,IDDEFCATEGORY  
        ,IDDEFTYPE  
        ,LENGTH  
        ,FORMAT  
        ,EXCEPTIONCHARS  
        ,CREATOR  
        ,CREATEDTIME  
        ,MODIFIER  
        ,MODIFIEDTIME  
        ,LASTTXNHISTKEY  
        ,LASTTXNID  
        ,LASTTXNUSER  
        ,LASTTXNTIME  
        ,LASTTXNCOMMENT  
        ,VALIDSTATE        ) 
    VALUES( 
        #{IDDEFID}  
        ,#{IDCLASSID}  
        ,#{IDDEFNAME}  
        ,#{DESCRIPTION}  
        ,#{ENTERPRISEID}  
        ,#{PLANTID}  
        ,#{SEQUENCE}  
        ,#{IDDEFCATEGORY}  
        ,#{IDDEFTYPE}  
        ,#{LENGTH}  
        ,#{FORMAT}  
        ,#{EXCEPTIONCHARS}  
        ,#{CREATOR}  
        ,SYSDATE  
        ,#{MODIFIER}  
        ,SYSDATE  
        ,#{LASTTXNHISTKEY}  
        ,#{LASTTXNID}  
        ,#{LASTTXNUSER}  
        ,#{LASTTXNTIME}  
        ,#{LASTTXNCOMMENT}  
        ,#{VALIDSTATE}    )
    </insert>

    <!-- ID 정의 변경 -->
    <update id="updateBasIddefinition" parameterType="map" >
    UPDATE BAS_IDDEFINITION 
    SET 
        IDDEFNAME = #{IDDEFNAME}     
        ,DESCRIPTION = #{DESCRIPTION}     
        ,ENTERPRISEID = #{ENTERPRISEID}     
        ,PLANTID = #{PLANTID}     
        ,IDDEFCATEGORY = #{IDDEFCATEGORY}     
        ,IDDEFTYPE = #{IDDEFTYPE}     
        ,LENGTH = #{LENGTH}     
        ,FORMAT = #{FORMAT}     
        ,EXCEPTIONCHARS = #{EXCEPTIONCHARS}                     
        ,MODIFIER = #{MODIFIER}     
        ,MODIFIEDTIME = SYSDATE     
        ,LASTTXNHISTKEY = #{LASTTXNHISTKEY}     
        ,LASTTXNID = #{LASTTXNID}     
        ,LASTTXNUSER = #{LASTTXNUSER}     
        ,LASTTXNTIME = sysdate
        ,LASTTXNCOMMENT = #{LASTTXNCOMMENT}     
        ,VALIDSTATE = #{VALIDSTATE}
    WHERE IDCLASSID = #{IDCLASSID}
    AND IDDEFID = #{IDDEFID}
    AND SEQUENCE = #{SEQUENCE}
    </update>

    <!-- ID 정의 삭제 -->
    <update id="deleteBasIddefinition" parameterType="map" > 
    UPDATE BAS_IDDEFINITION 
    SET VALIDSTATE='Invalid'
    WHERE IDCLASSID = #{IDCLASSID}
    AND IDDEFID = #{IDDEFID}
    AND SEQUENCE = #{SEQUENCE}
    </update>

    <!-- ID 정의 조회-->
    <select id="selectBasIddefinitionList" parameterType="map" resultType="hashmap">
    SELECT 
        A.IDDEFID	
        ,A.IDCLASSID	
        ,A.IDDEFNAME	
        ,A.DESCRIPTION	
        ,A.ENTERPRISEID	
        ,A.PLANTID	
        ,A.SEQUENCE	
        ,A.IDDEFCATEGORY	
        ,A.IDDEFTYPE	
        ,A.LENGTH	
        ,A.FORMAT	
        ,A.EXCEPTIONCHARS	
        ,CU.USER_NM AS CREATOR	
        ,to_char(A.CREATEDTIME,'yyyymmdd') as CREATEDTIME	
        ,CU2.USER_NM AS MODIFIER	
        ,to_char(A.CREATEDTIME,'yyyymmdd') as MODIFIEDTIME	
        ,A.VALIDSTATE	
        ,B.IDCLASSNAME
    FROM	BAS_IDDEFINITION A , BAS_IDCLASS B , CMD_USERS CU , CMD_USERS CU2
    WHERE 1=1 
    AND A.IDCLASSID = B.IDCLASSID
    AND A.CREATOR = CU.USER_ID(+)
    AND A.MODIFIER = CU2.USER_ID(+)
    <if test="IDCLASSID != null and IDCLASSID !='' "> 
        AND A.IDCLASSID in (SELECT TRIM(REGEXP_SUBSTR(ORG_DATA, '[^,]+', 1, LEVEL)) AS SPLIT_DATA
							FROM (SELECT #{IDCLASSID} AS ORG_DATA FROM DUAL)
							CONNECT BY INSTR(ORG_DATA, ',', 1, LEVEL - 1) > 0)
    </if>
    <if test="VALIDSTATE != null and VALIDSTATE !='' "> 
        AND A.VALIDSTATE = #{VALIDSTATE}
    </if>
    ORDER BY IDDEFID
    </select>

    <!-- ID패턴 및 Prefix별 일련번호 정보 등록 -->
    <insert id="insertBasIdclassserial" parameterType="map">
    INSERT INTO BAS_IDCLASSSERIAL( 
        IDCLASSID  
        ,PREFIX  
        ,LASTSERIALNO  
        ,CREATOR  
        ,CREATEDTIME        ) 
    VALUES( 
        #{IDCLASSID}  
        ,#{PREFIX}  
        ,#{LASTSERIALNO}  
        ,#{CREATOR}  
        ,SYSDATE    )
    </insert>

    <!-- ID패턴 및 Prefix별 일련번호 정보 변경 -->
    <update id="updateBasIdclassserial" parameterType="map" >
    UPDATE BAS_IDCLASSSERIAL 
    SET 
        LASTSERIALNO = #{LASTSERIALNO}                
    WHERE IDCLASSID = #{IDCLASSID}
    AND PREFIX = #{PREFIX}
    </update>

    <!-- ID패턴 및 Prefix별 일련번호 정보 삭제 -->
    <update id="deleteBasIdclassserial" parameterType="map" > 
    DELETE FROM BAS_IDCLASSSERIAL 
    WHERE IDCLASSID = #{IDCLASSID}
    AND PREFIX = #{PREFIX}
    </update>

    <!-- ID패턴 및 Prefix별 일련번호 정보 조회-->
    <select id="selectBasIdclassserialList" parameterType="map" resultType="hashmap">
    SELECT * FROM (
    SELECT 
        A.IDCLASSID	
        ,A.PREFIX	
        ,A.PREFIX || LPAD(A.LASTSERIALNO,5,'0') AS SERIALNO	
        ,A.LASTSERIALNO	
        ,USER_NM AS CREATOR	
        ,A.CREATEDTIME	
    FROM	BAS_IDCLASSSERIAL A, CMD_USERS CU 
    WHERE 1=1 
        AND A.CREATOR = CU.USER_ID(+)
        AND A.IDCLASSID = #{IDCLASSID}
        and A.PREFIX != '-'
    order by PREFIX desc
    )
    where rownum<![CDATA[<=]]>100    
    </select>
        
</mapper>