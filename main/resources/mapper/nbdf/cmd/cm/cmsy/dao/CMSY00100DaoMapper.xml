<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nbdf.cmd.cm.cmsy.dao.CMSY00100Dao">
    <!-- 로그인, 사용자 정보 조회 -->
    <select id="selectUserInfoList" parameterType="map" resultType="map">
       select /* com.nbdf.cmd.cm.cmsy.dao.CMSY00100Dao.selectUserInfoList */
            /* 사용자 정보 */
        A.ID
        ,A.USER_ID	
        ,A.USER_ID as USER_ACNT	
        ,A.USER_PWD	
        ,A.USER_NM	
        ,A.EMP_NO	
        ,A.EMAIL_ADDR	
        ,A.CLPS_CD	
        ,A.JIKWI_CD	
        ,A.CMPN_PHN_NO	
        ,A.MBPH_NO	
        ,A.USE_YN	
        ,nvl(A.PWD_CHANGE_DATE,	to_char(sysdate,'yyyymmdd')) as PWD_CHANGE_DATE 
        ,A.PWD_ERR_CNT	
        ,A.LAST_LGN_IP	
		,to_char(a.LAST_LGN_DTM,'yyyymmdd')as LAST_LGN_DTM
		,to_char(a.LAST_UPDATE_DATE,'yyyymmdd')as LAST_UPDATE_DATE
        ,A.PWD_ERR_DTM	
        ,A.PLANTID	
        ,A.DEPT_CD	
        ,c.DEPT_NM	
        ,A.ENTERPRISEID	
        ,A.NICKNAME	
        ,A.HOMEADDRESS	
        ,A.LANGUAGETYPE	
        ,A.USERSTATE	
        ,A.ISEESLINK	
        ,A.DESCRIPTION	
        ,A.AREARESPONSIBILITY
        ,#{LANGUAGETYPE} as LOGIN_LANGUAGETYPE									
        ,#{SITETYPE} as LOGIN_SITETYPE
        ,b.ENTERPRISEID	
        ,b.PLANTID	AS SITETYPE
        ,a.RETR_DATE
        ,#{WORKTYPE} as PDA_WORKTYPE
        ,a.PERSON_ID
        ,a.ASSIGNMENT_ID
        from CMD_USERS a, CMD_PLANTUSER b, CMD_DEPTS c
		where 1=1
		and a.user_id = b.user_id(+)
		and a.dept_cd = c.dept_cd(+)
		and b.PLANTID(+) = #{SITETYPE}
		<choose>
		  <when test="'MES'.equals(WORKTYPE) ">
			  and a.USER_ID = #{USER_ID}
		  </when>	
		  <when test="USER_PWD != null and USER_PWD != ''">
			  and a.USER_ID=#{USER_ID} and a.USER_PWD = #{USER_PWD}<!-- 기본 로그인 정보1 -->
		  </when>
		  <when test="USER_ID != null and USER_ID != ''">
			  and a.USER_ID = #{USER_ID}
		  </when>
		  <when test="SESSION_USER_ID != null and SESSION_USER_ID != ''">
			  and a.USER_ID = #{SESSION_USER_ID}
		  </when>
		  <otherwise>
		    <if test="ID == null or ID == '' ">
                and a.USER_ID=#{USER_ID} and a.USER_PWD = #{USER_PWD}<!-- 기본 로그인 정보1 -->
		    </if>
            <if test="ID != null and ID != '' ">
                and a.ID=#{ID} <!-- 기본 로그인 정보2 -->
	        </if>
		  </otherwise>
		</choose>
    </select>

    <!-- 세션테이블의 글로벌변수 조회 -->
    <select id="selectGlovelValueInfo" parameterType="hashmap" resultType="hashmap">
        /* com.nbdf.cmd.cm.cmsy.dao.CMSY00100Dao.selectGlovelValueInfo */
        select
            USER_ID
            , LGN_LOG_ID
            , SESSION_GUID
            , USER_CRTFC_TKN
            , SSO_CRTFC_TKN
            , LGN_IP as CNCT_IP
            , TO_CHAR(LST_SCRIN_UT_TIME,'yyyymmddhh24miss') as LST_SCRIN_UT_TIME
            , LST_SCRIN_REQ_URI
            , DUP_LGN_TIME
            , SESSION_VLD_YN
        from CMD_SESSIONS
        where SESSION_GUID = #{SESSION_GUID}
    </select>

    <!-- 사용자의 권한 목록 조회 -->
    <select id="selectUserAuthList" parameterType="map" resultType="map">
    /* com.nbdf.cmd.cm.cmsy.dao.CMSY00100Dao.selectUserAuthList */
		select A.JOB_AUTH_ID, AUTH_NM
		from CMD_USER_AUTH_MPNG A, CMD_JOB_AUTH_MNG C
		where A.JOB_AUTH_ID = C.JOB_AUTH_ID
		AND A.USER_ID = #{USER_ID} 
		AND C.PLANTID=#{LOGIN_SITETYPE}
    </select>

    <!-- 로그인 실패 카운트 증가 -->
    <update id="updatePwdErrCnt" parameterType="map">
        update  /* com.nbdf.cmd.cm.cmsy.dao.CMSY00100Dao.updatePwdErrCnt */
        CMD_USERS
		set  PWD_ERR_CNT= DECODE(trunc((SYSDATE - PWD_ERR_DTM)*24),0,NVL(PWD_ERR_CNT,0) +1,1)
			, PWD_ERR_DTM = SYSDATE
		where USER_ID=#{USER_ACNT}

        <!-- <selectKey resultType="int" keyProperty="PWD_ERR_CNT" order="AFTER" >
            select PWD_ERR_CNT from CMD_USERS where USER_ACNT=#{USER_ACNT}
        </selectKey> -->
    </update>

    <!-- 로그인 실패 카운트 조회(selectkey가 null일때 에러발생으로 별도 쿼리 처리) -->
    <select id="selectPwdErrCnt" parameterType="map" resultType="int">
        select PWD_ERR_CNT  from CMD_USERS
        where USER_ID=#{USER_ID}
        and rownum=1
    </select>

    <!-- 로그아웃시 로그아웃시간 업데이트 -->
    <update id="updateLgnLog" parameterType="map">
        update /* com.nbdf.cmd.cm.cmsy.dao.CMSY00100Dao.updateLgnLog */
        CMD_LGN_LOG
        set
            LOUT_DTM = sysdate,
            LAST_UPDATED_BY = #{gv_userAcnt},
            LAST_UPDATE_DATE = sysdate
        where LGN_LOG_ID = #{gv_loginId}
    </update>

    <!-- 로그인시 정상적으로 로그아웃시키지 않은 로그 갱신-->
    <update id="updateLgnLogInit" parameterType="map">
        update /* com.nbdf.cmd.cm.cmsy.dao.CMSY00100Dao.updateLgnLogInit */
        CMD_LGN_LOG
        set
            LOUT_DTM = sysdate,
            LAST_UPDATED_BY = #{gv_userAcnt},
            LAST_UPDATE_DATE = sysdate
        where USER_ID = #{gv_userId}
        and LOUT_DTM is null
        and LGN_LOG_ID != #{gv_loginId}
    </update>

    <!-- 로그인 이력 저장 -->
    <insert id="insertLgnLog" parameterType="map">
        <selectKey resultType="long" keyProperty="LGN_LOG_ID" order="BEFORE">
            select CMD_LGN_LOG_S.nextval from dual
        </selectKey>

        insert /* com.nbdf.cmd.cm.cmsy.dao.CMSY00100Dao.insertLgnLog */
        into CMD_LGN_LOG
        (
	        LGN_LOG_ID, USER_ID, CNCT_IP, LGN_DTM, LOUT_DTM,
	        CNCT_BRWSR, LGN_PORTAL_GUBUN, CREATED_BY, CREATION_DATE, LAST_UPDATED_BY,
	        LAST_UPDATE_DATE
        )
        values
        (
	        #{LGN_LOG_ID}, #{USER_ID}, #{CNCT_IP}, sysdate, #{LOUT_DTM},
	        #{CNCT_BRWSR}, #{LGN_PORTAL_GUBUN}, #{USER_ACNT}, sysdate, #{USER_ACNT},
	        sysdate
         )
    </insert>    
    
    <!-- 공통 세션 정보 갱신 -->
    <update id="mergeSessionInfo" parameterType="map">
    	/* com.nbdf.cmd.cm.cmsy.dao.CMSY00100Dao.mergeSessionInfo */
        <selectKey resultType="int" keyProperty="SELECT_COUNT" order="BEFORE" >
            select count(*) from CMD_SESSIONS where SESSION_GUID = #{SESSION_GUID} 
        </selectKey>

        <choose>
            <when test="SELECT_COUNT != null and SELECT_COUNT != '' and SELECT_COUNT != '0' ">
            <!-- 
                update CMD_SESSIONS set
                    LGN_LOG_ID = #{LGN_LOG_ID},
					SESSION_GUID = #{SESSION_GUID},
					USER_CRTFC_TKN = #{USER_CRTFC_TKN},
					SSO_CRTFC_TKN = #{SSO_CRTFC_TKN},
					LGN_IP = #{CNCT_IP},
					LST_SCRIN_UT_TIME = sysdate,
					LST_SCRIN_REQ_URI = #{LST_SCRIN_REQ_URI},
					DUP_LGN_TIME = #{DUP_LGN_TIME},
					SESSION_VLD_YN = #{SESSION_VLD_YN},
					LAST_UPDATED_BY = #{USER_ACNT},
					LAST_UPDATE_DATE = sysdate
				where USER_ID=#{USER_ID}
			--> 	
                update CMD_SESSIONS set
                    LGN_LOG_ID = #{LGN_LOG_ID},
					USER_CRTFC_TKN = #{USER_CRTFC_TKN},
					SSO_CRTFC_TKN = #{SSO_CRTFC_TKN},
					LGN_IP = #{CNCT_IP},
					LST_SCRIN_UT_TIME = sysdate,
					LST_SCRIN_REQ_URI = #{LST_SCRIN_REQ_URI},
					DUP_LGN_TIME = #{DUP_LGN_TIME},
					SESSION_VLD_YN = #{SESSION_VLD_YN},
					LAST_UPDATED_BY = #{USER_ID},
					LAST_UPDATE_DATE = sysdate
				where SESSION_GUID = #{SESSION_GUID}
			</when>
            <otherwise>
                insert into CMD_SESSIONS(
	                USER_ID, LGN_LOG_ID, SESSION_GUID, USER_CRTFC_TKN, SSO_CRTFC_TKN,
	                LGN_IP, LST_SCRIN_UT_TIME , LST_SCRIN_REQ_URI, DUP_LGN_TIME, SESSION_VLD_YN,
	                CREATED_BY, CREATION_DATE, LAST_UPDATED_BY, LAST_UPDATE_DATE
                )
                values (
	                #{USER_ID}, #{LGN_LOG_ID}, #{SESSION_GUID}, #{USER_CRTFC_TKN}, #{SSO_CRTFC_TKN},
	                #{CNCT_IP}, sysdate, #{LST_SCRIN_REQ_URI}, #{DUP_LGN_TIME}, #{SESSION_VLD_YN},
	                #{USER_ACNT}, sysdate, #{USER_ACNT}, sysdate
                )
            </otherwise>
        </choose>

    </update>

    <!-- 공통 세션 정보 조회 TODO LGN_IP 테이블 수정 후 처리-->
    <select id="selectSessionInfo" parameterType="map" resultType="map">
        select /* com.nbdf.cmd.cm.cmsy.dao.CMSY00100Dao.selectSessionInfo */
             USER_ID, LGN_LOG_ID, SESSION_GUID, USER_CRTFC_TKN, SSO_CRTFC_TKN,
             LGN_IP as CNCT_IP, LST_SCRIN_UT_TIME , LST_SCRIN_REQ_URI, DUP_LGN_TIME, SESSION_VLD_YN
        from CMD_SESSIONS
        where USER_ID = #{USER_ID}
        and rownum = 1
    </select>

    <!-- 세션 정보 로그아웃 -->
    <update id="updateSessionLogout" parameterType="map">
		update /* com.nbdf.cmd.cm.cmsy.dao.CMSY00100Dao.updateSessionLogout */
		CMD_SESSIONS set
		  DUP_LGN_TIME = sysdate,
		  SESSION_VLD_YN = 'N',
		  LAST_UPDATED_BY= #{gv_userAcnt},
		  LAST_UPDATE_DATE = sysdate
		where
		USER_ID = #{gv_userId}
		<if test="CNCT_IP != null and CNCT_IP != '' ">
		  and LGN_IP = #{CNCT_IP}
		</if>
    </update>  

    <!-- 세션 정보 로그아웃 -->
    <update id="deleteSession" parameterType="map">
		delete /* com.nbdf.cmd.cm.cmsy.dao.CMSY00100Dao.deleteSession */
		from CMD_SESSIONS 
		where USER_ID = #{USER_ID}
		AND SESSION_GUID != #{SESSION_GUID} 
		and last_update_date <![CDATA[<]]> sysdate - 1
    </update>  
    
    <!-- 로그인 성공 : 비밀번호 실패 카운트 초기화 -->
    <update id="updatePwdErrCntInit" parameterType="map">
	update /* com.nbdf.cmd.cm.cmsy.dao.CMSY00100Dao.updatePwdErrCntInit */
	CMD_USERS
	set PWD_ERR_CNT= 0, LAST_LGN_DTM = sysdate, LAST_LGN_IP = #{CNCT_IP},
	LAST_UPDATED_BY = nvl(#{LAST_UPDATED_BY},(select id from cmd_users where user_id=#{USER_ID})),
	LAST_UPDATE_DATE = sysdate
	where USER_ID=#{USER_ID}
    </update>

    <!-- 비밀번호 변경 -->
    <update id="updateChangeUserPw" parameterType="map">
        /* com.nbdf.cmd.cm.cmsy.dao.CMSY00100Dao.updateUserPw */
        update CMD_USERS set
		  USER_PWD = #{NEW_USER_PWD},
		  PWD_CHANGE_DATE =  to_char(sysdate, 'yyyymmdd'),
		  PWD_ERR_CNT = 0,
		  LAST_UPDATED_BY = #{LAST_UPDATED_BY},
		  LAST_UPDATE_DATE = sysdate
		where USER_ID = #{USER_ID}
    </update>
    
    <!-- 비밀번호 이력 저장 -->
    <insert id="insertCmdPwdAltHst" parameterType="map">
        insert /* com.nbdf.cmd.cm.cmsy.dao.CMSY00100Dao.insertCmdPwdAltHst */
        into CMD_PWD_ALT_HST
        (
	        PWD_ALT_HST_ID, USER_ID, USER_PWD, PWD_ALT_DATE
        )
        values
        (
	        CMD_PWD_ALT_HST_S.nextval, #{USER_ID}, #{NEW_USER_PWD}, SYSDATE
         )
    </insert>

    <select id="selectExistPwd" parameterType="map" resultType="int">
        /* com.nbdf.cmd.cm.cmsy.dao.CMSY00100Dao.selectExistPwd */
       select count(*) from (
         SELECT USER_PWD,PWD_ALT_DATE,rownum as rn FROM (
            select * from CMD_PWD_ALT_HST 
            where USER_ID=#{USER_ID} 
            ORDER BY PWD_ALT_DATE DESC
          )
        )
        where rn between 2 and 3
        and USER_PWD=#{NEW_USER_PWD}

    </select>
      
</mapper>
